<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>13</index><block>3</block><killingTest>net.sf.javaml.core.AbstractInstance_ESTest.test00</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>3</block><killingTest>net.sf.javaml.core.AbstractInstance_ESTest.test00</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>3</block><killingTest>net.sf.javaml.core.AbstractInstance_ESTest.test00</killingTest><description>Removed assignment to member variable ID</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>20</index><block>3</block><killingTest>net.sf.javaml.core.AbstractInstance_ESTest.test00</killingTest><description>Removed assignment to member variable classValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>28</index><block>35</block><killingTest/><description>replaced call to net/sf/javaml/core/AbstractInstance::get with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>34</index><block>35</block><killingTest/><description>replaced call to net/sf/javaml/core/Instance::put with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><block>34</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>8</index><block>34</block><killingTest/><description>removed call to net/sf/javaml/core/DenseInstance::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>12</index><block>34</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>35</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>34</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>34</block><killingTest/><description>removed call to net/sf/javaml/core/AbstractInstance::noAttributes</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>18</index><block>34</block><killingTest/><description>removed call to net/sf/javaml/core/AbstractInstance::noAttributes</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>24</index><block>35</block><killingTest/><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>27</index><block>35</block><killingTest/><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>35</block><killingTest/><description>removed call to net/sf/javaml/core/AbstractInstance::get</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>30</index><block>35</block><killingTest/><description>removed call to java/lang/Double::doubleValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>33</index><block>35</block><killingTest/><description>removed call to java/lang/Double::valueOf</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>34</index><block>35</block><killingTest/><description>removed call to net/sf/javaml/core/Instance::put</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>44</index><block>36</block><killingTest/><description>replaced return value with null for net/sf/javaml/core/AbstractInstance::add</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>19</index><block>34</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>19</index><block>34</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>44</index><block>36</block><killingTest/><description>mutated return of Object value for net/sf/javaml/core/AbstractInstance::add to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>28</index><block>38</block><killingTest>net.sf.javaml.core.AbstractInstance_ESTest.test01</killingTest><description>replaced call to net/sf/javaml/core/AbstractInstance::get with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>34</index><block>38</block><killingTest>net.sf.javaml.core.AbstractInstance_ESTest.test01</killingTest><description>replaced call to net/sf/javaml/core/Instance::get with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>39</index><block>38</block><killingTest/><description>replaced call to net/sf/javaml/core/Instance::put with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><block>37</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>8</index><block>37</block><killingTest/><description>removed call to net/sf/javaml/core/DenseInstance::&#60;init&#62;</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>12</index><block>37</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>38</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>37</block><killingTest>net.sf.javaml.core.AbstractInstance_ESTest.test01</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>37</block><killingTest/><description>removed call to net/sf/javaml/core/AbstractInstance::noAttributes</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>18</index><block>37</block><killingTest>net.sf.javaml.core.AbstractInstance_ESTest.test01</killingTest><description>removed call to net/sf/javaml/core/AbstractInstance::noAttributes</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>24</index><block>38</block><killingTest/><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>27</index><block>38</block><killingTest>net.sf.javaml.core.AbstractInstance_ESTest.test01</killingTest><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>38</block><killingTest/><description>removed call to net/sf/javaml/core/AbstractInstance::get</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>30</index><block>38</block><killingTest/><description>removed call to java/lang/Double::doubleValue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>33</index><block>38</block><killingTest/><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>34</index><block>38</block><killingTest/><description>removed call to net/sf/javaml/core/Instance::get</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>36</index><block>38</block><killingTest/><description>removed call to java/lang/Double::doubleValue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>38</index><block>38</block><killingTest/><description>removed call to java/lang/Double::valueOf</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>39</index><block>38</block><killingTest/><description>removed call to net/sf/javaml/core/Instance::put</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>49</index><block>39</block><killingTest/><description>replaced return value with null for net/sf/javaml/core/AbstractInstance::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>19</index><block>37</block><killingTest>net.sf.javaml.core.AbstractInstance_ESTest.test01</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>19</index><block>37</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>49</index><block>39</block><killingTest/><description>mutated return of Object value for net/sf/javaml/core/AbstractInstance::add to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>classValue</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>5</index><block>4</block><killingTest/><description>replaced return value with null for net/sf/javaml/core/AbstractInstance::classValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>classValue</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>4</block><killingTest/><description>mutated return of Object value for net/sf/javaml/core/AbstractInstance::classValue to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>28</index><block>13</block><killingTest/><description>replaced call to net/sf/javaml/core/AbstractInstance::get with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>34</index><block>13</block><killingTest/><description>replaced call to net/sf/javaml/core/Instance::put with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><block>12</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>8</index><block>12</block><killingTest/><description>removed call to net/sf/javaml/core/DenseInstance::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>12</index><block>12</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>13</block><killingTest/><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>12</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>12</block><killingTest/><description>removed call to net/sf/javaml/core/AbstractInstance::noAttributes</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>18</index><block>12</block><killingTest/><description>removed call to net/sf/javaml/core/AbstractInstance::noAttributes</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>24</index><block>13</block><killingTest/><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>27</index><block>13</block><killingTest/><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>13</block><killingTest/><description>removed call to net/sf/javaml/core/AbstractInstance::get</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>30</index><block>13</block><killingTest/><description>removed call to java/lang/Double::doubleValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>33</index><block>13</block><killingTest/><description>removed call to java/lang/Double::valueOf</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>34</index><block>13</block><killingTest/><description>removed call to net/sf/javaml/core/Instance::put</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>44</index><block>14</block><killingTest/><description>replaced return value with null for net/sf/javaml/core/AbstractInstance::divide</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>19</index><block>12</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>19</index><block>12</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>44</index><block>14</block><killingTest/><description>mutated return of Object value for net/sf/javaml/core/AbstractInstance::divide to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>28</index><block>32</block><killingTest/><description>replaced call to net/sf/javaml/core/AbstractInstance::get with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>34</index><block>32</block><killingTest/><description>replaced call to net/sf/javaml/core/Instance::get with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>39</index><block>32</block><killingTest/><description>replaced call to net/sf/javaml/core/Instance::put with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><block>31</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>8</index><block>31</block><killingTest/><description>removed call to net/sf/javaml/core/DenseInstance::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>12</index><block>31</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>32</block><killingTest/><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>31</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>31</block><killingTest/><description>removed call to net/sf/javaml/core/AbstractInstance::noAttributes</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>18</index><block>31</block><killingTest/><description>removed call to net/sf/javaml/core/AbstractInstance::noAttributes</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>24</index><block>32</block><killingTest/><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>27</index><block>32</block><killingTest/><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>32</block><killingTest/><description>removed call to net/sf/javaml/core/AbstractInstance::get</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>30</index><block>32</block><killingTest/><description>removed call to java/lang/Double::doubleValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>33</index><block>32</block><killingTest/><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>34</index><block>32</block><killingTest/><description>removed call to net/sf/javaml/core/Instance::get</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>36</index><block>32</block><killingTest/><description>removed call to java/lang/Double::doubleValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>38</index><block>32</block><killingTest/><description>removed call to java/lang/Double::valueOf</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>39</index><block>32</block><killingTest/><description>removed call to net/sf/javaml/core/Instance::put</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>49</index><block>33</block><killingTest/><description>replaced return value with null for net/sf/javaml/core/AbstractInstance::divide</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>19</index><block>31</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>19</index><block>31</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>49</index><block>33</block><killingTest/><description>mutated return of Object value for net/sf/javaml/core/AbstractInstance::divide to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>9</index><block>20</block><killingTest/><description>replaced boolean return with false for net/sf/javaml/core/AbstractInstance::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>52</index><block>27</block><killingTest/><description>replaced boolean return with false for net/sf/javaml/core/AbstractInstance::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>18</index><block>22</block><killingTest/><description>replaced boolean return with true for net/sf/javaml/core/AbstractInstance::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>30</index><block>24</block><killingTest/><description>replaced boolean return with true for net/sf/javaml/core/AbstractInstance::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>47</index><block>26</block><killingTest/><description>replaced boolean return with true for net/sf/javaml/core/AbstractInstance::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>20</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>17</index><block>22</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>29</index><block>24</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>46</index><block>26</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>51</index><block>27</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>19</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>21</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>23</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>25</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>23</index><block>23</block><killingTest/><description>removed call to java/lang/Object::getClass</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>25</index><block>23</block><killingTest/><description>removed call to java/lang/Object::getClass</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>14</index><block>21</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>26</index><block>23</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>43</index><block>25</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>19</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>14</index><block>21</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>26</index><block>23</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>43</index><block>25</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>20</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>22</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>30</index><block>24</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>47</index><block>26</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>52</index><block>27</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>getID</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTest>net.sf.javaml.core.AbstractInstance_ESTest.test00</killingTest><description>replaced int return with 0 for net/sf/javaml/core/AbstractInstance::getID</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>getID</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTest>net.sf.javaml.core.AbstractInstance_ESTest.test00</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>18</block><killingTest/><description>replaced int return with 0 for net/sf/javaml/core/AbstractInstance::hashCode</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>18</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>iterator</mutatedMethod><methodDescription>()Ljava/util/Iterator;</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>6</index><block>1</block><killingTest/><description>removed call to net/sf/javaml/core/AbstractInstance$InstanceValueIterator::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>iterator</mutatedMethod><methodDescription>()Ljava/util/Iterator;</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>7</index><block>1</block><killingTest/><description>replaced return value with null for net/sf/javaml/core/AbstractInstance::iterator</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>iterator</mutatedMethod><methodDescription>()Ljava/util/Iterator;</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>1</block><killingTest/><description>mutated return of Object value for net/sf/javaml/core/AbstractInstance::iterator to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>minus</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>28</index><block>10</block><killingTest/><description>replaced call to net/sf/javaml/core/AbstractInstance::get with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>minus</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>34</index><block>10</block><killingTest/><description>replaced call to net/sf/javaml/core/Instance::put with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>minus</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><block>9</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>minus</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>8</index><block>9</block><killingTest/><description>removed call to net/sf/javaml/core/DenseInstance::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>minus</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>12</index><block>9</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>minus</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>10</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>minus</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>9</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>minus</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>9</block><killingTest/><description>removed call to net/sf/javaml/core/AbstractInstance::noAttributes</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>minus</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>18</index><block>9</block><killingTest/><description>removed call to net/sf/javaml/core/AbstractInstance::noAttributes</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>minus</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>24</index><block>10</block><killingTest/><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>minus</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>27</index><block>10</block><killingTest/><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>minus</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>10</block><killingTest/><description>removed call to net/sf/javaml/core/AbstractInstance::get</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>minus</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>30</index><block>10</block><killingTest/><description>removed call to java/lang/Double::doubleValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>minus</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>33</index><block>10</block><killingTest/><description>removed call to java/lang/Double::valueOf</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>minus</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>34</index><block>10</block><killingTest/><description>removed call to net/sf/javaml/core/Instance::put</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>minus</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>44</index><block>11</block><killingTest/><description>replaced return value with null for net/sf/javaml/core/AbstractInstance::minus</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>minus</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>19</index><block>9</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>minus</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>19</index><block>9</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>minus</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>44</index><block>11</block><killingTest/><description>mutated return of Object value for net/sf/javaml/core/AbstractInstance::minus to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>minus</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>28</index><block>7</block><killingTest/><description>replaced call to net/sf/javaml/core/AbstractInstance::get with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>minus</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>34</index><block>7</block><killingTest/><description>replaced call to net/sf/javaml/core/Instance::get with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>minus</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>39</index><block>7</block><killingTest/><description>replaced call to net/sf/javaml/core/Instance::put with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>minus</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><block>6</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>minus</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>8</index><block>6</block><killingTest/><description>removed call to net/sf/javaml/core/DenseInstance::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>minus</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>12</index><block>6</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>minus</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>7</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>minus</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>6</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>minus</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>6</block><killingTest/><description>removed call to net/sf/javaml/core/AbstractInstance::noAttributes</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>minus</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>18</index><block>6</block><killingTest/><description>removed call to net/sf/javaml/core/AbstractInstance::noAttributes</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>minus</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>24</index><block>7</block><killingTest/><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>minus</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>27</index><block>7</block><killingTest/><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>minus</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>7</block><killingTest/><description>removed call to net/sf/javaml/core/AbstractInstance::get</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>minus</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>30</index><block>7</block><killingTest/><description>removed call to java/lang/Double::doubleValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>minus</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>33</index><block>7</block><killingTest/><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>minus</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>34</index><block>7</block><killingTest/><description>removed call to net/sf/javaml/core/Instance::get</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>minus</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>36</index><block>7</block><killingTest/><description>removed call to java/lang/Double::doubleValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>minus</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>38</index><block>7</block><killingTest/><description>removed call to java/lang/Double::valueOf</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>minus</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>39</index><block>7</block><killingTest/><description>removed call to net/sf/javaml/core/Instance::put</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>minus</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>49</index><block>8</block><killingTest/><description>replaced return value with null for net/sf/javaml/core/AbstractInstance::minus</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>minus</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>19</index><block>6</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>minus</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>19</index><block>6</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>minus</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>49</index><block>8</block><killingTest/><description>mutated return of Object value for net/sf/javaml/core/AbstractInstance::minus to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>28</index><block>16</block><killingTest/><description>replaced call to net/sf/javaml/core/AbstractInstance::get with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>34</index><block>16</block><killingTest/><description>replaced call to net/sf/javaml/core/Instance::put with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><block>15</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>8</index><block>15</block><killingTest/><description>removed call to net/sf/javaml/core/DenseInstance::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>12</index><block>15</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>16</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>15</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>15</block><killingTest/><description>removed call to net/sf/javaml/core/AbstractInstance::noAttributes</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>18</index><block>15</block><killingTest/><description>removed call to net/sf/javaml/core/AbstractInstance::noAttributes</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>24</index><block>16</block><killingTest/><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>27</index><block>16</block><killingTest/><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>16</block><killingTest/><description>removed call to net/sf/javaml/core/AbstractInstance::get</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>30</index><block>16</block><killingTest/><description>removed call to java/lang/Double::doubleValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>33</index><block>16</block><killingTest/><description>removed call to java/lang/Double::valueOf</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>34</index><block>16</block><killingTest/><description>removed call to net/sf/javaml/core/Instance::put</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>44</index><block>17</block><killingTest/><description>replaced return value with null for net/sf/javaml/core/AbstractInstance::multiply</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>19</index><block>15</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>19</index><block>15</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(D)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>44</index><block>17</block><killingTest/><description>mutated return of Object value for net/sf/javaml/core/AbstractInstance::multiply to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>28</index><block>29</block><killingTest/><description>replaced call to net/sf/javaml/core/AbstractInstance::get with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>34</index><block>29</block><killingTest/><description>replaced call to net/sf/javaml/core/Instance::get with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>39</index><block>29</block><killingTest/><description>replaced call to net/sf/javaml/core/Instance::put with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><block>28</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>8</index><block>28</block><killingTest/><description>removed call to net/sf/javaml/core/DenseInstance::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>12</index><block>28</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>29</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>28</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>28</block><killingTest/><description>removed call to net/sf/javaml/core/AbstractInstance::noAttributes</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>18</index><block>28</block><killingTest/><description>removed call to net/sf/javaml/core/AbstractInstance::noAttributes</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>24</index><block>29</block><killingTest/><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>27</index><block>29</block><killingTest/><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>29</block><killingTest/><description>removed call to net/sf/javaml/core/AbstractInstance::get</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>30</index><block>29</block><killingTest/><description>removed call to java/lang/Double::doubleValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>33</index><block>29</block><killingTest/><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>34</index><block>29</block><killingTest/><description>removed call to net/sf/javaml/core/Instance::get</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>36</index><block>29</block><killingTest/><description>removed call to java/lang/Double::doubleValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>38</index><block>29</block><killingTest/><description>removed call to java/lang/Double::valueOf</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>39</index><block>29</block><killingTest/><description>removed call to net/sf/javaml/core/Instance::put</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>49</index><block>30</block><killingTest/><description>replaced return value with null for net/sf/javaml/core/AbstractInstance::multiply</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>19</index><block>28</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>19</index><block>28</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Instance;)Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>49</index><block>30</block><killingTest/><description>mutated return of Object value for net/sf/javaml/core/AbstractInstance::multiply to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>setClassValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>5</index><block>5</block><killingTest/><description>Removed assignment to member variable classValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>28</index><block>41</block><killingTest>net.sf.javaml.core.AbstractInstance_ESTest.test00</killingTest><description>replaced call to net/sf/javaml/core/AbstractInstance::get with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>31</index><block>41</block><killingTest>net.sf.javaml.core.AbstractInstance_ESTest.test00</killingTest><description>replaced call to java/lang/Math::sqrt with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>33</index><block>41</block><killingTest>net.sf.javaml.core.AbstractInstance_ESTest.test00</killingTest><description>replaced call to net/sf/javaml/core/Instance::put with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><block>40</block><killingTest>net.sf.javaml.core.AbstractInstance_ESTest.test00</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>8</index><block>40</block><killingTest>net.sf.javaml.core.AbstractInstance_ESTest.test00</killingTest><description>removed call to net/sf/javaml/core/DenseInstance::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>12</index><block>40</block><killingTest>net.sf.javaml.core.AbstractInstance_ESTest.test00</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>40</block><killingTest>net.sf.javaml.core.AbstractInstance_ESTest.test00</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>40</block><killingTest>net.sf.javaml.core.AbstractInstance_ESTest.test00</killingTest><description>removed call to net/sf/javaml/core/AbstractInstance::noAttributes</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>18</index><block>40</block><killingTest>net.sf.javaml.core.AbstractInstance_ESTest.test00</killingTest><description>removed call to net/sf/javaml/core/AbstractInstance::noAttributes</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>24</index><block>41</block><killingTest>net.sf.javaml.core.AbstractInstance_ESTest.test00</killingTest><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>27</index><block>41</block><killingTest>net.sf.javaml.core.AbstractInstance_ESTest.test00</killingTest><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>41</block><killingTest>net.sf.javaml.core.AbstractInstance_ESTest.test00</killingTest><description>removed call to net/sf/javaml/core/AbstractInstance::get</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>30</index><block>41</block><killingTest>net.sf.javaml.core.AbstractInstance_ESTest.test00</killingTest><description>removed call to java/lang/Double::doubleValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>31</index><block>41</block><killingTest>net.sf.javaml.core.AbstractInstance_ESTest.test00</killingTest><description>removed call to java/lang/Math::sqrt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>32</index><block>41</block><killingTest>net.sf.javaml.core.AbstractInstance_ESTest.test00</killingTest><description>removed call to java/lang/Double::valueOf</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>33</index><block>41</block><killingTest>net.sf.javaml.core.AbstractInstance_ESTest.test00</killingTest><description>removed call to net/sf/javaml/core/Instance::put</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>43</index><block>42</block><killingTest>net.sf.javaml.core.AbstractInstance_ESTest.test00</killingTest><description>replaced return value with null for net/sf/javaml/core/AbstractInstance::sqrt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>19</index><block>40</block><killingTest>net.sf.javaml.core.AbstractInstance_ESTest.test00</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>19</index><block>40</block><killingTest>net.sf.javaml.core.AbstractInstance_ESTest.test00</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstance.java</sourceFile><mutatedClass>net.sf.javaml.core.AbstractInstance</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>()Lnet/sf/javaml/core/Instance;</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>43</index><block>42</block><killingTest>net.sf.javaml.core.AbstractInstance_ESTest.test00</killingTest><description>mutated return of Object value for net/sf/javaml/core/AbstractInstance::sqrt to ( if (x != null) null else throw new RuntimeException )</description></mutation>
</mutations>

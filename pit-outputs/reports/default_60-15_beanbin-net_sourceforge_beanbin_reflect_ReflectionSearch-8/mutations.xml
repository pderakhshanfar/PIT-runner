<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Class;)V</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>15</index><block>0</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test14</killingTest><description>removed call to net/sourceforge/beanbin/query/Query::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Class;)V</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test05</killingTest><description>Removed assignment to member variable clazz</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Class;)V</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>16</index><block>0</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test14</killingTest><description>Removed assignment to member variable query</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>and</mutatedMethod><methodDescription>()Lnet/sourceforge/beanbin/reflect/ReflectionSearch;</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>10</index><block>19</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test14</killingTest><description>replaced return value with null for net/sourceforge/beanbin/reflect/ReflectionSearch::and</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>and</mutatedMethod><methodDescription>()Lnet/sourceforge/beanbin/reflect/ReflectionSearch;</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>19</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test14</killingTest><description>mutated return of Object value for net/sourceforge/beanbin/reflect/ReflectionSearch::and to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>and</mutatedMethod><methodDescription>()Lnet/sourceforge/beanbin/reflect/ReflectionSearch;</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>19</block><killingTest/><description>removed call to net/sourceforge/beanbin/query/Query::setNextConditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>getMethods</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>17</index><block>22</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test12</killingTest><description>removed call to java/util/ArrayList::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>getMethods</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>98</index><block>29</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test08</killingTest><description>replaced return value with Collections.emptyList for net/sourceforge/beanbin/reflect/ReflectionSearch::getMethods</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>getMethods</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>21</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test08</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>getMethods</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>23</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test08</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>getMethods</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>53</index><block>24</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test10</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>getMethods</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>58</index><block>25</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test10</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>getMethods</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>3</index><block>21</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test08</killingTest><description>removed call to net/sourceforge/beanbin/reflect/ReflectionShelf::getInstance</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>getMethods</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>21</block><killingTest/><description>removed call to net/sourceforge/beanbin/reflect/ReflectionShelf::get</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>getMethods</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>23</index><block>22</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test08</killingTest><description>removed call to net/sourceforge/beanbin/query/Query::getCriterias</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>getMethods</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>48</index><block>24</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test10</killingTest><description>removed call to net/sourceforge/beanbin/reflect/ReflectionCriteria::getPreviousCondition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>getMethods</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>64</index><block>26</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test11</killingTest><description>removed call to net/sourceforge/beanbin/reflect/ReflectionCriteria::getResults</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>getMethods</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>73</index><block>27</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test10</killingTest><description>removed call to net/sourceforge/beanbin/reflect/ReflectionCriteria::getResults</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>getMethods</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>80</index><block>28</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test08</killingTest><description>removed call to net/sourceforge/beanbin/reflect/ReflectionCriteria::getResults</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>getMethods</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>89</index><block>29</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test08</killingTest><description>removed call to net/sourceforge/beanbin/reflect/ReflectionShelf::getInstance</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>getMethods</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>12</index><block>21</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test08</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>getMethods</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>39</index><block>23</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test08</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>getMethods</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>53</index><block>24</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test10</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>getMethods</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>58</index><block>25</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test09</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>getMethods</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>12</index><block>21</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>getMethods</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>39</index><block>23</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>getMethods</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>53</index><block>24</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>getMethods</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>58</index><block>25</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test10</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>getMethods</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>98</index><block>29</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test08</killingTest><description>mutated return of Object value for net/sourceforge/beanbin/reflect/ReflectionSearch::getMethods to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>getMethods</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>65</index><block>26</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test09</killingTest><description>removed call to net/sourceforge/beanbin/reflect/ReflectionSearch::intersect</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>getMethods</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>74</index><block>27</block><killingTest/><description>removed call to net/sourceforge/beanbin/reflect/ReflectionSearch::union</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>getMethods</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>93</index><block>29</block><killingTest/><description>removed call to net/sourceforge/beanbin/reflect/ReflectionShelf::put</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>68</index><block>4</block><killingTest/><description>replaced boolean return with false for net/sourceforge/beanbin/reflect/ReflectionSearch::hasAnnotation</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>79</index><block>6</block><killingTest/><description>replaced boolean return with false for net/sourceforge/beanbin/reflect/ReflectionSearch::hasAnnotation</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>94</index><block>9</block><killingTest/><description>replaced boolean return with false for net/sourceforge/beanbin/reflect/ReflectionSearch::hasAnnotation</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>105</index><block>11</block><killingTest/><description>replaced boolean return with false for net/sourceforge/beanbin/reflect/ReflectionSearch::hasAnnotation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>115</index><block>13</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test13</killingTest><description>replaced boolean return with true for net/sourceforge/beanbin/reflect/ReflectionSearch::hasAnnotation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>1</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test07</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>57</index><block>3</block><killingTest/><description>removed call to net/sourceforge/beanbin/search/WildcardSearch::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>109</index><block>12</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test07</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>12</index><block>1</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test07</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>35</index><block>2</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>43</index><block>2</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>67</index><block>4</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>78</index><block>6</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>93</index><block>9</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>104</index><block>11</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>114</index><block>13</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test13</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>36</index><block>2</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>1</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test07</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><block>2</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>64</index><block>3</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>75</index><block>5</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>90</index><block>8</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>101</index><block>10</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>1</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test07</killingTest><description>removed call to java/lang/Class::getAnnotations</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>26</index><block>2</block><killingTest/><description>removed call to java/lang/annotation/Annotation::annotationType</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>27</index><block>2</block><killingTest/><description>removed call to java/lang/Class::getName</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>34</index><block>2</block><killingTest/><description>removed call to java/lang/String::lastIndexOf</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>37</index><block>2</block><killingTest/><description>removed call to java/lang/String::substring</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>42</index><block>2</block><killingTest/><description>removed call to java/lang/String::toString</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>44</index><block>2</block><killingTest/><description>removed call to java/lang/String::substring</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>50</index><block>2</block><killingTest/><description>removed call to net/sourceforge/beanbin/reflect/ReflectionSearch::hasWildcard</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>63</index><block>3</block><killingTest/><description>removed call to net/sourceforge/beanbin/search/WildcardSearch::doesMatch</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>74</index><block>5</block><killingTest/><description>removed call to net/sourceforge/beanbin/search/WildcardSearch::doesMatch</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>89</index><block>8</block><killingTest/><description>removed call to java/lang/String::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>100</index><block>10</block><killingTest/><description>removed call to java/lang/String::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>51</index><block>2</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>64</index><block>3</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>75</index><block>5</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>90</index><block>8</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>101</index><block>10</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>51</index><block>2</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>64</index><block>3</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>75</index><block>5</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>90</index><block>8</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>101</index><block>10</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>18</index><block>1</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test07</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>18</index><block>1</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test07</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>68</index><block>4</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>79</index><block>6</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>94</index><block>9</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>105</index><block>11</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>115</index><block>13</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test13</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>37</index><block>2</block><killingTest/><description>replaced call to java/lang/String::substring with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>42</index><block>2</block><killingTest/><description>replaced call to java/lang/String::toString with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasAnnotation</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>44</index><block>2</block><killingTest/><description>replaced call to java/lang/String::substring with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasWildcard</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>15</index><block>16</block><killingTest/><description>replaced boolean return with true for net/sourceforge/beanbin/reflect/ReflectionSearch::hasWildcard</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasWildcard</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><block>14</block><killingTest/><description>Substituted -1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasWildcard</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>15</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasWildcard</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>12</index><block>16</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasWildcard</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>14</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasWildcard</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>14</block><killingTest/><description>removed call to java/lang/String::indexOf</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasWildcard</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>7</index><block>14</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasWildcard</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>7</index><block>14</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>hasWildcard</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>16</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>intersect</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/util/List;)V</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>30</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test11</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>intersect</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/util/List;)V</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>23</index><block>32</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test09</killingTest><description>Changed increment from -1 to 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>intersect</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/util/List;)V</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>30</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test09</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>intersect</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/util/List;)V</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>30</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test09</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>intersect</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/util/List;)V</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>31</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test11</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>intersect</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/util/List;)V</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>30</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test06</killingTest><description>removed call to java/util/List::size</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>intersect</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/util/List;)V</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>16</index><block>31</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test11</killingTest><description>removed call to java/util/List::get</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>intersect</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/util/List;)V</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>17</index><block>31</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test11</killingTest><description>removed call to java/util/List::contains</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>intersect</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/util/List;)V</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>24</index><block>32</block><killingTest/><description>removed call to java/util/List::remove</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>intersect</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/util/List;)V</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>18</index><block>31</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test09</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>intersect</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/util/List;)V</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>18</index><block>31</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test11</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>intersect</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/util/List;)V</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>10</index><block>30</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test09</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>intersect</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/util/List;)V</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>10</index><block>30</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test11</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>intersect</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/util/List;)V</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>23</index><block>32</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test09</killingTest><description>Removed increment -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>methodsThatDontHave</mutatedMethod><methodDescription>(Ljava/lang/String;)Lnet/sourceforge/beanbin/reflect/ReflectionSearch;</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>11</index><block>18</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test05</killingTest><description>removed call to net/sourceforge/beanbin/reflect/MethodReflectionCriteria::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>methodsThatDontHave</mutatedMethod><methodDescription>(Ljava/lang/String;)Lnet/sourceforge/beanbin/reflect/ReflectionSearch;</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>16</index><block>18</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test08</killingTest><description>replaced return value with null for net/sourceforge/beanbin/reflect/ReflectionSearch::methodsThatDontHave</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>methodsThatDontHave</mutatedMethod><methodDescription>(Ljava/lang/String;)Lnet/sourceforge/beanbin/reflect/ReflectionSearch;</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>18</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test08</killingTest><description>mutated return of Object value for net/sourceforge/beanbin/reflect/ReflectionSearch::methodsThatDontHave to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>methodsThatDontHave</mutatedMethod><methodDescription>(Ljava/lang/String;)Lnet/sourceforge/beanbin/reflect/ReflectionSearch;</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><block>18</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test08</killingTest><description>removed call to net/sourceforge/beanbin/query/Query::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>methodsThatHave</mutatedMethod><methodDescription>(Ljava/lang/String;)Lnet/sourceforge/beanbin/reflect/ReflectionSearch;</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>11</index><block>17</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test10</killingTest><description>removed call to net/sourceforge/beanbin/reflect/MethodReflectionCriteria::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>methodsThatHave</mutatedMethod><methodDescription>(Ljava/lang/String;)Lnet/sourceforge/beanbin/reflect/ReflectionSearch;</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>16</index><block>17</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test10</killingTest><description>replaced return value with null for net/sourceforge/beanbin/reflect/ReflectionSearch::methodsThatHave</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>methodsThatHave</mutatedMethod><methodDescription>(Ljava/lang/String;)Lnet/sourceforge/beanbin/reflect/ReflectionSearch;</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>17</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test10</killingTest><description>mutated return of Object value for net/sourceforge/beanbin/reflect/ReflectionSearch::methodsThatHave to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>methodsThatHave</mutatedMethod><methodDescription>(Ljava/lang/String;)Lnet/sourceforge/beanbin/reflect/ReflectionSearch;</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><block>17</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test09</killingTest><description>removed call to net/sourceforge/beanbin/query/Query::add</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>or</mutatedMethod><methodDescription>()Lnet/sourceforge/beanbin/reflect/ReflectionSearch;</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>10</index><block>20</block><killingTest/><description>replaced return value with null for net/sourceforge/beanbin/reflect/ReflectionSearch::or</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>or</mutatedMethod><methodDescription>()Lnet/sourceforge/beanbin/reflect/ReflectionSearch;</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>20</block><killingTest/><description>mutated return of Object value for net/sourceforge/beanbin/reflect/ReflectionSearch::or to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>or</mutatedMethod><methodDescription>()Lnet/sourceforge/beanbin/reflect/ReflectionSearch;</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>20</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test10</killingTest><description>removed call to net/sourceforge/beanbin/query/Query::setNextConditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>union</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/util/List;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>35</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test08</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>union</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/util/List;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>19</index><block>35</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test08</killingTest><description>removed call to java/util/List::contains</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>union</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/util/List;)V</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>25</index><block>36</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test08</killingTest><description>removed call to java/util/List::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>union</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/util/List;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>20</index><block>35</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test08</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ReflectionSearch.java</sourceFile><mutatedClass>net.sourceforge.beanbin.reflect.ReflectionSearch</mutatedClass><mutatedMethod>union</mutatedMethod><methodDescription>(Ljava/util/List;Ljava/util/List;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>20</index><block>35</block><killingTest>net.sourceforge.beanbin.reflect.ReflectionSearch_ESTest.test08</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
</mutations>

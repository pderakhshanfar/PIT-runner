<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>0</block><killingTest/><description>Substituted 1.0 with 2.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test05</killingTest><description>removed call to org/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex::createHypercubeSteps</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>49</index><block>6</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test05</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>66</index><block>7</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test05</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>13</index><block>3</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test15</killingTest><description>removed call to org/apache/commons/math3/exception/NullArgumentException::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>24</index><block>5</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test14</killingTest><description>removed call to org/apache/commons/math3/exception/ZeroException::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>82</index><block>9</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test13</killingTest><description>removed call to org/apache/commons/math3/exception/ZeroException::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>96</index><block>10</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test05</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>100</index><block>11</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test05</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>43</index><block>6</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>59</index><block>7</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>64</index><block>7</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>72</index><block>8</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test05</killingTest><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>80</index><block>9</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>87</index><block>10</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test05</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>89</index><block>10</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test05</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>91</index><block>10</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>65</index><block>7</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>92</index><block>10</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test05</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>2</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test05</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>4</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test05</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>49</index><block>6</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test13</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>7</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test13</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>74</index><block>8</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test05</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>8</index><block>2</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test15</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>19</index><block>4</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test14</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>74</index><block>8</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test13</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>8</index><block>2</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test05</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>19</index><block>4</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test05</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>74</index><block>8</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test05</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>49</index><block>6</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test13</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>66</index><block>7</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test13</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>49</index><block>6</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test05</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>66</index><block>7</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test05</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>93</index><block>10</block><killingTest/><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>31</index><block>6</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test02</killingTest><description>Removed assignment to member variable dimension</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>40</index><block>6</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test05</killingTest><description>Removed assignment to member variable startConfiguration</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>100</index><block>11</block><killingTest/><description>Removed increment 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>13</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test11</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>51</index><block>15</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test12</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>82</index><block>18</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test12</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>101</index><block>19</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test10</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>153</index><block>26</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test10</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>171</index><block>27</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test09</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>18</index><block>14</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test11</killingTest><description>removed call to org/apache/commons/math3/exception/NotStrictlyPositiveException::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>73</index><block>17</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test09</killingTest><description>removed call to org/apache/commons/math3/exception/DimensionMismatchException::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>144</index><block>24</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test10</killingTest><description>removed call to org/apache/commons/math3/exception/MathIllegalArgumentException::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>121</index><block>22</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test10</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>148</index><block>25</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test09</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>186</index><block>28</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test09</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>190</index><block>29</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test10</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>25</index><block>15</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test12</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>40</index><block>15</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test12</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>45</index><block>15</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>77</index><block>18</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>91</index><block>19</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>95</index><block>19</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>114</index><block>21</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>132</index><block>24</block><killingTest/><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>135</index><block>24</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>140</index><block>24</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>159</index><block>27</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>165</index><block>27</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><block>15</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test12</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>160</index><block>27</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>182</index><block>28</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>13</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test11</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><block>15</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test10</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>64</index><block>16</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test12</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>82</index><block>18</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test12</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>101</index><block>19</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>111</index><block>20</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>126</index><block>23</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>153</index><block>26</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test10</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>171</index><block>27</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>17</index><block>14</block><killingTest/><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>137</index><block>24</block><killingTest/><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>142</index><block>24</block><killingTest/><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>64</index><block>16</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test09</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>111</index><block>20</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>126</index><block>23</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>64</index><block>16</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test12</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>111</index><block>20</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>126</index><block>23</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>9</index><block>13</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test11</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>51</index><block>15</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test10</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>82</index><block>18</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>101</index><block>19</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>153</index><block>26</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>171</index><block>27</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>9</index><block>13</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test12</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>51</index><block>15</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test12</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>82</index><block>18</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test12</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>101</index><block>19</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test10</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>153</index><block>26</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test10</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>171</index><block>27</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test09</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>27</index><block>15</block><killingTest/><description>Removed assignment to member variable dimension</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>36</index><block>15</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test09</killingTest><description>Removed assignment to member variable startConfiguration</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>121</index><block>22</block><killingTest/><description>Removed increment 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>148</index><block>25</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test09</killingTest><description>Removed increment 1</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>190</index><block>29</block><killingTest/><description>Removed increment 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>46</index><block>35</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test02</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>68</index><block>36</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test02</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>16</index><block>34</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test08</killingTest><description>removed call to org/apache/commons/math3/exception/DimensionMismatchException::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>36</index><block>35</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test07</killingTest><description>removed call to org/apache/commons/math3/optim/PointValuePair::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>96</index><block>38</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test07</killingTest><description>removed call to org/apache/commons/math3/optim/PointValuePair::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>83</index><block>37</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test02</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>100</index><block>38</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test02</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>23</index><block>35</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test02</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>31</index><block>35</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test07</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>35</index><block>35</block><killingTest/><description>Substituted NaN with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>40</index><block>35</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test07</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>62</index><block>36</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>90</index><block>38</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test07</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>95</index><block>38</block><killingTest/><description>Substituted NaN with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>35</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test02</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>229</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>79</index><block>37</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>91</index><block>38</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test02</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>33</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test08</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>35</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test07</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>68</index><block>36</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>7</index><block>33</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test08</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>7</index><block>33</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test02</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>46</index><block>35</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test07</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>68</index><block>36</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>46</index><block>35</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test02</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>68</index><block>36</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test02</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>26</index><block>35</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test02</killingTest><description>Removed assignment to member variable simplex</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>build</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>100</index><block>38</block><killingTest/><description>Removed increment 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>createHypercubeSteps</mutatedMethod><methodDescription>(ID)[D</methodDescription><lineNumber>340</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><block>60</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test05</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>createHypercubeSteps</mutatedMethod><methodDescription>(ID)[D</methodDescription><lineNumber>340</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>22</index><block>61</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test05</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>createHypercubeSteps</mutatedMethod><methodDescription>(ID)[D</methodDescription><lineNumber>340</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>60</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test05</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>createHypercubeSteps</mutatedMethod><methodDescription>(ID)[D</methodDescription><lineNumber>340</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>60</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test05</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>createHypercubeSteps</mutatedMethod><methodDescription>(ID)[D</methodDescription><lineNumber>343</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>27</index><block>62</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test05</killingTest><description>replaced return value with null for org/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex::createHypercubeSteps</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>createHypercubeSteps</mutatedMethod><methodDescription>(ID)[D</methodDescription><lineNumber>340</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>13</index><block>60</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test05</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>createHypercubeSteps</mutatedMethod><methodDescription>(ID)[D</methodDescription><lineNumber>340</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>13</index><block>60</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test05</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>createHypercubeSteps</mutatedMethod><methodDescription>(ID)[D</methodDescription><lineNumber>343</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>27</index><block>62</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test05</killingTest><description>mutated return of Object value for org/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex::createHypercubeSteps to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>40</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test07</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>43</index><block>42</block><killingTest/><description>removed call to org/apache/commons/math3/optim/PointValuePair::&#60;init&#62;</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>40</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>42</index><block>42</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>40</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>41</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>21</index><block>41</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test07</killingTest><description>removed call to org/apache/commons/math3/optim/PointValuePair::getPointRef</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>26</index><block>41</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test07</killingTest><description>removed call to org/apache/commons/math3/optim/PointValuePair::getValue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>41</block><killingTest/><description>removed call to java/lang/Double::doubleValue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>29</index><block>41</block><killingTest/><description>removed call to java/lang/Double::isNaN</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>41</index><block>42</block><killingTest/><description>removed call to org/apache/commons/math3/analysis/MultivariateFunction::value</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>30</index><block>41</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>30</index><block>41</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>10</index><block>40</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>10</index><block>40</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test07</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>54</index><block>43</block><killingTest/><description>removed call to java/util/Arrays::sort</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>getDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>31</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test07</killingTest><description>replaced int return with 0 for org/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex::getDimension</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>getDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>31</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test12</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>getPoint</mutatedMethod><methodDescription>(I)Lorg/apache/commons/math3/optim/PointValuePair;</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>49</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test07</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>getPoint</mutatedMethod><methodDescription>(I)Lorg/apache/commons/math3/optim/PointValuePair;</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>50</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>getPoint</mutatedMethod><methodDescription>(I)Lorg/apache/commons/math3/optim/PointValuePair;</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>24</index><block>51</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test04</killingTest><description>removed call to org/apache/commons/math3/exception/OutOfRangeException::&#60;init&#62;</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>getPoint</mutatedMethod><methodDescription>(I)Lorg/apache/commons/math3/optim/PointValuePair;</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>16</index><block>51</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>getPoint</mutatedMethod><methodDescription>(I)Lorg/apache/commons/math3/optim/PointValuePair;</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>21</index><block>51</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>getPoint</mutatedMethod><methodDescription>(I)Lorg/apache/commons/math3/optim/PointValuePair;</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>51</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>getPoint</mutatedMethod><methodDescription>(I)Lorg/apache/commons/math3/optim/PointValuePair;</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>49</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test07</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>getPoint</mutatedMethod><methodDescription>(I)Lorg/apache/commons/math3/optim/PointValuePair;</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>50</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test04</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>getPoint</mutatedMethod><methodDescription>(I)Lorg/apache/commons/math3/optim/PointValuePair;</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>15</index><block>51</block><killingTest/><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>getPoint</mutatedMethod><methodDescription>(I)Lorg/apache/commons/math3/optim/PointValuePair;</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>17</index><block>51</block><killingTest/><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>getPoint</mutatedMethod><methodDescription>(I)Lorg/apache/commons/math3/optim/PointValuePair;</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>23</index><block>51</block><killingTest/><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>getPoint</mutatedMethod><methodDescription>(I)Lorg/apache/commons/math3/optim/PointValuePair;</methodDescription><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>32</index><block>52</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test07</killingTest><description>replaced return value with null for org/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex::getPoint</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>getPoint</mutatedMethod><methodDescription>(I)Lorg/apache/commons/math3/optim/PointValuePair;</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>4</index><block>49</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test07</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>getPoint</mutatedMethod><methodDescription>(I)Lorg/apache/commons/math3/optim/PointValuePair;</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>9</index><block>50</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test04</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>getPoint</mutatedMethod><methodDescription>(I)Lorg/apache/commons/math3/optim/PointValuePair;</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>4</index><block>49</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>getPoint</mutatedMethod><methodDescription>(I)Lorg/apache/commons/math3/optim/PointValuePair;</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>9</index><block>50</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test07</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>getPoint</mutatedMethod><methodDescription>(I)Lorg/apache/commons/math3/optim/PointValuePair;</methodDescription><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>32</index><block>52</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test07</killingTest><description>mutated return of Object value for org/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex::getPoint to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>getPoints</mutatedMethod><methodDescription>()[Lorg/apache/commons/math3/optim/PointValuePair;</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>12</index><block>48</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>getPoints</mutatedMethod><methodDescription>()[Lorg/apache/commons/math3/optim/PointValuePair;</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>14</index><block>48</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>getPoints</mutatedMethod><methodDescription>()[Lorg/apache/commons/math3/optim/PointValuePair;</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>22</index><block>48</block><killingTest/><description>replaced return value with null for org/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex::getPoints</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>getPoints</mutatedMethod><methodDescription>()[Lorg/apache/commons/math3/optim/PointValuePair;</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>22</index><block>48</block><killingTest/><description>mutated return of Object value for org/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex::getPoints to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>getPoints</mutatedMethod><methodDescription>()[Lorg/apache/commons/math3/optim/PointValuePair;</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>48</block><killingTest/><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>getSize</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>6</index><block>32</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test06</killingTest><description>replaced int return with 0 for org/apache/commons/math3/optim/nonlinear/scalar/noderiv/AbstractSimplex::getSize</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>getSize</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>32</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test06</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>replaceWorstPoint</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/PointValuePair;Ljava/util/Comparator;)V</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>44</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>replaceWorstPoint</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/PointValuePair;Ljava/util/Comparator;)V</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><block>45</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>replaceWorstPoint</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/PointValuePair;Ljava/util/Comparator;)V</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>40</index><block>46</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test07</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>replaceWorstPoint</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/PointValuePair;Ljava/util/Comparator;)V</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>44</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>replaceWorstPoint</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/PointValuePair;Ljava/util/Comparator;)V</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>44</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>replaceWorstPoint</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/PointValuePair;Ljava/util/Comparator;)V</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>45</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>replaceWorstPoint</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/PointValuePair;Ljava/util/Comparator;)V</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>18</index><block>45</block><killingTest/><description>removed call to java/util/Comparator::compare</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>replaceWorstPoint</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/PointValuePair;Ljava/util/Comparator;)V</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>9</index><block>44</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>replaceWorstPoint</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/PointValuePair;Ljava/util/Comparator;)V</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>19</index><block>45</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>replaceWorstPoint</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/PointValuePair;Ljava/util/Comparator;)V</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>9</index><block>44</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test07</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>replaceWorstPoint</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optim/PointValuePair;Ljava/util/Comparator;)V</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>19</index><block>45</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>setPoint</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/optim/PointValuePair;)V</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>53</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>setPoint</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/optim/PointValuePair;)V</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>54</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>setPoint</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/optim/PointValuePair;)V</methodDescription><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>24</index><block>55</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test02</killingTest><description>removed call to org/apache/commons/math3/exception/OutOfRangeException::&#60;init&#62;</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>setPoint</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/optim/PointValuePair;)V</methodDescription><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>16</index><block>55</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>setPoint</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/optim/PointValuePair;)V</methodDescription><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>21</index><block>55</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>setPoint</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/optim/PointValuePair;)V</methodDescription><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>55</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>setPoint</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/optim/PointValuePair;)V</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>53</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test07</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>setPoint</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/optim/PointValuePair;)V</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>54</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test02</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>setPoint</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/optim/PointValuePair;)V</methodDescription><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>15</index><block>55</block><killingTest/><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>setPoint</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/optim/PointValuePair;)V</methodDescription><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>17</index><block>55</block><killingTest/><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>setPoint</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/optim/PointValuePair;)V</methodDescription><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>23</index><block>55</block><killingTest/><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>setPoint</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/optim/PointValuePair;)V</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>4</index><block>53</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test07</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>setPoint</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/optim/PointValuePair;)V</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>9</index><block>54</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test02</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>setPoint</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/optim/PointValuePair;)V</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>4</index><block>53</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>setPoint</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/optim/PointValuePair;)V</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>9</index><block>54</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test07</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>setPoints</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optim/PointValuePair;)V</methodDescription><lineNumber>325</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>18</index><block>58</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test00</killingTest><description>removed call to org/apache/commons/math3/exception/DimensionMismatchException::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>setPoints</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optim/PointValuePair;)V</methodDescription><lineNumber>324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>57</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test01</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>setPoints</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optim/PointValuePair;)V</methodDescription><lineNumber>324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>8</index><block>57</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test00</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>setPoints</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optim/PointValuePair;)V</methodDescription><lineNumber>324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>8</index><block>57</block><killingTest>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex_ESTest.test01</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AbstractSimplex.java</sourceFile><mutatedClass>org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex</mutatedClass><mutatedMethod>setPoints</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optim/PointValuePair;)V</methodDescription><lineNumber>327</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>24</index><block>59</block><killingTest/><description>Removed assignment to member variable simplex</description></mutation>
</mutations>

<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)V</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>10</index><block>5</block><killingTest/><description>replaced call to org/apache/commons/math3/dfp/DfpDec::round with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)V</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>9</index><block>5</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)V</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>5</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::round</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;D)V</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>11</index><block>4</block><killingTest/><description>replaced call to org/apache/commons/math3/dfp/DfpDec::round with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;D)V</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>10</index><block>4</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;D)V</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>11</index><block>4</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::round</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>11</index><block>6</block><killingTest/><description>replaced call to org/apache/commons/math3/dfp/DfpDec::round with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>10</index><block>6</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>11</index><block>6</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::round</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>getDecimalDigits</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>18</block><killingTest/><description>Substituted 4 with 5</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>getDecimalDigits</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>7</index><block>18</block><killingTest/><description>Substituted 3 with 4</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>getDecimalDigits</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>18</block><killingTest/><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>getDecimalDigits</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><block>18</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>getDecimalDigits</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>18</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::getRadixDigits</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>getDecimalDigits</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>9</index><block>18</block><killingTest/><description>replaced int return with 0 for org/apache/commons/math3/dfp/DfpDec::getDecimalDigits</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>getDecimalDigits</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>18</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>7</index><block>8</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>8</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::getField</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>8</index><block>8</block><killingTest/><description>replaced return value with null for org/apache/commons/math3/dfp/DfpDec::newInstance</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>8</block><killingTest/><description>mutated return of Object value for org/apache/commons/math3/dfp/DfpDec::newInstance to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>(B)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>8</index><block>9</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>(B)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>9</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::getField</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>(B)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>9</index><block>9</block><killingTest/><description>replaced return value with null for org/apache/commons/math3/dfp/DfpDec::newInstance</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>(B)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>9</block><killingTest/><description>mutated return of Object value for org/apache/commons/math3/dfp/DfpDec::newInstance to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>(BB)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>9</index><block>17</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>(BB)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>17</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::getField</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>(BB)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>10</index><block>17</block><killingTest/><description>replaced return value with null for org/apache/commons/math3/dfp/DfpDec::newInstance</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>(BB)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>17</block><killingTest/><description>mutated return of Object value for org/apache/commons/math3/dfp/DfpDec::newInstance to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>8</index><block>12</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>12</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::getField</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>9</index><block>12</block><killingTest/><description>replaced return value with null for org/apache/commons/math3/dfp/DfpDec::newInstance</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>(D)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>12</block><killingTest/><description>mutated return of Object value for org/apache/commons/math3/dfp/DfpDec::newInstance to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>(I)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>8</index><block>10</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>(I)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>10</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::getField</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>(I)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>9</index><block>10</block><killingTest/><description>replaced return value with null for org/apache/commons/math3/dfp/DfpDec::newInstance</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>(I)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>10</block><killingTest/><description>mutated return of Object value for org/apache/commons/math3/dfp/DfpDec::newInstance to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>(J)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>8</index><block>11</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>(J)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>11</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::getField</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>(J)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>9</index><block>11</block><killingTest/><description>replaced return value with null for org/apache/commons/math3/dfp/DfpDec::newInstance</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>(J)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>11</block><killingTest/><description>mutated return of Object value for org/apache/commons/math3/dfp/DfpDec::newInstance to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>8</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::getField</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>9</index><block>16</block><killingTest/><description>replaced return value with null for org/apache/commons/math3/dfp/DfpDec::newInstance</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>16</block><killingTest/><description>mutated return of Object value for org/apache/commons/math3/dfp/DfpDec::newInstance to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>21</index><block>14</block><killingTest/><description>replaced call to org/apache/commons/math3/dfp/DfpDec::newInstance with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>35</index><block>14</block><killingTest/><description>replaced call to org/apache/commons/math3/dfp/DfpDec::dotrap with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>42</index><block>15</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>14</index><block>14</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>26</index><block>14</block><killingTest/><description>Substituted 3 with 4</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>31</index><block>14</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>13</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>13</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::getField</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>13</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpField::getRadixDigits</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>13</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/Dfp::getField</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><block>13</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpField::getRadixDigits</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>14</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::getField</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>20</index><block>14</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::getZero</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>21</index><block>14</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::newInstance</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>35</index><block>14</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::dotrap</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>36</index><block>14</block><killingTest/><description>replaced return value with null for org/apache/commons/math3/dfp/DfpDec::newInstance</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>43</index><block>15</block><killingTest/><description>replaced return value with null for org/apache/commons/math3/dfp/DfpDec::newInstance</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>9</index><block>13</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>9</index><block>13</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>36</index><block>14</block><killingTest/><description>mutated return of Object value for org/apache/commons/math3/dfp/DfpDec::newInstance to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>43</index><block>15</block><killingTest/><description>mutated return of Object value for org/apache/commons/math3/dfp/DfpDec::newInstance to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>14</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpField::setIEEEFlagsBits</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>newInstance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>27</index><block>14</block><killingTest/><description>Removed assignment to member variable nans</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>25</index><block>81</block><killingTest/><description>replaced call to org/apache/commons/math3/dfp/DfpDec::newInstance with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>39</index><block>81</block><killingTest/><description>replaced call to org/apache/commons/math3/dfp/DfpDec::dotrap with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>314</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>65</index><block>84</block><killingTest/><description>replaced call to org/apache/commons/math3/dfp/DfpDec::newInstance with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>104</index><block>89</block><killingTest/><description>replaced call to org/apache/commons/math3/dfp/DfpDec::copysign with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>137</index><block>91</block><killingTest/><description>replaced call to org/apache/commons/math3/dfp/DfpDec::newInstance with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>139</index><block>91</block><killingTest/><description>replaced call to org/apache/commons/math3/dfp/DfpDec::copysign with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>147</index><block>92</block><killingTest/><description>replaced call to org/apache/commons/math3/dfp/DfpDec::add with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>162</index><block>93</block><killingTest/><description>replaced call to org/apache/commons/math3/dfp/DfpDec::copysign with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>177</index><block>94</block><killingTest/><description>replaced call to org/apache/commons/math3/dfp/Dfp::divide with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>189</index><block>95</block><killingTest/><description>replaced call to org/apache/commons/math3/dfp/Dfp::divide with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>222</index><block>97</block><killingTest/><description>replaced call to org/apache/commons/math3/dfp/DfpDec::newInstance with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>224</index><block>97</block><killingTest/><description>replaced call to org/apache/commons/math3/dfp/DfpDec::copysign with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>232</index><block>98</block><killingTest/><description>replaced call to org/apache/commons/math3/dfp/DfpDec::subtract with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>257</index><block>100</block><killingTest/><description>replaced call to org/apache/commons/math3/dfp/DfpDec::dotrap with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>284</index><block>102</block><killingTest/><description>replaced call to org/apache/commons/math3/dfp/DfpDec::dotrap with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>18</index><block>81</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>30</index><block>81</block><killingTest/><description>Substituted 3 with 4</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>35</index><block>81</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>43</index><block>82</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>53</index><block>83</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>78</index><block>87</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>81</index><block>88</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>96</index><block>89</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>116</index><block>90</block><killingTest/><description>Substituted -32767 with -32766</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>121</index><block>90</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>186</index><block>95</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>201</index><block>96</block><killingTest/><description>Substituted -32767 with -32766</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>206</index><block>96</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>238</index><block>98</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>242</index><block>99</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>248</index><block>100</block><killingTest/><description>Substituted 16 with 17</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>253</index><block>100</block><killingTest/><description>Substituted 16 with 17</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>275</index><block>102</block><killingTest/><description>Substituted 16 with 17</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>280</index><block>102</block><killingTest/><description>Substituted 16 with 17</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>95</index><block>89</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>97</index><block>89</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>120</index><block>90</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>122</index><block>90</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>187</index><block>95</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>205</index><block>96</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>207</index><block>96</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>80</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>82</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>313</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>60</index><block>83</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>317</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>73</index><block>85</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>77</index><block>86</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>87</index><block>88</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>325</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>112</index><block>89</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>131</index><block>90</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>169</index><block>93</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>344</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>197</index><block>95</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>216</index><block>96</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>239</index><block>98</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>243</index><block>99</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>265</index><block>100</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>270</index><block>101</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><block>80</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::getField</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>80</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpField::getRadixDigits</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>11</index><block>80</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/Dfp::getField</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>12</index><block>80</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpField::getRadixDigits</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>17</index><block>81</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::getField</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>24</index><block>81</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::getZero</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>25</index><block>81</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::newInstance</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>39</index><block>81</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::dotrap</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>49</index><block>82</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::lessThan</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>313</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>59</index><block>83</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>314</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>65</index><block>84</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::newInstance</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>317</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>71</index><block>85</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::getZero</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>317</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>72</index><block>85</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::lessThan</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>92</index><block>89</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::intLog10</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>94</index><block>89</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::getDecimalDigits</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>98</index><block>89</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::power10</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>104</index><block>89</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::copysign</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>325</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>110</index><block>89</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::getZero</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>325</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>111</index><block>89</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>123</index><block>90</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::power10K</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>129</index><block>90</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::getZero</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>130</index><block>90</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/Dfp::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>136</index><block>91</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::getZero</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>137</index><block>91</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::newInstance</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>139</index><block>91</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::copysign</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>147</index><block>92</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::add</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>155</index><block>93</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::intLog10</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>156</index><block>93</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::power10</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>162</index><block>93</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::copysign</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>168</index><block>93</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>175</index><block>94</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::getDecimalDigits</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>176</index><block>94</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::power10</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>177</index><block>94</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/Dfp::divide</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>185</index><block>95</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::getDecimalDigits</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>188</index><block>95</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::power10</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>189</index><block>95</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/Dfp::divide</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>344</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>195</index><block>95</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::getZero</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>344</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>196</index><block>95</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>208</index><block>96</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::power10K</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>214</index><block>96</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::getZero</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>215</index><block>96</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/Dfp::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>221</index><block>97</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::getZero</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>222</index><block>97</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::newInstance</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>224</index><block>97</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::copysign</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>232</index><block>98</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::subtract</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>237</index><block>98</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/Dfp::classify</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>241</index><block>99</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::classify</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>247</index><block>100</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::getField</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>257</index><block>100</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::dotrap</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>263</index><block>100</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::getZero</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>264</index><block>100</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/Dfp::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>268</index><block>101</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::getZero</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>269</index><block>101</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>274</index><block>102</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::getField</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>284</index><block>102</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::dotrap</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>40</index><block>81</block><killingTest/><description>replaced return value with null for org/apache/commons/math3/dfp/DfpDec::nextAfter</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>314</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>66</index><block>84</block><killingTest/><description>replaced return value with null for org/apache/commons/math3/dfp/DfpDec::nextAfter</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>289</index><block>102</block><killingTest/><description>replaced return value with null for org/apache/commons/math3/dfp/DfpDec::nextAfter</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>13</index><block>80</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>50</index><block>82</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>313</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>60</index><block>83</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>317</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>73</index><block>85</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>77</index><block>86</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>87</index><block>88</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>325</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>112</index><block>89</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>131</index><block>90</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>169</index><block>93</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>344</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>197</index><block>95</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>216</index><block>96</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>239</index><block>98</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>243</index><block>99</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>265</index><block>100</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>270</index><block>101</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>13</index><block>80</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>50</index><block>82</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>313</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>60</index><block>83</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>317</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>73</index><block>85</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>77</index><block>86</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>87</index><block>88</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>325</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>112</index><block>89</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>131</index><block>90</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>169</index><block>93</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>344</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>197</index><block>95</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>216</index><block>96</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>239</index><block>98</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>243</index><block>99</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>265</index><block>100</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>270</index><block>101</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>40</index><block>81</block><killingTest/><description>mutated return of Object value for org/apache/commons/math3/dfp/DfpDec::nextAfter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>314</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>66</index><block>84</block><killingTest/><description>mutated return of Object value for org/apache/commons/math3/dfp/DfpDec::nextAfter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>289</index><block>102</block><killingTest/><description>mutated return of Object value for org/apache/commons/math3/dfp/DfpDec::nextAfter to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>81</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpField::setIEEEFlagsBits</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>249</index><block>100</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpField::setIEEEFlagsBits</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>276</index><block>102</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpField::setIEEEFlagsBits</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>31</index><block>81</block><killingTest/><description>Removed assignment to member variable nans</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>177</index><block>94</block><killingTest/><description>replaced call to org/apache/commons/math3/dfp/Dfp::divide with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>nextAfter</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>189</index><block>95</block><killingTest/><description>replaced call to org/apache/commons/math3/dfp/Dfp::divide with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>113</index><block>27</block><killingTest/><description>replaced call to org/apache/commons/math3/dfp/Dfp::round with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>36</index><block>21</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>77</index><block>23</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>99</index><block>25</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>188</index><block>30</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>256</index><block>37</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>229</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>270</index><block>40</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>284</index><block>43</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>317</index><block>51</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>399</index><block>69</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>452</index><block>72</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>468</index><block>74</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>45</index><block>22</block><killingTest/><description>Changed increment from -1 to 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>86</index><block>24</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>207</index><block>31</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>426</index><block>70</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>19</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>18</index><block>20</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>25</index><block>21</block><killingTest/><description>Substituted 4 with 5</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>30</index><block>21</block><killingTest/><description>Substituted 1000 with 1001</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>40</index><block>22</block><killingTest/><description>Substituted 10 with 11</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>61</index><block>23</block><killingTest/><description>Substituted 4 with 5</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>66</index><block>23</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>70</index><block>23</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>75</index><block>23</block><killingTest/><description>Substituted 4 with 5</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>81</index><block>24</block><killingTest/><description>Substituted 10 with 11</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>98</index><block>25</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>101</index><block>26</block><killingTest/><description>Substituted 4 with 5</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>106</index><block>26</block><killingTest/><description>Substituted 3 with 4</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>122</index><block>28</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>199</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>129</index><block>29</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>199</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>132</index><block>29</block><killingTest/><description>Substituted 1000 with 1001</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>199</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>134</index><block>29</block><killingTest/><description>Substituted 10 with 11</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>142</index><block>29</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>146</index><block>29</block><killingTest/><description>Substituted 1000 with 1001</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>155</index><block>29</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>164</index><block>30</block><killingTest/><description>Substituted 10 with 11</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>168</index><block>30</block><killingTest/><description>Substituted 10 with 11</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>176</index><block>30</block><killingTest/><description>Substituted 10 with 11</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>183</index><block>30</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>203</index><block>31</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>231</index><block>32</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>243</index><block>35</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>246</index><block>36</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>255</index><block>37</block><killingTest/><description>Substituted 5 with 6</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>257</index><block>38</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>260</index><block>39</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>229</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>269</index><block>40</block><killingTest/><description>Substituted 5 with 6</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>229</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>271</index><block>41</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>229</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>274</index><block>42</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>283</index><block>43</block><killingTest/><description>Substituted 5 with 6</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>286</index><block>44</block><killingTest/><description>Substituted 5 with 6</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>292</index><block>46</block><killingTest/><description>Substituted 5 with 6</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>299</index><block>48</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>301</index><block>48</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>304</index><block>49</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>307</index><block>50</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>316</index><block>51</block><killingTest/><description>Substituted 5 with 6</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>319</index><block>52</block><killingTest/><description>Substituted 5 with 6</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>325</index><block>54</block><killingTest/><description>Substituted 5 with 6</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>332</index><block>56</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>336</index><block>57</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>339</index><block>58</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>349</index><block>59</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>356</index><block>62</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>359</index><block>63</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>369</index><block>64</block><killingTest/><description>Substituted -1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>376</index><block>67</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>379</index><block>68</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>412</index><block>70</block><killingTest/><description>Substituted 10000 with 10001</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>421</index><block>70</block><killingTest/><description>Substituted 10000 with 10001</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>443</index><block>72</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>451</index><block>72</block><killingTest/><description>Substituted -32767 with -32766</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>457</index><block>73</block><killingTest/><description>Substituted 8 with 9</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>461</index><block>73</block><killingTest/><description>Substituted 8 with 9</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>467</index><block>74</block><killingTest/><description>Substituted 32768 with 32769</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>473</index><block>75</block><killingTest/><description>Substituted 4 with 5</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>477</index><block>75</block><killingTest/><description>Substituted 4 with 5</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>489</index><block>78</block><killingTest/><description>Substituted 16 with 17</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>493</index><block>78</block><killingTest/><description>Substituted 16 with 17</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>497</index><block>79</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>19</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><block>21</block><killingTest/><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>41</index><block>22</block><killingTest/><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>56</index><block>23</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>62</index><block>23</block><killingTest/><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>76</index><block>23</block><killingTest/><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>82</index><block>24</block><killingTest/><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>105</index><block>26</block><killingTest/><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>107</index><block>26</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>199</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>130</index><block>29</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>199</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>133</index><block>29</block><killingTest/><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>199</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>135</index><block>29</block><killingTest/><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>143</index><block>29</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>147</index><block>29</block><killingTest/><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>156</index><block>29</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>158</index><block>29</block><killingTest/><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>165</index><block>30</block><killingTest/><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>167</index><block>30</block><killingTest/><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>169</index><block>30</block><killingTest/><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>177</index><block>30</block><killingTest/><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>178</index><block>30</block><killingTest/><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>179</index><block>30</block><killingTest/><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>196</index><block>31</block><killingTest/><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>216</index><block>32</block><killingTest/><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>218</index><block>32</block><killingTest/><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>298</index><block>48</block><killingTest/><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>300</index><block>48</block><killingTest/><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>331</index><block>56</block><killingTest/><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>333</index><block>56</block><killingTest/><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>407</index><block>70</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>413</index><block>70</block><killingTest/><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>422</index><block>70</block><killingTest/><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>444</index><block>72</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>19</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>21</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>77</index><block>23</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>99</index><block>25</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>108</index><block>26</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>123</index><block>28</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>188</index><block>30</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>239</index><block>33</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>241</index><block>34</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>256</index><block>37</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>229</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>270</index><block>40</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>284</index><block>43</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>287</index><block>44</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>289</index><block>45</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>293</index><block>46</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>295</index><block>47</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>302</index><block>48</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>317</index><block>51</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>320</index><block>52</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>322</index><block>53</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>326</index><block>54</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>328</index><block>55</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>334</index><block>56</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>350</index><block>59</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>352</index><block>60</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>354</index><block>61</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>370</index><block>64</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>372</index><block>65</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>374</index><block>66</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>254</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>385</index><block>68</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>399</index><block>69</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>263</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>431</index><block>71</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>452</index><block>72</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>468</index><block>74</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>482</index><block>76</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>484</index><block>77</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>50</index><block>23</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::getDecimalDigits</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>113</index><block>27</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/Dfp::round</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>224</index><block>32</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::getField</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>225</index><block>32</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpField::getRoundingMode</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>226</index><block>32</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpField$RoundingMode::ordinal</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>456</index><block>73</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::getField</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>472</index><block>75</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::getField</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>488</index><block>78</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::getField</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>114</index><block>27</block><killingTest/><description>replaced int return with 0 for org/apache/commons/math3/dfp/DfpDec::round</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>462</index><block>73</block><killingTest/><description>replaced int return with 0 for org/apache/commons/math3/dfp/DfpDec::round</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>478</index><block>75</block><killingTest/><description>replaced int return with 0 for org/apache/commons/math3/dfp/DfpDec::round</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>494</index><block>78</block><killingTest/><description>replaced int return with 0 for org/apache/commons/math3/dfp/DfpDec::round</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>15</index><block>19</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>108</index><block>26</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>123</index><block>28</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>239</index><block>33</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>241</index><block>34</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>287</index><block>44</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>289</index><block>45</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>293</index><block>46</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>295</index><block>47</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>302</index><block>48</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>320</index><block>52</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>322</index><block>53</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>326</index><block>54</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>328</index><block>55</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>334</index><block>56</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>350</index><block>59</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>352</index><block>60</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>354</index><block>61</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>370</index><block>64</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>372</index><block>65</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>374</index><block>66</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>254</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>385</index><block>68</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>263</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>431</index><block>71</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>482</index><block>76</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>484</index><block>77</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>15</index><block>19</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>108</index><block>26</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>123</index><block>28</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>239</index><block>33</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>241</index><block>34</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>287</index><block>44</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>289</index><block>45</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>293</index><block>46</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>295</index><block>47</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>302</index><block>48</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>320</index><block>52</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>322</index><block>53</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>326</index><block>54</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>328</index><block>55</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>334</index><block>56</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>350</index><block>59</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>352</index><block>60</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>354</index><block>61</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>370</index><block>64</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>372</index><block>65</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>374</index><block>66</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>254</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>385</index><block>68</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>263</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>431</index><block>71</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>482</index><block>76</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>484</index><block>77</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>36</index><block>21</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>77</index><block>23</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>99</index><block>25</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>188</index><block>30</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>256</index><block>37</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>229</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>270</index><block>40</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>284</index><block>43</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>317</index><block>51</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>399</index><block>69</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>452</index><block>72</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>468</index><block>74</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>36</index><block>21</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>77</index><block>23</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>99</index><block>25</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>188</index><block>30</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>256</index><block>37</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>229</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>270</index><block>40</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>284</index><block>43</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>317</index><block>51</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>399</index><block>69</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>452</index><block>72</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>468</index><block>74</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><block>20</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>114</index><block>27</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>462</index><block>73</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>478</index><block>75</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>494</index><block>78</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>498</index><block>79</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>435</index><block>72</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpDec::shiftRight</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>458</index><block>73</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpField::setIEEEFlagsBits</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>474</index><block>75</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpField::setIEEEFlagsBits</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>490</index><block>78</block><killingTest/><description>removed call to org/apache/commons/math3/dfp/DfpField::setIEEEFlagsBits</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>45</index><block>22</block><killingTest/><description>Removed increment -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>426</index><block>70</block><killingTest/><description>Removed increment 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_0</mutator><index>228</index><block>32</block><killingTest/><description>RemoveSwitch 0 mutation</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_1</mutator><index>228</index><block>32</block><killingTest/><description>RemoveSwitch 1 mutation</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_2</mutator><index>228</index><block>32</block><killingTest/><description>RemoveSwitch 2 mutation</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_3</mutator><index>228</index><block>32</block><killingTest/><description>RemoveSwitch 3 mutation</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_4</mutator><index>228</index><block>32</block><killingTest/><description>RemoveSwitch 4 mutation</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_5</mutator><index>228</index><block>32</block><killingTest/><description>RemoveSwitch 5 mutation</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_6</mutator><index>228</index><block>32</block><killingTest/><description>RemoveSwitch 6 mutation</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_7</mutator><index>228</index><block>32</block><killingTest/><description>RemoveSwitch 7 mutation</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DfpDec.java</sourceFile><mutatedClass>org.apache.commons.math3.dfp.DfpDec</mutatedClass><mutatedMethod>round</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.SwitchMutator</mutator><index>228</index><block>32</block><killingTest/><description>Switch mutation</description></mutation>
</mutations>

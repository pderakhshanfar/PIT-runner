<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>475</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>5</index><block>71</block><killingTest/><description>replaced call to com/google/common/math/MathPreconditions::checkNonNegative with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>11</index><block>71</block><killingTest/><description>replaced call to com/google/common/math/MathPreconditions::checkNonNegative with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>121</index><block>79</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>replaced call to java/math/BigInteger::multiply with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>506</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>126</index><block>79</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>replaced call to java/math/BigInteger::divide with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>518</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>177</index><block>81</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>replaced call to java/math/BigInteger::multiply with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>182</index><block>81</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>replaced call to java/math/BigInteger::divide with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>477</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>17</index><block>71</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test18</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>478</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>35</index><block>73</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>481</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>48</index><block>74</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>481</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>53</index><block>75</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>494</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>94</index><block>77</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>500</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>113</index><block>78</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>494</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>167</index><block>80</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>477</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>18</index><block>72</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test18</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>477</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>22</index><block>73</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test20</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>478</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>33</index><block>73</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>488</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>73</index><block>77</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>Substituted 1 with 2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>494</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>88</index><block>77</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>496</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>104</index><block>78</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>500</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>112</index><block>78</block><killingTest/><description>Substituted 63 with 64</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>478</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>34</index><block>73</block><killingTest/><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>479</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><block>74</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test18</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>495</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>99</index><block>78</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>496</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>105</index><block>78</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>500</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>111</index><block>78</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>512</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>149</index><block>80</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>Replaced long multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>513</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>156</index><block>80</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>Replaced long multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>514</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>162</index><block>80</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>477</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>71</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test18</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>478</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>73</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>481</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>48</index><block>74</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test18</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>481</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>53</index><block>75</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test18</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>494</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>94</index><block>77</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>500</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>113</index><block>78</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>475</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>71</block><killingTest/><description>removed call to com/google/common/math/MathPreconditions::checkNonNegative</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>11</index><block>71</block><killingTest/><description>removed call to com/google/common/math/MathPreconditions::checkNonNegative</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>482</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>58</index><block>76</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test18</killingTest><description>removed call to com/google/common/math/LongMath::binomial</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>482</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>59</index><block>76</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test18</killingTest><description>removed call to java/math/BigInteger::valueOf</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>490</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>80</index><block>77</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>removed call to com/google/common/math/LongMath::log2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>120</index><block>79</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>removed call to java/math/BigInteger::valueOf</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>121</index><block>79</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>removed call to java/math/BigInteger::multiply</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>506</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>125</index><block>79</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>removed call to java/math/BigInteger::valueOf</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>506</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>126</index><block>79</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>removed call to java/math/BigInteger::divide</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>518</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>176</index><block>81</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>removed call to java/math/BigInteger::valueOf</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>518</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>177</index><block>81</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>removed call to java/math/BigInteger::multiply</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>181</index><block>81</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>removed call to java/math/BigInteger::valueOf</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>182</index><block>81</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>removed call to java/math/BigInteger::divide</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>482</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>60</index><block>76</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test18</killingTest><description>replaced return value with null for com/google/common/math/BigIntegerMath::binomial</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>517</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>185</index><block>81</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>replaced return value with null for com/google/common/math/BigIntegerMath::binomial</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>477</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>17</index><block>71</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test18</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>478</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>35</index><block>73</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>481</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>48</index><block>74</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test18</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>481</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>53</index><block>75</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test18</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>494</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>94</index><block>77</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>500</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>113</index><block>78</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>477</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>17</index><block>71</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test20</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>478</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>35</index><block>73</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>481</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>48</index><block>74</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test19</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>481</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>53</index><block>75</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>494</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>94</index><block>77</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>500</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>113</index><block>78</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>482</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>60</index><block>76</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test18</killingTest><description>mutated return of Object value for com/google/common/math/BigIntegerMath::binomial to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>517</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>185</index><block>81</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>mutated return of Object value for com/google/common/math/BigIntegerMath::binomial to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>477</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>28</index><block>73</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test20</killingTest><description>removed call to com/google/common/base/Preconditions::checkArgument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>121</index><block>79</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>replaced call to java/math/BigInteger::multiply with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>506</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>126</index><block>79</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>replaced call to java/math/BigInteger::divide with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>518</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>177</index><block>81</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>replaced call to java/math/BigInteger::multiply with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>182</index><block>81</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>replaced call to java/math/BigInteger::divide with receiver</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>binomial</mutatedMethod><methodDescription>(II)Ljava/math/BigInteger;</methodDescription><lineNumber>494</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>167</index><block>80</block><killingTest/><description>Removed increment 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>ceilingPowerOfTwo</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test17</killingTest><description>removed call to com/google/common/math/BigIntegerMath::log2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>ceilingPowerOfTwo</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>0</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test45</killingTest><description>removed call to java/math/BigInteger::setBit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>ceilingPowerOfTwo</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>8</index><block>0</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test45</killingTest><description>replaced return value with null for com/google/common/math/BigIntegerMath::ceilingPowerOfTwo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>ceilingPowerOfTwo</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>0</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test45</killingTest><description>mutated return of Object value for com/google/common/math/BigIntegerMath::ceilingPowerOfTwo to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>ceilingPowerOfTwo</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>7</index><block>0</block><killingTest/><description>replaced call to java/math/BigInteger::setBit with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>21</index><block>56</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test16</killingTest><description>replaced call to java/math/BigDecimal::divide with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>373</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>6</index><block>56</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test16</killingTest><description>removed call to java/math/BigDecimal::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>13</index><block>56</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test16</killingTest><description>removed call to java/math/BigDecimal::&#60;init&#62;</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>19</index><block>56</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>21</index><block>56</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test16</killingTest><description>removed call to java/math/BigDecimal::divide</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>22</index><block>56</block><killingTest/><description>removed call to java/math/BigDecimal::toBigIntegerExact</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>23</index><block>56</block><killingTest/><description>replaced return value with null for com/google/common/math/BigIntegerMath::divide</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>23</index><block>56</block><killingTest/><description>mutated return of Object value for com/google/common/math/BigIntegerMath::divide to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>divide</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>21</index><block>56</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test16</killingTest><description>replaced call to java/math/BigDecimal::divide with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>5</index><block>57</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test15</killingTest><description>replaced call to com/google/common/math/MathPreconditions::checkNonNegative with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>399</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>26</index><block>59</block><killingTest/><description>replaced call to com/google/common/math/IntMath::log2 with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>399</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>30</index><block>59</block><killingTest/><description>replaced call to com/google/common/math/IntMath::divide with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>12</index><block>57</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>99</index><block>59</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>429</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>148</index><block>61</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>438</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>192</index><block>63</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>37</index><block>59</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test22</killingTest><description>removed call to java/util/ArrayList::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>117</index><block>61</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test56</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>399</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>28</index><block>59</block><killingTest/><description>Substituted 64 with 65</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>404</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>48</index><block>59</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test22</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>68</index><block>59</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>77</index><block>59</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>413</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>82</index><block>59</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>413</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>84</index><block>59</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>106</index><block>60</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>112</index><block>61</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>429</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>147</index><block>61</block><killingTest/><description>Substituted 64 with 65</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>431</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>158</index><block>62</block><killingTest/><description>Substituted 1 with 2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>432</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>162</index><block>62</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>435</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>176</index><block>62</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>182</index><block>62</block><killingTest/><description>Substituted 1 with 2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>438</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>190</index><block>63</block><killingTest/><description>Substituted 1 with 2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>399</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>59</block><killingTest/><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>404</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>49</index><block>59</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test22</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>61</index><block>59</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test22</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>69</index><block>59</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>78</index><block>59</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>413</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>85</index><block>59</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test56</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>413</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>86</index><block>59</block><killingTest/><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>105</index><block>60</block><killingTest/><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>113</index><block>61</block><killingTest/><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>424</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>128</index><block>61</block><killingTest/><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>425</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>134</index><block>61</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test56</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>427</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>140</index><block>61</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>429</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>146</index><block>61</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test56</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>169</index><block>62</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test56</killingTest><description>Replaced long multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>435</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>177</index><block>62</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test56</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>183</index><block>62</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test22</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>57</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test23</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>99</index><block>59</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>108</index><block>60</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>429</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>148</index><block>61</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>438</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>192</index><block>63</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>57</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test15</killingTest><description>removed call to com/google/common/math/MathPreconditions::checkNonNegative</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>18</index><block>58</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test23</killingTest><description>removed call to java/math/BigInteger::valueOf</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>399</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>26</index><block>59</block><killingTest/><description>removed call to com/google/common/math/IntMath::log2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>399</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>30</index><block>59</block><killingTest/><description>removed call to com/google/common/math/IntMath::divide</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>55</index><block>59</block><killingTest/><description>removed call to java/lang/Long::numberOfTrailingZeros</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>67</index><block>59</block><killingTest/><description>removed call to com/google/common/math/LongMath::log2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>76</index><block>59</block><killingTest/><description>removed call to com/google/common/math/LongMath::log2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>423</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>122</index><block>61</block><killingTest/><description>removed call to java/lang/Long::numberOfTrailingZeros</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>153</index><block>62</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test56</killingTest><description>removed call to java/math/BigInteger::valueOf</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>154</index><block>62</block><killingTest/><description>removed call to java/util/ArrayList::add</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>435</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>175</index><block>62</block><killingTest/><description>removed call to com/google/common/math/LongMath::log2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>439</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>197</index><block>64</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test22</killingTest><description>removed call to java/math/BigInteger::valueOf</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>439</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>198</index><block>64</block><killingTest/><description>removed call to java/util/ArrayList::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>442</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>204</index><block>64</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test22</killingTest><description>removed call to com/google/common/math/BigIntegerMath::listProduct</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>442</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>206</index><block>64</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test22</killingTest><description>removed call to java/math/BigInteger::shiftLeft</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>19</index><block>58</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test23</killingTest><description>replaced return value with null for com/google/common/math/BigIntegerMath::factorial</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>442</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>207</index><block>64</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test22</killingTest><description>replaced return value with null for com/google/common/math/BigIntegerMath::factorial</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>108</index><block>60</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>108</index><block>60</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>12</index><block>57</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test23</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>99</index><block>59</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>429</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>148</index><block>61</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test56</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>438</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>192</index><block>63</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>12</index><block>57</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test22</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>99</index><block>59</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>429</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>148</index><block>61</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>438</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>192</index><block>63</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><block>58</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test23</killingTest><description>mutated return of Object value for com/google/common/math/BigIntegerMath::factorial to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>442</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>207</index><block>64</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test22</killingTest><description>mutated return of Object value for com/google/common/math/BigIntegerMath::factorial to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>442</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>206</index><block>64</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test22</killingTest><description>replaced call to java/math/BigInteger::shiftLeft with receiver</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>factorial</mutatedMethod><methodDescription>(I)Ljava/math/BigInteger;</methodDescription><lineNumber>420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>117</index><block>61</block><killingTest/><description>Removed increment 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>fitsInLong</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Z</methodDescription><lineNumber>525</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>14</index><block>84</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test37</killingTest><description>replaced boolean return with true for com/google/common/math/BigIntegerMath::fitsInLong</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='20'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>fitsInLong</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Z</methodDescription><lineNumber>525</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>82</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='20'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>fitsInLong</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Z</methodDescription><lineNumber>525</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>82</block><killingTest/><description>Substituted 63 with 64</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='20'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>fitsInLong</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Z</methodDescription><lineNumber>525</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>7</index><block>83</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>fitsInLong</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Z</methodDescription><lineNumber>525</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>11</index><block>84</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test37</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>fitsInLong</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Z</methodDescription><lineNumber>525</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>82</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test37</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>fitsInLong</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Z</methodDescription><lineNumber>525</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>82</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test37</killingTest><description>removed call to java/math/BigInteger::bitLength</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='20'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>fitsInLong</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Z</methodDescription><lineNumber>525</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>6</index><block>82</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>fitsInLong</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Z</methodDescription><lineNumber>525</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>6</index><block>82</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test37</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>fitsInLong</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Z</methodDescription><lineNumber>525</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>84</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test37</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>floorPowerOfTwo</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test12</killingTest><description>removed call to com/google/common/math/BigIntegerMath::log2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>floorPowerOfTwo</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>1</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test55</killingTest><description>removed call to java/math/BigInteger::setBit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>floorPowerOfTwo</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>8</index><block>1</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test55</killingTest><description>replaced return value with null for com/google/common/math/BigIntegerMath::floorPowerOfTwo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>floorPowerOfTwo</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>1</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test55</killingTest><description>mutated return of Object value for com/google/common/math/BigIntegerMath::floorPowerOfTwo to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>floorPowerOfTwo</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>7</index><block>1</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test55</killingTest><description>replaced call to java/math/BigInteger::setBit with receiver</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>isPowerOfTwo</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Z</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>4</index><block>2</block><killingTest/><description>replaced call to com/google/common/base/Preconditions::checkNotNull with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>isPowerOfTwo</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Z</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>25</index><block>5</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test48</killingTest><description>replaced boolean return with true for com/google/common/math/BigIntegerMath::isPowerOfTwo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>isPowerOfTwo</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Z</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>2</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test49</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>isPowerOfTwo</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Z</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>3</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test47</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>isPowerOfTwo</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Z</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>18</index><block>4</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test47</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>isPowerOfTwo</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Z</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>22</index><block>5</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test48</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>isPowerOfTwo</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Z</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>3</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test47</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>isPowerOfTwo</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Z</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>2</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test47</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>isPowerOfTwo</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Z</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>3</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test47</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>isPowerOfTwo</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Z</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>2</block><killingTest/><description>removed call to com/google/common/base/Preconditions::checkNotNull</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>isPowerOfTwo</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Z</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>2</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test47</killingTest><description>removed call to java/math/BigInteger::signum</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>isPowerOfTwo</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Z</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>12</index><block>3</block><killingTest/><description>removed call to java/math/BigInteger::getLowestSetBit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>isPowerOfTwo</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Z</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>3</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test47</killingTest><description>removed call to java/math/BigInteger::bitLength</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>isPowerOfTwo</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Z</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>17</index><block>3</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test47</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>isPowerOfTwo</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Z</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>17</index><block>3</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test48</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>isPowerOfTwo</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Z</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>10</index><block>2</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test47</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>isPowerOfTwo</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Z</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>10</index><block>2</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test49</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>isPowerOfTwo</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Z</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>25</index><block>5</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test47</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>listProduct</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/math/BigInteger;</methodDescription><lineNumber>446</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>65</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test21</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>listProduct</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/math/BigInteger;</methodDescription><lineNumber>446</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>65</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test10</killingTest><description>removed call to java/util/List::size</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>listProduct</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/math/BigInteger;</methodDescription><lineNumber>446</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>65</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test21</killingTest><description>removed call to com/google/common/math/BigIntegerMath::listProduct</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>listProduct</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/math/BigInteger;</methodDescription><lineNumber>446</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>8</index><block>65</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test21</killingTest><description>replaced return value with null for com/google/common/math/BigIntegerMath::listProduct</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>listProduct</mutatedMethod><methodDescription>(Ljava/util/List;)Ljava/math/BigInteger;</methodDescription><lineNumber>446</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>65</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test21</killingTest><description>mutated return of Object value for com/google/common/math/BigIntegerMath::listProduct to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>listProduct</mutatedMethod><methodDescription>(Ljava/util/List;II)Ljava/math/BigInteger;</methodDescription><lineNumber>456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>33</index><block>68</block><killingTest/><description>replaced call to java/math/BigInteger::multiply with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>listProduct</mutatedMethod><methodDescription>(Ljava/util/List;II)Ljava/math/BigInteger;</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>48</index><block>69</block><killingTest/><description>replaced call to java/math/BigInteger::multiply with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>listProduct</mutatedMethod><methodDescription>(Ljava/util/List;II)Ljava/math/BigInteger;</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>55</index><block>69</block><killingTest/><description>replaced call to java/math/BigInteger::multiply with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>listProduct</mutatedMethod><methodDescription>(Ljava/util/List;II)Ljava/math/BigInteger;</methodDescription><lineNumber>462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>76</index><block>70</block><killingTest/><description>replaced call to java/math/BigInteger::multiply with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>listProduct</mutatedMethod><methodDescription>(Ljava/util/List;II)Ljava/math/BigInteger;</methodDescription><lineNumber>456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>29</index><block>68</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>listProduct</mutatedMethod><methodDescription>(Ljava/util/List;II)Ljava/math/BigInteger;</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>44</index><block>69</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>listProduct</mutatedMethod><methodDescription>(Ljava/util/List;II)Ljava/math/BigInteger;</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>51</index><block>69</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test56</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>listProduct</mutatedMethod><methodDescription>(Ljava/util/List;II)Ljava/math/BigInteger;</methodDescription><lineNumber>461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>63</index><block>70</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test56</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>listProduct</mutatedMethod><methodDescription>(Ljava/util/List;II)Ljava/math/BigInteger;</methodDescription><lineNumber>450</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>66</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test56</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>listProduct</mutatedMethod><methodDescription>(Ljava/util/List;II)Ljava/math/BigInteger;</methodDescription><lineNumber>456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>68</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test56</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>listProduct</mutatedMethod><methodDescription>(Ljava/util/List;II)Ljava/math/BigInteger;</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>45</index><block>69</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>listProduct</mutatedMethod><methodDescription>(Ljava/util/List;II)Ljava/math/BigInteger;</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>52</index><block>69</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>listProduct</mutatedMethod><methodDescription>(Ljava/util/List;II)Ljava/math/BigInteger;</methodDescription><lineNumber>461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>62</index><block>70</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test56</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>listProduct</mutatedMethod><methodDescription>(Ljava/util/List;II)Ljava/math/BigInteger;</methodDescription><lineNumber>461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>64</index><block>70</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test56</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>listProduct</mutatedMethod><methodDescription>(Ljava/util/List;II)Ljava/math/BigInteger;</methodDescription><lineNumber>454</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>17</index><block>67</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test22</killingTest><description>removed call to java/util/List::get</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>listProduct</mutatedMethod><methodDescription>(Ljava/util/List;II)Ljava/math/BigInteger;</methodDescription><lineNumber>456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>25</index><block>68</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test56</killingTest><description>removed call to java/util/List::get</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>listProduct</mutatedMethod><methodDescription>(Ljava/util/List;II)Ljava/math/BigInteger;</methodDescription><lineNumber>456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>31</index><block>68</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test56</killingTest><description>removed call to java/util/List::get</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>listProduct</mutatedMethod><methodDescription>(Ljava/util/List;II)Ljava/math/BigInteger;</methodDescription><lineNumber>456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>33</index><block>68</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test56</killingTest><description>removed call to java/math/BigInteger::multiply</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>listProduct</mutatedMethod><methodDescription>(Ljava/util/List;II)Ljava/math/BigInteger;</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>40</index><block>69</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test56</killingTest><description>removed call to java/util/List::get</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>listProduct</mutatedMethod><methodDescription>(Ljava/util/List;II)Ljava/math/BigInteger;</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>46</index><block>69</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test56</killingTest><description>removed call to java/util/List::get</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>listProduct</mutatedMethod><methodDescription>(Ljava/util/List;II)Ljava/math/BigInteger;</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>48</index><block>69</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test56</killingTest><description>removed call to java/math/BigInteger::multiply</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>listProduct</mutatedMethod><methodDescription>(Ljava/util/List;II)Ljava/math/BigInteger;</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>53</index><block>69</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test56</killingTest><description>removed call to java/util/List::get</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>listProduct</mutatedMethod><methodDescription>(Ljava/util/List;II)Ljava/math/BigInteger;</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>55</index><block>69</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test56</killingTest><description>removed call to java/math/BigInteger::multiply</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>listProduct</mutatedMethod><methodDescription>(Ljava/util/List;II)Ljava/math/BigInteger;</methodDescription><lineNumber>462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>71</index><block>70</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test56</killingTest><description>removed call to com/google/common/math/BigIntegerMath::listProduct</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>listProduct</mutatedMethod><methodDescription>(Ljava/util/List;II)Ljava/math/BigInteger;</methodDescription><lineNumber>462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>75</index><block>70</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test56</killingTest><description>removed call to com/google/common/math/BigIntegerMath::listProduct</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>listProduct</mutatedMethod><methodDescription>(Ljava/util/List;II)Ljava/math/BigInteger;</methodDescription><lineNumber>462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>76</index><block>70</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test56</killingTest><description>removed call to java/math/BigInteger::multiply</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>listProduct</mutatedMethod><methodDescription>(Ljava/util/List;II)Ljava/math/BigInteger;</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>11</index><block>66</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test21</killingTest><description>replaced return value with null for com/google/common/math/BigIntegerMath::listProduct</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>listProduct</mutatedMethod><methodDescription>(Ljava/util/List;II)Ljava/math/BigInteger;</methodDescription><lineNumber>454</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>19</index><block>67</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test22</killingTest><description>replaced return value with null for com/google/common/math/BigIntegerMath::listProduct</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>listProduct</mutatedMethod><methodDescription>(Ljava/util/List;II)Ljava/math/BigInteger;</methodDescription><lineNumber>456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>34</index><block>68</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test56</killingTest><description>replaced return value with null for com/google/common/math/BigIntegerMath::listProduct</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>listProduct</mutatedMethod><methodDescription>(Ljava/util/List;II)Ljava/math/BigInteger;</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>56</index><block>69</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test56</killingTest><description>replaced return value with null for com/google/common/math/BigIntegerMath::listProduct</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>listProduct</mutatedMethod><methodDescription>(Ljava/util/List;II)Ljava/math/BigInteger;</methodDescription><lineNumber>462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>77</index><block>70</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test56</killingTest><description>replaced return value with null for com/google/common/math/BigIntegerMath::listProduct</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>listProduct</mutatedMethod><methodDescription>(Ljava/util/List;II)Ljava/math/BigInteger;</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>66</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test21</killingTest><description>mutated return of Object value for com/google/common/math/BigIntegerMath::listProduct to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>listProduct</mutatedMethod><methodDescription>(Ljava/util/List;II)Ljava/math/BigInteger;</methodDescription><lineNumber>454</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><block>67</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test22</killingTest><description>mutated return of Object value for com/google/common/math/BigIntegerMath::listProduct to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>listProduct</mutatedMethod><methodDescription>(Ljava/util/List;II)Ljava/math/BigInteger;</methodDescription><lineNumber>456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>34</index><block>68</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test56</killingTest><description>mutated return of Object value for com/google/common/math/BigIntegerMath::listProduct to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>listProduct</mutatedMethod><methodDescription>(Ljava/util/List;II)Ljava/math/BigInteger;</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>56</index><block>69</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test56</killingTest><description>mutated return of Object value for com/google/common/math/BigIntegerMath::listProduct to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>listProduct</mutatedMethod><methodDescription>(Ljava/util/List;II)Ljava/math/BigInteger;</methodDescription><lineNumber>462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>77</index><block>70</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test56</killingTest><description>mutated return of Object value for com/google/common/math/BigIntegerMath::listProduct to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>listProduct</mutatedMethod><methodDescription>(Ljava/util/List;II)Ljava/math/BigInteger;</methodDescription><lineNumber>456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>33</index><block>68</block><killingTest/><description>replaced call to java/math/BigInteger::multiply with receiver</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>listProduct</mutatedMethod><methodDescription>(Ljava/util/List;II)Ljava/math/BigInteger;</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>48</index><block>69</block><killingTest/><description>replaced call to java/math/BigInteger::multiply with receiver</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>listProduct</mutatedMethod><methodDescription>(Ljava/util/List;II)Ljava/math/BigInteger;</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>55</index><block>69</block><killingTest/><description>replaced call to java/math/BigInteger::multiply with receiver</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>listProduct</mutatedMethod><methodDescription>(Ljava/util/List;II)Ljava/math/BigInteger;</methodDescription><lineNumber>462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>76</index><block>70</block><killingTest/><description>replaced call to java/math/BigInteger::multiply with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>listProduct</mutatedMethod><methodDescription>(Ljava/util/List;II)Ljava/math/BigInteger;</methodDescription><lineNumber>450</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_0</mutator><index>6</index><block>66</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test21</killingTest><description>RemoveSwitch 0 mutation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>listProduct</mutatedMethod><methodDescription>(Ljava/util/List;II)Ljava/math/BigInteger;</methodDescription><lineNumber>450</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_1</mutator><index>6</index><block>66</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test22</killingTest><description>RemoveSwitch 1 mutation</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>listProduct</mutatedMethod><methodDescription>(Ljava/util/List;II)Ljava/math/BigInteger;</methodDescription><lineNumber>450</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_2</mutator><index>6</index><block>66</block><killingTest/><description>RemoveSwitch 2 mutation</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>listProduct</mutatedMethod><methodDescription>(Ljava/util/List;II)Ljava/math/BigInteger;</methodDescription><lineNumber>450</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_3</mutator><index>6</index><block>66</block><killingTest/><description>RemoveSwitch 3 mutation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>listProduct</mutatedMethod><methodDescription>(Ljava/util/List;II)Ljava/math/BigInteger;</methodDescription><lineNumber>450</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.SwitchMutator</mutator><index>6</index><block>66</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test21</killingTest><description>Switch mutation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>5</index><block>18</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test05</killingTest><description>replaced call to com/google/common/math/MathPreconditions::checkPositive with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>56</index><block>21</block><killingTest/><description>replaced call to java/math/BigInteger::divide with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>74</index><block>23</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>replaced call to java/math/BigInteger::multiply with argument</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>102</index><block>24</block><killingTest/><description>replaced call to java/math/BigInteger::multiply with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>179</index><block>31</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>replaced call to java/math/BigInteger::multiply with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>47</index><block>20</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>67</index><block>21</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>86</index><block>23</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>186</index><block>31</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>202</index><block>34</block><killingTest/><description>removed call to java/lang/AssertionError::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>51</index><block>21</block><killingTest/><description>Changed increment from -1 to 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>89</index><block>24</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>136</index><block>26</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>140</index><block>27</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test37</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>161</index><block>30</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test34</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>170</index><block>31</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>176</index><block>31</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test52</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>192</index><block>33</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test52</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>20</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>29</index><block>20</block><killingTest/><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>162</index><block>30</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test34</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>193</index><block>33</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test52</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>18</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test37</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>20</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>67</index><block>21</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>86</index><block>23</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>135</index><block>25</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test37</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>155</index><block>28</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test34</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>186</index><block>31</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>18</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test05</killingTest><description>removed call to com/google/common/math/MathPreconditions::checkPositive</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>18</block><killingTest/><description>removed call to com/google/common/math/BigIntegerMath::fitsInLong</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>15</index><block>19</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test39</killingTest><description>removed call to java/math/BigInteger::longValue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>17</index><block>19</block><killingTest/><description>removed call to com/google/common/math/LongMath::log10</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>24</index><block>20</block><killingTest/><description>removed call to com/google/common/math/BigIntegerMath::log2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>36</index><block>20</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test37</killingTest><description>removed call to java/math/BigInteger::pow</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>42</index><block>20</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test37</killingTest><description>removed call to java/math/BigInteger::compareTo</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>56</index><block>21</block><killingTest/><description>removed call to java/math/BigInteger::divide</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>62</index><block>21</block><killingTest/><description>removed call to java/math/BigInteger::compareTo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>74</index><block>23</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test37</killingTest><description>removed call to java/math/BigInteger::multiply</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>80</index><block>23</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test37</killingTest><description>removed call to java/math/BigInteger::compareTo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>102</index><block>24</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>removed call to java/math/BigInteger::multiply</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>108</index><block>24</block><killingTest/><description>removed call to java/math/BigInteger::compareTo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>128</index><block>25</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test37</killingTest><description>removed call to java/math/RoundingMode::ordinal</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>154</index><block>28</block><killingTest/><description>removed call to java/math/BigInteger::equals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>171</index><block>31</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>removed call to java/math/BigInteger::pow</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>177</index><block>31</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>removed call to java/math/BigInteger::pow</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>179</index><block>31</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>removed call to java/math/BigInteger::multiply</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>185</index><block>31</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test52</killingTest><description>removed call to java/math/BigInteger::compareTo</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>18</index><block>19</block><killingTest/><description>replaced int return with 0 for com/google/common/math/BigIntegerMath::log10</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>148</index><block>27</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test35</killingTest><description>replaced int return with 0 for com/google/common/math/BigIntegerMath::log10</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>165</index><block>30</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test34</killingTest><description>replaced int return with 0 for com/google/common/math/BigIntegerMath::log10</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>196</index><block>33</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>replaced int return with 0 for com/google/common/math/BigIntegerMath::log10</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>11</index><block>18</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>135</index><block>25</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>155</index><block>28</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>11</index><block>18</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test37</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>135</index><block>25</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test37</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>155</index><block>28</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test34</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>47</index><block>20</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>67</index><block>21</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>86</index><block>23</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>186</index><block>31</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>47</index><block>20</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>67</index><block>21</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>86</index><block>23</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>186</index><block>31</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test52</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>19</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test39</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>148</index><block>27</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test35</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>165</index><block>30</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test34</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>196</index><block>33</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>143</index><block>27</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test37</killingTest><description>removed call to com/google/common/math/MathPreconditions::checkRoundingUnnecessary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>36</index><block>20</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>replaced call to java/math/BigInteger::pow with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>56</index><block>21</block><killingTest/><description>replaced call to java/math/BigInteger::divide with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>74</index><block>23</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>replaced call to java/math/BigInteger::multiply with receiver</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>102</index><block>24</block><killingTest/><description>replaced call to java/math/BigInteger::multiply with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>171</index><block>31</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test52</killingTest><description>replaced call to java/math/BigInteger::pow with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>177</index><block>31</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>replaced call to java/math/BigInteger::pow with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>179</index><block>31</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>replaced call to java/math/BigInteger::multiply with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>51</index><block>21</block><killingTest/><description>Removed increment -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>89</index><block>24</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>Removed increment 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_0</mutator><index>130</index><block>25</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test37</killingTest><description>RemoveSwitch 0 mutation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_1</mutator><index>130</index><block>25</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test36</killingTest><description>RemoveSwitch 1 mutation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_2</mutator><index>130</index><block>25</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test35</killingTest><description>RemoveSwitch 2 mutation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_3</mutator><index>130</index><block>25</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test34</killingTest><description>RemoveSwitch 3 mutation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_4</mutator><index>130</index><block>25</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test33</killingTest><description>RemoveSwitch 4 mutation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_5</mutator><index>130</index><block>25</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test38</killingTest><description>RemoveSwitch 5 mutation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_6</mutator><index>130</index><block>25</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test52</killingTest><description>RemoveSwitch 6 mutation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_7</mutator><index>130</index><block>25</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test31</killingTest><description>RemoveSwitch 7 mutation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log10</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.SwitchMutator</mutator><index>130</index><block>25</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test37</killingTest><description>Switch mutation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>5</index><block>6</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test17</killingTest><description>replaced call to com/google/common/base/Preconditions::checkNotNull with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>7</index><block>6</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test12</killingTest><description>replaced call to com/google/common/math/MathPreconditions::checkPositive with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>55</index><block>10</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>71</index><block>11</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test43</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>105</index><block>14</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test40</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>121</index><block>17</block><killingTest/><description>removed call to java/lang/AssertionError::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>13</index><block>6</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test43</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>45</index><block>9</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>54</index><block>10</block><killingTest/><description>Substituted 256 with 257</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>59</index><block>11</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test43</killingTest><description>Substituted 256 with 257</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>80</index><block>13</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test41</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>87</index><block>14</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test42</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>94</index><block>14</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test42</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>100</index><block>14</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test40</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>103</index><block>14</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test42</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>111</index><block>16</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test40</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>6</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test43</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>46</index><block>9</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>61</index><block>11</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>81</index><block>13</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test41</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>95</index><block>14</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test42</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>102</index><block>14</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test42</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>104</index><block>14</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test42</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>112</index><block>16</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test40</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>7</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test47</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>10</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>71</index><block>11</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test43</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>105</index><block>14</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test40</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>6</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test12</killingTest><description>removed call to com/google/common/base/Preconditions::checkNotNull</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>6</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test12</killingTest><description>removed call to com/google/common/math/MathPreconditions::checkPositive</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>12</index><block>6</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test47</killingTest><description>removed call to java/math/BigInteger::bitLength</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>20</index><block>6</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test48</killingTest><description>removed call to java/math/RoundingMode::ordinal</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>27</index><block>6</block><killingTest/><description>removed call to com/google/common/math/BigIntegerMath::isPowerOfTwo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>38</index><block>7</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test47</killingTest><description>removed call to com/google/common/math/BigIntegerMath::isPowerOfTwo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>64</index><block>11</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test43</killingTest><description>removed call to java/math/BigInteger::shiftRight</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>70</index><block>11</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test41</killingTest><description>removed call to java/math/BigInteger::compareTo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>88</index><block>14</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test40</killingTest><description>removed call to java/math/BigInteger::pow</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>93</index><block>14</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test40</killingTest><description>removed call to java/math/BigInteger::bitLength</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>33</index><block>6</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test55</killingTest><description>replaced int return with 0 for com/google/common/math/BigIntegerMath::log2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>49</index><block>9</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test45</killingTest><description>replaced int return with 0 for com/google/common/math/BigIntegerMath::log2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>75</index><block>12</block><killingTest/><description>replaced int return with 0 for com/google/common/math/BigIntegerMath::log2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>82</index><block>13</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test41</killingTest><description>replaced int return with 0 for com/google/common/math/BigIntegerMath::log2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>115</index><block>16</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test40</killingTest><description>replaced int return with 0 for com/google/common/math/BigIntegerMath::log2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>39</index><block>7</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test47</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>39</index><block>7</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>55</index><block>10</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>71</index><block>11</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test43</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>105</index><block>14</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test42</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>55</index><block>10</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>71</index><block>11</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test41</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>105</index><block>14</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test40</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>33</index><block>6</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test55</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>49</index><block>9</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test47</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>75</index><block>12</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test43</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>82</index><block>13</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test41</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>115</index><block>16</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test40</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>28</index><block>6</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test48</killingTest><description>removed call to com/google/common/math/MathPreconditions::checkRoundingUnnecessary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>64</index><block>11</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test41</killingTest><description>replaced call to java/math/BigInteger::shiftRight with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>88</index><block>14</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test40</killingTest><description>replaced call to java/math/BigInteger::pow with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_0</mutator><index>22</index><block>6</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test48</killingTest><description>RemoveSwitch 0 mutation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='24'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_1</mutator><index>22</index><block>6</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test46</killingTest><description>RemoveSwitch 1 mutation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_2</mutator><index>22</index><block>6</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test37</killingTest><description>RemoveSwitch 2 mutation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_3</mutator><index>22</index><block>6</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test47</killingTest><description>RemoveSwitch 3 mutation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_4</mutator><index>22</index><block>6</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test45</killingTest><description>RemoveSwitch 4 mutation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_5</mutator><index>22</index><block>6</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test40</killingTest><description>RemoveSwitch 5 mutation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_6</mutator><index>22</index><block>6</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test44</killingTest><description>RemoveSwitch 6 mutation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_7</mutator><index>22</index><block>6</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test43</killingTest><description>RemoveSwitch 7 mutation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>log2</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.SwitchMutator</mutator><index>22</index><block>6</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test43</killingTest><description>Switch mutation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>roundToDouble</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)D</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>55</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test51</killingTest><description>removed call to com/google/common/math/BigIntegerMath$BigIntegerToDoubleRounder::roundToDouble</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>roundToDouble</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)D</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>7</index><block>55</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test51</killingTest><description>replaced double return with 0.0d for com/google/common/math/BigIntegerMath::roundToDouble</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>roundToDouble</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)D</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>55</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test51</killingTest><description>replaced return of double value with -(x + 1) for com/google/common/math/BigIntegerMath::roundToDouble</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>229</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>5</index><block>35</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test00</killingTest><description>replaced call to com/google/common/math/MathPreconditions::checkNonNegative with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>17</index><block>36</block><killingTest/><description>replaced call to com/google/common/math/LongMath::sqrt with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>24</index><block>37</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test26</killingTest><description>replaced call to com/google/common/math/BigIntegerMath::sqrtFloor with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>89</index><block>43</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test26</killingTest><description>replaced call to java/math/BigInteger::add with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>100</index><block>44</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test41</killingTest><description>replaced call to java/math/BigInteger::add with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>114</index><block>46</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test52</killingTest><description>replaced call to java/math/BigInteger::add with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>107</index><block>44</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>123</index><block>47</block><killingTest/><description>removed call to java/lang/AssertionError::&#60;init&#62;</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>37</index><block>37</block><killingTest/><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>64</index><block>39</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test55</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>71</index><block>40</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test55</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>75</index><block>41</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test26</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>97</index><block>44</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test52</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>57</index><block>38</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test55</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>35</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test26</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>62</index><block>38</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test55</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>70</index><block>39</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test55</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>82</index><block>41</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test26</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>107</index><block>44</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test52</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>229</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>35</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test00</killingTest><description>removed call to com/google/common/math/MathPreconditions::checkNonNegative</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>35</block><killingTest/><description>removed call to com/google/common/math/BigIntegerMath::fitsInLong</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>15</index><block>36</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test30</killingTest><description>removed call to java/math/BigInteger::longValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>17</index><block>36</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test30</killingTest><description>removed call to com/google/common/math/LongMath::sqrt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>18</index><block>36</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test30</killingTest><description>removed call to java/math/BigInteger::valueOf</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>24</index><block>37</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test26</killingTest><description>removed call to com/google/common/math/BigIntegerMath::sqrtFloor</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>30</index><block>37</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test27</killingTest><description>removed call to java/math/RoundingMode::ordinal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>38</index><block>37</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test29</killingTest><description>removed call to java/math/BigInteger::pow</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>40</index><block>37</block><killingTest/><description>removed call to java/math/BigInteger::equals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>51</index><block>38</block><killingTest/><description>removed call to java/math/BigInteger::intValue</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>61</index><block>38</block><killingTest/><description>removed call to java/math/BigInteger::intValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>67</index><block>39</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test55</killingTest><description>removed call to java/math/BigInteger::pow</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>69</index><block>39</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test55</killingTest><description>removed call to java/math/BigInteger::equals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>89</index><block>43</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test26</killingTest><description>removed call to java/math/BigInteger::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>98</index><block>44</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test52</killingTest><description>removed call to java/math/BigInteger::pow</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>100</index><block>44</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test52</killingTest><description>removed call to java/math/BigInteger::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>106</index><block>44</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test52</killingTest><description>removed call to java/math/BigInteger::compareTo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>114</index><block>46</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test52</killingTest><description>removed call to java/math/BigInteger::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>19</index><block>36</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test30</killingTest><description>replaced return value with null for com/google/common/math/BigIntegerMath::sqrt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>46</index><block>37</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test27</killingTest><description>replaced return value with null for com/google/common/math/BigIntegerMath::sqrt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>92</index><block>43</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test26</killingTest><description>replaced return value with null for com/google/common/math/BigIntegerMath::sqrt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>117</index><block>46</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test52</killingTest><description>replaced return value with null for com/google/common/math/BigIntegerMath::sqrt</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='12'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>11</index><block>35</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>62</index><block>38</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test55</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>70</index><block>39</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test55</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>82</index><block>41</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test55</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>11</index><block>35</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test26</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>62</index><block>38</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>70</index><block>39</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>82</index><block>41</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test26</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>107</index><block>44</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test41</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>107</index><block>44</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test52</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><block>36</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test30</killingTest><description>mutated return of Object value for com/google/common/math/BigIntegerMath::sqrt to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>46</index><block>37</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test27</killingTest><description>mutated return of Object value for com/google/common/math/BigIntegerMath::sqrt to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>92</index><block>43</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test26</killingTest><description>mutated return of Object value for com/google/common/math/BigIntegerMath::sqrt to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>117</index><block>46</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test52</killingTest><description>mutated return of Object value for com/google/common/math/BigIntegerMath::sqrt to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>41</index><block>37</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test29</killingTest><description>removed call to com/google/common/math/MathPreconditions::checkRoundingUnnecessary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>38</index><block>37</block><killingTest/><description>replaced call to java/math/BigInteger::pow with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>67</index><block>39</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test55</killingTest><description>replaced call to java/math/BigInteger::pow with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>89</index><block>43</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test26</killingTest><description>replaced call to java/math/BigInteger::add with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>98</index><block>44</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test41</killingTest><description>replaced call to java/math/BigInteger::pow with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>100</index><block>44</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test41</killingTest><description>replaced call to java/math/BigInteger::add with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>114</index><block>46</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test52</killingTest><description>replaced call to java/math/BigInteger::add with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_0</mutator><index>32</index><block>37</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test29</killingTest><description>RemoveSwitch 0 mutation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_1</mutator><index>32</index><block>37</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test28</killingTest><description>RemoveSwitch 1 mutation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_2</mutator><index>32</index><block>37</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test27</killingTest><description>RemoveSwitch 2 mutation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_3</mutator><index>32</index><block>37</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test26</killingTest><description>RemoveSwitch 3 mutation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_4</mutator><index>32</index><block>37</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test55</killingTest><description>RemoveSwitch 4 mutation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_5</mutator><index>32</index><block>37</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test25</killingTest><description>RemoveSwitch 5 mutation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_6</mutator><index>32</index><block>37</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test52</killingTest><description>RemoveSwitch 6 mutation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_7</mutator><index>32</index><block>37</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test41</killingTest><description>RemoveSwitch 7 mutation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(Ljava/math/BigInteger;Ljava/math/RoundingMode;)Ljava/math/BigInteger;</methodDescription><lineNumber>234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.SwitchMutator</mutator><index>32</index><block>37</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test26</killingTest><description>Switch mutation</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtApproxWithDoubles</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>5</index><block>54</block><killingTest/><description>replaced call to java/lang/Math::sqrt with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtApproxWithDoubles</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>54</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test26</killingTest><description>removed call to com/google/common/math/DoubleUtils::bigToDouble</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtApproxWithDoubles</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>54</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test26</killingTest><description>removed call to java/lang/Math::sqrt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtApproxWithDoubles</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>54</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test26</killingTest><description>removed call to com/google/common/math/DoubleMath::roundToBigInteger</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtApproxWithDoubles</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>8</index><block>54</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test26</killingTest><description>replaced return value with null for com/google/common/math/BigIntegerMath::sqrtApproxWithDoubles</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtApproxWithDoubles</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>54</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test26</killingTest><description>mutated return of Object value for com/google/common/math/BigIntegerMath::sqrtApproxWithDoubles to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>15</index><block>49</block><killingTest/><description>replaced call to com/google/common/math/BigIntegerMath::sqrtApproxWithDoubles with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>33</index><block>50</block><killingTest/><description>replaced call to com/google/common/math/BigIntegerMath::sqrtApproxWithDoubles with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>45</index><block>50</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test26</killingTest><description>replaced call to java/math/BigInteger::divide with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>46</index><block>50</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test26</killingTest><description>replaced call to java/math/BigInteger::add with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>70</index><block>52</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test26</killingTest><description>replaced call to java/math/BigInteger::divide with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>71</index><block>52</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test26</killingTest><description>replaced call to java/math/BigInteger::add with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>11</index><block>48</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>80</index><block>52</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>10</index><block>48</block><killingTest/><description>Substituted 1023 with 1024</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>23</index><block>50</block><killingTest/><description>Substituted 52 with 53</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>25</index><block>50</block><killingTest/><description>Substituted -2 with -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>35</index><block>50</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>47</index><block>50</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>72</index><block>52</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test26</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>50</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test24</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><block>50</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test24</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>36</index><block>50</block><killingTest/><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>48</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test24</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>50</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test26</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>80</index><block>52</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test26</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>48</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test24</killingTest><description>removed call to com/google/common/math/BigIntegerMath::log2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>15</index><block>49</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test26</killingTest><description>removed call to com/google/common/math/BigIntegerMath::sqrtApproxWithDoubles</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>32</index><block>50</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test24</killingTest><description>removed call to java/math/BigInteger::shiftRight</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>33</index><block>50</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test24</killingTest><description>removed call to com/google/common/math/BigIntegerMath::sqrtApproxWithDoubles</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>37</index><block>50</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test24</killingTest><description>removed call to java/math/BigInteger::shiftLeft</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>45</index><block>50</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test26</killingTest><description>removed call to java/math/BigInteger::divide</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>46</index><block>50</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test26</killingTest><description>removed call to java/math/BigInteger::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>48</index><block>50</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test26</killingTest><description>removed call to java/math/BigInteger::shiftRight</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>54</index><block>50</block><killingTest/><description>removed call to java/math/BigInteger::equals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>70</index><block>52</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test26</killingTest><description>removed call to java/math/BigInteger::divide</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>71</index><block>52</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test26</killingTest><description>removed call to java/math/BigInteger::add</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>73</index><block>52</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test26</killingTest><description>removed call to java/math/BigInteger::shiftRight</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>79</index><block>52</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test26</killingTest><description>removed call to java/math/BigInteger::compareTo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>59</index><block>51</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test55</killingTest><description>replaced return value with null for com/google/common/math/BigIntegerMath::sqrtFloor</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>303</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>84</index><block>53</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test26</killingTest><description>replaced return value with null for com/google/common/math/BigIntegerMath::sqrtFloor</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>55</index><block>50</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>55</index><block>50</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test26</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>11</index><block>48</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>80</index><block>52</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>11</index><block>48</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test24</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>80</index><block>52</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test26</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>59</index><block>51</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test55</killingTest><description>mutated return of Object value for com/google/common/math/BigIntegerMath::sqrtFloor to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>303</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>84</index><block>53</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test26</killingTest><description>mutated return of Object value for com/google/common/math/BigIntegerMath::sqrtFloor to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>32</index><block>50</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test24</killingTest><description>replaced call to java/math/BigInteger::shiftRight with receiver</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>37</index><block>50</block><killingTest/><description>replaced call to java/math/BigInteger::shiftLeft with receiver</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>45</index><block>50</block><killingTest/><description>replaced call to java/math/BigInteger::divide with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>46</index><block>50</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test26</killingTest><description>replaced call to java/math/BigInteger::add with receiver</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>48</index><block>50</block><killingTest/><description>replaced call to java/math/BigInteger::shiftRight with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>70</index><block>52</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test26</killingTest><description>replaced call to java/math/BigInteger::divide with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>71</index><block>52</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test26</killingTest><description>replaced call to java/math/BigInteger::add with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BigIntegerMath.java</sourceFile><mutatedClass>com.google.common.math.BigIntegerMath</mutatedClass><mutatedMethod>sqrtFloor</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)Ljava/math/BigInteger;</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>73</index><block>52</block><killingTest>com.google.common.math.BigIntegerMath_ESTest.test26</killingTest><description>replaced call to java/math/BigInteger::shiftRight with receiver</description></mutation>
</mutations>

<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math3/optimization/GoalType;ZD)V</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>9</index><block>0</block><killingTest/><description>Substituted 10 with 11</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math3/optimization/GoalType;ZDI)V</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>10</index><block>1</block><killingTest/><description>removed call to java/util/ArrayList::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math3/optimization/GoalType;ZDI)V</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>47</index><block>2</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math3/optimization/GoalType;ZDI)V</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>50</index><block>3</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math3/optimization/GoalType;ZDI)V</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>83</index><block>4</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math3/optimization/GoalType;ZDI)V</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>86</index><block>5</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math3/optimization/GoalType;ZDI)V</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>52</index><block>3</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math3/optimization/GoalType;ZDI)V</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>63</index><block>3</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math3/optimization/GoalType;ZDI)V</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>74</index><block>3</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math3/optimization/GoalType;ZDI)V</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>1</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math3/optimization/GoalType;ZDI)V</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>82</index><block>3</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math3/optimization/GoalType;ZDI)V</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>22</index><block>1</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::normalizeConstraints</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math3/optimization/GoalType;ZDI)V</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>43</index><block>1</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/LinearObjectiveFunction::getCoefficients</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math3/optimization/GoalType;ZDI)V</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>44</index><block>1</block><killingTest/><description>removed call to org/apache/commons/math3/linear/RealVector::getDimension</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math3/optimization/GoalType;ZDI)V</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>59</index><block>3</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::getConstraintTypeCounts</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math3/optimization/GoalType;ZDI)V</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>62</index><block>3</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::getConstraintTypeCounts</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math3/optimization/GoalType;ZDI)V</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>70</index><block>3</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::getConstraintTypeCounts</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math3/optimization/GoalType;ZDI)V</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>73</index><block>3</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::getConstraintTypeCounts</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math3/optimization/GoalType;ZDI)V</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>88</index><block>5</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::createTableau</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math3/optimization/GoalType;ZDI)V</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>46</index><block>1</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math3/optimization/GoalType;ZDI)V</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>82</index><block>3</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math3/optimization/GoalType;ZDI)V</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>46</index><block>1</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math3/optimization/GoalType;ZDI)V</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>82</index><block>3</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math3/optimization/GoalType;ZDI)V</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>93</index><block>5</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::initializeColumnLabels</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math3/optimization/GoalType;ZDI)V</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>11</index><block>1</block><killingTest/><description>Removed assignment to member variable columnLabels</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math3/optimization/GoalType;ZDI)V</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>16</index><block>1</block><killingTest/><description>Removed assignment to member variable f</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math3/optimization/GoalType;ZDI)V</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>23</index><block>1</block><killingTest/><description>Removed assignment to member variable constraints</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math3/optimization/GoalType;ZDI)V</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>28</index><block>1</block><killingTest/><description>Removed assignment to member variable restrictToNonNegative</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math3/optimization/GoalType;ZDI)V</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>33</index><block>1</block><killingTest/><description>Removed assignment to member variable epsilon</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math3/optimization/GoalType;ZDI)V</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>38</index><block>1</block><killingTest/><description>Removed assignment to member variable maxUlps</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math3/optimization/GoalType;ZDI)V</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>53</index><block>3</block><killingTest/><description>Removed assignment to member variable numDecisionVariables</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math3/optimization/GoalType;ZDI)V</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>64</index><block>3</block><killingTest/><description>Removed assignment to member variable numSlackVariables</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math3/optimization/GoalType;ZDI)V</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>75</index><block>3</block><killingTest/><description>Removed assignment to member variable numArtificialVariables</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math3/optimization/GoalType;ZDI)V</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>89</index><block>5</block><killingTest/><description>Removed assignment to member variable tableau</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>copyArray</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>74</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>copyArray</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>74</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::getNumObjectiveFunctions</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>copyArray</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>74</block><killingTest/><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>282</index><block>32</block><killingTest/><description>replaced call to org/apache/commons/math3/linear/RealVector::subtract with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>152</index><block>25</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>32</index><block>15</block><killingTest/><description>removed call to org/apache/commons/math3/linear/Array2DRowRealMatrix::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>219</index><block>28</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>237</index><block>30</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>268</index><block>32</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>286</index><block>32</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>14</index><block>15</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>38</index><block>15</block><killingTest/><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>43</index><block>16</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>44</index><block>16</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>45</index><block>16</block><killingTest/><description>Substituted -1.0 with 1.0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>51</index><block>16</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>53</index><block>17</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>56</index><block>18</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>66</index><block>19</block><killingTest/><description>Substituted 1.0 with 2.0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>69</index><block>20</block><killingTest/><description>Substituted -1.0 with 1.0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>79</index><block>21</block><killingTest/><description>Substituted -1.0 with 1.0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>199</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>103</index><block>22</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>199</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>112</index><block>24</block><killingTest/><description>Substituted -1.0 with 1.0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>130</index><block>25</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>137</index><block>25</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>141</index><block>25</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>145</index><block>25</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>190</index><block>27</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>201</index><block>27</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>221</index><block>28</block><killingTest/><description>Substituted 1.0 with 2.0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>239</index><block>30</block><killingTest/><description>Substituted -1.0 with 1.0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>254</index><block>32</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>259</index><block>32</block><killingTest/><description>Substituted 1.0 with 2.0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>270</index><block>32</block><killingTest/><description>Substituted 1.0 with 2.0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>275</index><block>32</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>277</index><block>32</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>15</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>15</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>15</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>15</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>15</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>199</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>104</index><block>22</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>199</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>116</index><block>24</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>131</index><block>25</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>166</index><block>26</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>191</index><block>27</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>202</index><block>27</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>220</index><block>28</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>238</index><block>30</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>258</index><block>32</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>269</index><block>32</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>15</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><block>16</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>65</index><block>18</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>75</index><block>20</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>199</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>106</index><block>22</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>123</index><block>24</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>152</index><block>25</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>183</index><block>26</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>211</index><block>27</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>229</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>229</index><block>29</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>246</index><block>30</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>250</index><block>31</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>12</index><block>15</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::getNumObjectiveFunctions</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>21</index><block>15</block><killingTest/><description>removed call to java/util/List::size</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>23</index><block>15</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::getNumObjectiveFunctions</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>37</index><block>15</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::getNumObjectiveFunctions</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>50</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::getNumObjectiveFunctions</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>78</index><block>21</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/LinearObjectiveFunction::getCoefficients</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>80</index><block>21</block><killingTest/><description>removed call to org/apache/commons/math3/linear/RealVector::mapMultiply</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>85</index><block>22</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/LinearObjectiveFunction::getCoefficients</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>92</index><block>22</block><killingTest/><description>removed call to org/apache/commons/math3/linear/RealVector::toArray</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>94</index><block>22</block><killingTest/><description>removed call to org/apache/commons/math3/linear/Array2DRowRealMatrix::getDataRef</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>199</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>109</index><block>23</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/LinearObjectiveFunction::getConstantTerm</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>199</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>115</index><block>24</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/LinearObjectiveFunction::getConstantTerm</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>129</index><block>25</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::getSlackVariableOffset</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>133</index><block>25</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::getInvertedCoefficientSum</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>151</index><block>25</block><killingTest/><description>removed call to java/util/List::size</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>158</index><block>26</block><killingTest/><description>removed call to java/util/List::get</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>164</index><block>26</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::getNumObjectiveFunctions</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>172</index><block>26</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/LinearConstraint::getCoefficients</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>173</index><block>26</block><killingTest/><description>removed call to org/apache/commons/math3/linear/RealVector::toArray</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>175</index><block>26</block><killingTest/><description>removed call to org/apache/commons/math3/linear/Array2DRowRealMatrix::getDataRef</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>189</index><block>27</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::getSlackVariableOffset</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>193</index><block>27</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/LinearConstraint::getCoefficients</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>194</index><block>27</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::getInvertedCoefficientSum</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>204</index><block>27</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/LinearConstraint::getValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>209</index><block>27</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/LinearConstraint::getRelationship</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>217</index><block>28</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::getSlackVariableOffset</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>229</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>227</index><block>29</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/LinearConstraint::getRelationship</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>235</index><block>30</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::getSlackVariableOffset</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>244</index><block>30</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/LinearConstraint::getRelationship</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>248</index><block>31</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/LinearConstraint::getRelationship</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>256</index><block>32</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::getArtificialVariableOffset</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>266</index><block>32</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::getArtificialVariableOffset</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>278</index><block>32</block><killingTest/><description>removed call to org/apache/commons/math3/linear/Array2DRowRealMatrix::getRowVector</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>281</index><block>32</block><killingTest/><description>removed call to org/apache/commons/math3/linear/Array2DRowRealMatrix::getRowVector</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>282</index><block>32</block><killingTest/><description>removed call to org/apache/commons/math3/linear/RealVector::subtract</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>291</index><block>33</block><killingTest/><description>replaced return value with null for org/apache/commons/math3/optimization/linear/SimplexTableau::createTableau</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>39</index><block>15</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>52</index><block>16</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>65</index><block>18</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>75</index><block>20</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>199</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>106</index><block>22</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>123</index><block>24</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>183</index><block>26</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>211</index><block>27</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>229</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>229</index><block>29</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>246</index><block>30</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>250</index><block>31</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>39</index><block>15</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>52</index><block>16</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>65</index><block>18</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>75</index><block>20</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>199</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>106</index><block>22</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>123</index><block>24</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>183</index><block>26</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>211</index><block>27</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>229</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>229</index><block>29</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>246</index><block>30</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>250</index><block>31</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>152</index><block>25</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>152</index><block>25</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>291</index><block>33</block><killingTest/><description>mutated return of Object value for org/apache/commons/math3/optimization/linear/SimplexTableau::createTableau to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>46</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/linear/Array2DRowRealMatrix::setEntry</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>71</index><block>20</block><killingTest/><description>removed call to org/apache/commons/math3/linear/Array2DRowRealMatrix::setEntry</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>97</index><block>22</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::copyArray</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>199</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>118</index><block>24</block><killingTest/><description>removed call to org/apache/commons/math3/linear/Array2DRowRealMatrix::setEntry</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>134</index><block>25</block><killingTest/><description>removed call to org/apache/commons/math3/linear/Array2DRowRealMatrix::setEntry</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>178</index><block>26</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::copyArray</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>195</index><block>27</block><killingTest/><description>removed call to org/apache/commons/math3/linear/Array2DRowRealMatrix::setEntry</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>205</index><block>27</block><killingTest/><description>removed call to org/apache/commons/math3/linear/Array2DRowRealMatrix::setEntry</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>222</index><block>28</block><killingTest/><description>removed call to org/apache/commons/math3/linear/Array2DRowRealMatrix::setEntry</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>240</index><block>30</block><killingTest/><description>removed call to org/apache/commons/math3/linear/Array2DRowRealMatrix::setEntry</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>260</index><block>32</block><killingTest/><description>removed call to org/apache/commons/math3/linear/Array2DRowRealMatrix::setEntry</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>271</index><block>32</block><killingTest/><description>removed call to org/apache/commons/math3/linear/Array2DRowRealMatrix::setEntry</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>283</index><block>32</block><killingTest/><description>removed call to org/apache/commons/math3/linear/Array2DRowRealMatrix::setRowVector</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>80</index><block>21</block><killingTest/><description>replaced call to org/apache/commons/math3/linear/RealVector::mapMultiply with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>282</index><block>32</block><killingTest/><description>replaced call to org/apache/commons/math3/linear/RealVector::subtract with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>219</index><block>28</block><killingTest/><description>Removed increment 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>237</index><block>30</block><killingTest/><description>Removed increment 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>268</index><block>32</block><killingTest/><description>Removed increment 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>100</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>100</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>445</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>101</block><killingTest/><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>100</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><block>100</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::getWidth</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>445</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>20</index><block>101</block><killingTest/><description>removed call to org/apache/commons/math3/linear/RealMatrix::getEntry</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>9</index><block>100</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>9</index><block>100</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>445</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>23</index><block>101</block><killingTest/><description>removed call to org/apache/commons/math3/linear/RealMatrix::setEntry</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>164</index><block>71</block><killingTest/><description>replaced call to java/util/Set::toArray with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>340</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>32</index><block>60</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>48</index><block>61</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>68</index><block>63</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>114</index><block>66</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>127</index><block>67</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>176</index><block>71</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>14</index><block>60</block><killingTest/><description>removed call to java/util/TreeSet::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>371</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>197</index><block>73</block><killingTest/><description>removed call to org/apache/commons/math3/linear/Array2DRowRealMatrix::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>91</index><block>65</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>143</index><block>69</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>156</index><block>70</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>189</index><block>72</block><killingTest/><description>Changed increment from -1 to 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>58</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>19</index><block>60</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>37</index><block>61</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>44</index><block>61</block><killingTest/><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>62</index><block>63</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>97</index><block>66</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>108</index><block>66</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>117</index><block>67</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>121</index><block>67</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>139</index><block>69</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>171</index><block>71</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>202</index><block>73</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>74</index><block>64</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>98</index><block>66</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>103</index><block>66</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>140</index><block>69</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>172</index><block>71</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>58</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>340</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>60</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>48</index><block>61</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>68</index><block>63</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>81</index><block>64</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>114</index><block>66</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>127</index><block>67</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>134</index><block>68</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>176</index><block>71</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>58</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::getNumObjectiveFunctions</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>20</index><block>60</block><killingTest/><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>21</index><block>60</block><killingTest/><description>removed call to java/util/Set::add</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>340</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>26</index><block>60</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::getNumObjectiveFunctions</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>340</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>31</index><block>60</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::getArtificialVariableOffset</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>39</index><block>61</block><killingTest/><description>removed call to org/apache/commons/math3/linear/RealMatrix::getEntry</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>47</index><block>61</block><killingTest/><description>removed call to org/apache/commons/math3/util/Precision::compareTo</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>343</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>53</index><block>62</block><killingTest/><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>343</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>54</index><block>62</block><killingTest/><description>removed call to java/util/Set::add</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>67</index><block>63</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::getNumArtificialVariables</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>73</index><block>64</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::getArtificialVariableOffset</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>80</index><block>64</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::getBasicRow</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>86</index><block>65</block><killingTest/><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>87</index><block>65</block><killingTest/><description>removed call to java/util/Set::add</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>96</index><block>66</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::getHeight</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>100</index><block>66</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::getWidth</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>102</index><block>66</block><killingTest/><description>removed call to java/util/Set::size</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>113</index><block>66</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::getHeight</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>126</index><block>67</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::getWidth</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>132</index><block>68</block><killingTest/><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>133</index><block>68</block><killingTest/><description>removed call to java/util/Set::contains</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>148</index><block>69</block><killingTest/><description>removed call to org/apache/commons/math3/linear/RealMatrix::getEntry</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>162</index><block>71</block><killingTest/><description>removed call to java/util/Set::size</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>164</index><block>71</block><killingTest/><description>removed call to java/util/Set::toArray</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>184</index><block>72</block><killingTest/><description>removed call to java/lang/Integer::intValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>185</index><block>72</block><killingTest/><description>removed call to java/util/List::remove</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>6</index><block>58</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>81</index><block>64</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>134</index><block>68</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>6</index><block>58</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>81</index><block>64</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>134</index><block>68</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>340</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>32</index><block>60</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>48</index><block>61</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>68</index><block>63</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>114</index><block>66</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>127</index><block>67</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>176</index><block>71</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>340</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>32</index><block>60</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>48</index><block>61</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>68</index><block>63</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>114</index><block>66</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>127</index><block>67</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>176</index><block>71</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>371</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>198</index><block>73</block><killingTest/><description>Removed assignment to member variable tableau</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>203</index><block>73</block><killingTest/><description>Removed assignment to member variable numArtificialVariables</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>143</index><block>69</block><killingTest/><description>Removed increment 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>156</index><block>70</block><killingTest/><description>Removed increment 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>dropPhase1Objective</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>189</index><block>72</block><killingTest/><description>Removed increment -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>583</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>9</index><block>120</block><killingTest/><description>replaced boolean return with false for org/apache/commons/math3/optimization/linear/SimplexTableau::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>76</index><block>132</block><killingTest/><description>replaced boolean return with true for org/apache/commons/math3/optimization/linear/SimplexTableau::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>598</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>80</index><block>133</block><killingTest/><description>replaced boolean return with true for org/apache/commons/math3/optimization/linear/SimplexTableau::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>583</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>120</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>71</index><block>131</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>74</index><block>132</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>598</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>79</index><block>133</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>582</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>119</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>586</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>121</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>122</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>123</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>124</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>125</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>126</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><block>127</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>58</index><block>128</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>64</index><block>129</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>70</index><block>130</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>57</index><block>128</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/LinearObjectiveFunction::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>63</index><block>129</block><killingTest/><description>removed call to java/util/List::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>69</index><block>130</block><killingTest/><description>removed call to java/lang/Object::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>586</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>14</index><block>121</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>26</index><block>122</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>31</index><block>123</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>36</index><block>124</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>41</index><block>125</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>47</index><block>126</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>52</index><block>127</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>58</index><block>128</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>64</index><block>129</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>70</index><block>130</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>582</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>119</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>586</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>14</index><block>121</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>26</index><block>122</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>31</index><block>123</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>36</index><block>124</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>41</index><block>125</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>47</index><block>126</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>52</index><block>127</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>58</index><block>128</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>64</index><block>129</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>70</index><block>130</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>583</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>120</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>76</index><block>132</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>598</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>80</index><block>133</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>521</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>112</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>521</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>112</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>521</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>112</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::getNumObjectiveFunctions</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>521</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>11</index><block>112</block><killingTest/><description>replaced int return with 0 for org/apache/commons/math3/optimization/linear/SimplexTableau::getArtificialVariableOffset</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>521</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>112</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><block>50</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>48</index><block>55</block><killingTest/><description>replaced Integer return value with 0 for org/apache/commons/math3/optimization/linear/SimplexTableau::getBasicRow</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>56</index><block>57</block><killingTest/><description>replaced Integer return value with 0 for org/apache/commons/math3/optimization/linear/SimplexTableau::getBasicRow</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>7</index><block>50</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>24</index><block>51</block><killingTest/><description>Substituted 1.0 with 2.0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>40</index><block>54</block><killingTest/><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>50</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>51</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>52</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>54</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>12</index><block>50</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::getHeight</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>317</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>19</index><block>51</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::getEntry</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>27</index><block>51</block><killingTest/><description>removed call to org/apache/commons/math3/util/Precision::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>34</index><block>53</block><killingTest/><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>43</index><block>54</block><killingTest/><description>removed call to org/apache/commons/math3/util/Precision::equals</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>28</index><block>51</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>30</index><block>52</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>44</index><block>54</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>28</index><block>51</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>30</index><block>52</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>44</index><block>54</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>13</index><block>50</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>13</index><block>50</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>48</index><block>55</block><killingTest/><description>mutated return of Object value for org/apache/commons/math3/optimization/linear/SimplexTableau::getBasicRow to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>56</index><block>57</block><killingTest/><description>mutated return of Object value for org/apache/commons/math3/optimization/linear/SimplexTableau::getBasicRow to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getConstraintTypeCounts</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/Relationship;)I</methodDescription><lineNumber>290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>27</index><block>45</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getConstraintTypeCounts</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/Relationship;)I</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>43</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getConstraintTypeCounts</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/Relationship;)I</methodDescription><lineNumber>289</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>44</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getConstraintTypeCounts</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/Relationship;)I</methodDescription><lineNumber>289</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>22</index><block>44</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/LinearConstraint::getRelationship</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getConstraintTypeCounts</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/Relationship;)I</methodDescription><lineNumber>293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>34</index><block>46</block><killingTest/><description>replaced int return with 0 for org/apache/commons/math3/optimization/linear/SimplexTableau::getConstraintTypeCounts</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getConstraintTypeCounts</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/Relationship;)I</methodDescription><lineNumber>289</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>24</index><block>44</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getConstraintTypeCounts</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/Relationship;)I</methodDescription><lineNumber>289</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>24</index><block>44</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getConstraintTypeCounts</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/Relationship;)I</methodDescription><lineNumber>293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>34</index><block>46</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getConstraintTypeCounts</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/Relationship;)I</methodDescription><lineNumber>290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>27</index><block>45</block><killingTest/><description>Removed increment 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>575</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>118</block><killingTest/><description>removed call to org/apache/commons/math3/linear/RealMatrix::getData</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>575</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>6</index><block>118</block><killingTest/><description>replaced return value with null for org/apache/commons/math3/optimization/linear/SimplexTableau::getData</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>575</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>118</block><killingTest/><description>mutated return of Object value for org/apache/commons/math3/optimization/linear/SimplexTableau::getData to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>494</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>109</block><killingTest/><description>removed call to org/apache/commons/math3/linear/RealMatrix::getEntry</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>494</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>8</index><block>109</block><killingTest/><description>replaced double return with 0.0d for org/apache/commons/math3/optimization/linear/SimplexTableau::getEntry</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>494</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>109</block><killingTest/><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/optimization/linear/SimplexTableau::getEntry</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getHeight</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>108</block><killingTest/><description>removed call to org/apache/commons/math3/linear/RealMatrix::getRowDimension</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getHeight</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>6</index><block>108</block><killingTest/><description>replaced int return with 0 for org/apache/commons/math3/optimization/linear/SimplexTableau::getHeight</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getHeight</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>108</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getInvertedCoefficientSum</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)D</methodDescription><lineNumber>303</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>47</block><killingTest>org.apache.commons.math3.optimization.linear.SimplexTableau_ESTest.test1</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getInvertedCoefficientSum</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)D</methodDescription><lineNumber>303</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>33</index><block>48</block><killingTest>org.apache.commons.math3.optimization.linear.SimplexTableau_ESTest.test1</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getInvertedCoefficientSum</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)D</methodDescription><lineNumber>302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>47</block><killingTest>org.apache.commons.math3.optimization.linear.SimplexTableau_ESTest.test1</killingTest><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getInvertedCoefficientSum</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)D</methodDescription><lineNumber>303</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>47</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getInvertedCoefficientSum</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)D</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>29</index><block>48</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getInvertedCoefficientSum</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)D</methodDescription><lineNumber>303</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>47</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getInvertedCoefficientSum</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)D</methodDescription><lineNumber>303</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><block>47</block><killingTest>org.apache.commons.math3.optimization.linear.SimplexTableau_ESTest.test1</killingTest><description>removed call to org/apache/commons/math3/linear/RealVector::toArray</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getInvertedCoefficientSum</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)D</methodDescription><lineNumber>306</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>38</index><block>49</block><killingTest/><description>replaced double return with 0.0d for org/apache/commons/math3/optimization/linear/SimplexTableau::getInvertedCoefficientSum</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getInvertedCoefficientSum</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)D</methodDescription><lineNumber>303</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>20</index><block>47</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getInvertedCoefficientSum</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)D</methodDescription><lineNumber>303</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>20</index><block>47</block><killingTest>org.apache.commons.math3.optimization.linear.SimplexTableau_ESTest.test1</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getInvertedCoefficientSum</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealVector;)D</methodDescription><lineNumber>306</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>38</index><block>49</block><killingTest>org.apache.commons.math3.optimization.linear.SimplexTableau_ESTest.test1</killingTest><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/optimization/linear/SimplexTableau::getInvertedCoefficientSum</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumArtificialVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>567</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>117</block><killingTest/><description>replaced int return with 0 for org/apache/commons/math3/optimization/linear/SimplexTableau::getNumArtificialVariables</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumArtificialVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>567</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>117</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumDecisionVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>542</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>114</block><killingTest/><description>replaced int return with 0 for org/apache/commons/math3/optimization/linear/SimplexTableau::getNumDecisionVariables</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumDecisionVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>542</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>114</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumObjectiveFunctions</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>5</index><block>40</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumObjectiveFunctions</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><block>41</block><killingTest/><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumObjectiveFunctions</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>9</index><block>42</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumObjectiveFunctions</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>40</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumObjectiveFunctions</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>11</index><block>42</block><killingTest/><description>replaced int return with 0 for org/apache/commons/math3/optimization/linear/SimplexTableau::getNumObjectiveFunctions</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumObjectiveFunctions</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>5</index><block>40</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumObjectiveFunctions</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>5</index><block>40</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumObjectiveFunctions</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>42</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumSlackVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>559</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>116</block><killingTest/><description>replaced int return with 0 for org/apache/commons/math3/optimization/linear/SimplexTableau::getNumSlackVariables</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumSlackVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>559</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>116</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getOriginalNumDecisionVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>551</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>115</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/LinearObjectiveFunction::getCoefficients</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getOriginalNumDecisionVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>551</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>115</block><killingTest/><description>removed call to org/apache/commons/math3/linear/RealVector::getDimension</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getOriginalNumDecisionVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>551</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>7</index><block>115</block><killingTest/><description>replaced int return with 0 for org/apache/commons/math3/optimization/linear/SimplexTableau::getOriginalNumDecisionVariables</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getOriginalNumDecisionVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>551</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>115</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getRhsOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>529</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>113</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getRhsOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>529</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>113</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getRhsOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>529</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>113</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::getWidth</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getRhsOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>529</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>7</index><block>113</block><killingTest/><description>replaced int return with 0 for org/apache/commons/math3/optimization/linear/SimplexTableau::getRhsOffset</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getRhsOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>529</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>113</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSlackVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>513</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>111</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSlackVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>513</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>111</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::getNumObjectiveFunctions</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSlackVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>513</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>8</index><block>111</block><killingTest/><description>replaced int return with 0 for org/apache/commons/math3/optimization/linear/SimplexTableau::getSlackVariableOffset</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSlackVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>513</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>111</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>11</index><block>80</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>408</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>55</index><block>84</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>73</index><block>85</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>39</index><block>84</block><killingTest/><description>removed call to java/util/HashSet::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>62</index><block>85</block><killingTest/><description>removed call to java/lang/StringBuilder::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>431</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>170</index><block>99</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/PointValuePair::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>408</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>159</index><block>98</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>404</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>24</index><block>83</block><killingTest/><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>408</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>49</index><block>84</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>78</index><block>86</block><killingTest/><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>100</index><block>89</block><killingTest/><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>423</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>113</index><block>91</block><killingTest/><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>423</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>117</index><block>92</block><killingTest/><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>137</index><block>95</block><killingTest/><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>150</index><block>97</block><killingTest/><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>423</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>122</index><block>93</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>155</index><block>98</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>80</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>404</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>82</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>408</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>84</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>73</index><block>85</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>415</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>92</index><block>87</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>415</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>95</index><block>88</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>108</index><block>90</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>423</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>116</index><block>91</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>136</index><block>94</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>149</index><block>96</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>402</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>80</block><killingTest/><description>removed call to java/util/List::indexOf</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>81</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::getBasicRow</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>404</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>29</index><block>84</block><killingTest/><description>removed call to java/lang/Integer::intValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>404</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>31</index><block>84</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::getRhsOffset</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>404</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>32</index><block>84</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::getEntry</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>44</index><block>84</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::getOriginalNumDecisionVariables</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>64</index><block>85</block><killingTest/><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>66</index><block>85</block><killingTest/><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>67</index><block>85</block><killingTest/><description>removed call to java/lang/StringBuilder::toString</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>68</index><block>85</block><killingTest/><description>removed call to java/util/List::indexOf</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>414</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>87</index><block>87</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::getBasicRow</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>415</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>94</index><block>88</block><killingTest/><description>removed call to java/lang/Integer::intValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>107</index><block>90</block><killingTest/><description>removed call to java/util/Set::contains</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>425</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>129</index><block>94</block><killingTest/><description>removed call to java/util/Set::add</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>142</index><block>96</block><killingTest/><description>removed call to java/lang/Integer::intValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>144</index><block>96</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::getRhsOffset</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>145</index><block>96</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::getEntry</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>431</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>169</index><block>99</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/LinearObjectiveFunction::getValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>431</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>171</index><block>99</block><killingTest/><description>replaced return value with null for org/apache/commons/math3/optimization/linear/SimplexTableau::getSolution</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>404</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>23</index><block>82</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>415</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>92</index><block>87</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>415</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>95</index><block>88</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>108</index><block>90</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>423</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>116</index><block>91</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>136</index><block>94</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>149</index><block>96</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>404</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>23</index><block>82</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>415</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>92</index><block>87</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>415</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>95</index><block>88</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>108</index><block>90</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>423</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>116</index><block>91</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>136</index><block>94</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>149</index><block>96</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>11</index><block>80</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>408</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>55</index><block>84</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>73</index><block>85</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>11</index><block>80</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>408</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>55</index><block>84</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>73</index><block>85</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>431</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>171</index><block>99</block><killingTest/><description>mutated return of Object value for org/apache/commons/math3/optimization/linear/SimplexTableau::getSolution to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>64</index><block>85</block><killingTest/><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/PointValuePair;</methodDescription><lineNumber>409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>66</index><block>85</block><killingTest/><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getWidth</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>107</block><killingTest/><description>removed call to org/apache/commons/math3/linear/RealMatrix::getColumnDimension</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getWidth</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>6</index><block>107</block><killingTest/><description>replaced int return with 0 for org/apache/commons/math3/optimization/linear/SimplexTableau::getWidth</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getWidth</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>107</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>604</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>134</block><killingTest/><description>Replaced XOR with AND</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>604</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>134</block><killingTest/><description>Replaced XOR with AND</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>604</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>134</block><killingTest/><description>Replaced XOR with AND</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>604</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>134</block><killingTest/><description>Replaced XOR with AND</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>604</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>134</block><killingTest/><description>Replaced XOR with AND</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>604</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>134</block><killingTest/><description>Replaced XOR with AND</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>604</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>134</block><killingTest/><description>Replaced XOR with AND</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>604</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>134</block><killingTest/><description>Replaced XOR with AND</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>604</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>134</block><killingTest/><description>removed call to java/lang/Boolean::valueOf</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>604</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>134</block><killingTest/><description>removed call to java/lang/Boolean::hashCode</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>604</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>18</index><block>134</block><killingTest/><description>removed call to java/lang/Double::valueOf</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>604</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>19</index><block>134</block><killingTest/><description>removed call to java/lang/Double::hashCode</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>604</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>26</index><block>134</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/LinearObjectiveFunction::hashCode</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>604</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>30</index><block>134</block><killingTest/><description>removed call to java/util/List::hashCode</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>604</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>34</index><block>134</block><killingTest/><description>removed call to java/lang/Object::hashCode</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>604</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>36</index><block>134</block><killingTest/><description>replaced int return with 0 for org/apache/commons/math3/optimization/linear/SimplexTableau::hashCode</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>604</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>36</index><block>134</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>29</index><block>7</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>68</index><block>10</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>95</index><block>12</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>36</index><block>8</block><killingTest/><description>removed call to java/lang/StringBuilder::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>75</index><block>11</block><killingTest/><description>removed call to java/lang/StringBuilder::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>102</index><block>13</block><killingTest/><description>removed call to java/lang/StringBuilder::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>6</block><killingTest/><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>23</index><block>7</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>62</index><block>10</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>89</index><block>12</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>6</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>7</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><block>9</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>68</index><block>10</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>95</index><block>12</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>6</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::getNumObjectiveFunctions</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>12</index><block>7</block><killingTest/><description>removed call to java/util/List::add</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>19</index><block>7</block><killingTest/><description>removed call to java/util/List::add</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>7</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::getOriginalNumDecisionVariables</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>38</index><block>8</block><killingTest/><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>40</index><block>8</block><killingTest/><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>41</index><block>8</block><killingTest/><description>removed call to java/lang/StringBuilder::toString</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>42</index><block>8</block><killingTest/><description>removed call to java/util/List::add</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>58</index><block>10</block><killingTest/><description>removed call to java/util/List::add</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>67</index><block>10</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::getNumSlackVariables</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>77</index><block>11</block><killingTest/><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>79</index><block>11</block><killingTest/><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>80</index><block>11</block><killingTest/><description>removed call to java/lang/StringBuilder::toString</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>81</index><block>11</block><killingTest/><description>removed call to java/util/List::add</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>94</index><block>12</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::getNumArtificialVariables</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>104</index><block>13</block><killingTest/><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>106</index><block>13</block><killingTest/><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>107</index><block>13</block><killingTest/><description>removed call to java/lang/StringBuilder::toString</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>108</index><block>13</block><killingTest/><description>removed call to java/util/List::add</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>119</index><block>14</block><killingTest/><description>removed call to java/util/List::add</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>6</index><block>6</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>52</index><block>9</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>6</index><block>6</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>52</index><block>9</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>29</index><block>7</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>68</index><block>10</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>95</index><block>12</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>29</index><block>7</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>68</index><block>10</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>95</index><block>12</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>38</index><block>8</block><killingTest/><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>40</index><block>8</block><killingTest/><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>77</index><block>11</block><killingTest/><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>79</index><block>11</block><killingTest/><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>104</index><block>13</block><killingTest/><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initializeColumnLabels</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>106</index><block>13</block><killingTest/><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>40</index><block>79</block><killingTest/><description>replaced boolean return with false for org/apache/commons/math3/optimization/linear/SimplexTableau::isOptimal</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>32</index><block>77</block><killingTest/><description>replaced boolean return with true for org/apache/commons/math3/optimization/linear/SimplexTableau::isOptimal</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>12</index><block>75</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>28</index><block>76</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>35</index><block>78</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>10</index><block>75</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>389</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>17</index><block>76</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>24</index><block>76</block><killingTest/><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>31</index><block>77</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>39</index><block>79</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>75</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>75</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>76</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>75</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::getNumObjectiveFunctions</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>75</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::getWidth</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>389</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>19</index><block>76</block><killingTest/><description>removed call to org/apache/commons/math3/linear/RealMatrix::getEntry</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>27</index><block>76</block><killingTest/><description>removed call to org/apache/commons/math3/util/Precision::compareTo</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>12</index><block>75</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>28</index><block>76</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>12</index><block>75</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>28</index><block>76</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>32</index><block>77</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>40</index><block>79</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>35</index><block>78</block><killingTest/><description>Removed increment 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearConstraint;)Lorg/apache/commons/math3/optimization/linear/LinearConstraint;</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>7</index><block>37</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearConstraint;)Lorg/apache/commons/math3/optimization/linear/LinearConstraint;</methodDescription><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>23</index><block>38</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/LinearConstraint::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearConstraint;)Lorg/apache/commons/math3/optimization/linear/LinearConstraint;</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>35</index><block>39</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/LinearConstraint::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearConstraint;)Lorg/apache/commons/math3/optimization/linear/LinearConstraint;</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>37</block><killingTest/><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearConstraint;)Lorg/apache/commons/math3/optimization/linear/LinearConstraint;</methodDescription><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>14</index><block>38</block><killingTest/><description>Substituted -1.0 with 1.0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearConstraint;)Lorg/apache/commons/math3/optimization/linear/LinearConstraint;</methodDescription><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>19</index><block>38</block><killingTest/><description>Substituted -1.0 with 1.0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearConstraint;)Lorg/apache/commons/math3/optimization/linear/LinearConstraint;</methodDescription><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>38</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearConstraint;)Lorg/apache/commons/math3/optimization/linear/LinearConstraint;</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>37</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearConstraint;)Lorg/apache/commons/math3/optimization/linear/LinearConstraint;</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>37</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/LinearConstraint::getValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearConstraint;)Lorg/apache/commons/math3/optimization/linear/LinearConstraint;</methodDescription><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>38</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/LinearConstraint::getCoefficients</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearConstraint;)Lorg/apache/commons/math3/optimization/linear/LinearConstraint;</methodDescription><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>15</index><block>38</block><killingTest/><description>removed call to org/apache/commons/math3/linear/RealVector::mapMultiply</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearConstraint;)Lorg/apache/commons/math3/optimization/linear/LinearConstraint;</methodDescription><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>17</index><block>38</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/LinearConstraint::getRelationship</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearConstraint;)Lorg/apache/commons/math3/optimization/linear/LinearConstraint;</methodDescription><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>18</index><block>38</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/Relationship::oppositeRelationship</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearConstraint;)Lorg/apache/commons/math3/optimization/linear/LinearConstraint;</methodDescription><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>21</index><block>38</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/LinearConstraint::getValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearConstraint;)Lorg/apache/commons/math3/optimization/linear/LinearConstraint;</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>30</index><block>39</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/LinearConstraint::getCoefficients</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearConstraint;)Lorg/apache/commons/math3/optimization/linear/LinearConstraint;</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>32</index><block>39</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/LinearConstraint::getRelationship</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearConstraint;)Lorg/apache/commons/math3/optimization/linear/LinearConstraint;</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>34</index><block>39</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/LinearConstraint::getValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearConstraint;)Lorg/apache/commons/math3/optimization/linear/LinearConstraint;</methodDescription><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>24</index><block>38</block><killingTest/><description>replaced return value with null for org/apache/commons/math3/optimization/linear/SimplexTableau::normalize</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearConstraint;)Lorg/apache/commons/math3/optimization/linear/LinearConstraint;</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>36</index><block>39</block><killingTest/><description>replaced return value with null for org/apache/commons/math3/optimization/linear/SimplexTableau::normalize</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearConstraint;)Lorg/apache/commons/math3/optimization/linear/LinearConstraint;</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>7</index><block>37</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearConstraint;)Lorg/apache/commons/math3/optimization/linear/LinearConstraint;</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>7</index><block>37</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearConstraint;)Lorg/apache/commons/math3/optimization/linear/LinearConstraint;</methodDescription><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>24</index><block>38</block><killingTest/><description>mutated return of Object value for org/apache/commons/math3/optimization/linear/SimplexTableau::normalize to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearConstraint;)Lorg/apache/commons/math3/optimization/linear/LinearConstraint;</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>36</index><block>39</block><killingTest/><description>mutated return of Object value for org/apache/commons/math3/optimization/linear/SimplexTableau::normalize to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearConstraint;)Lorg/apache/commons/math3/optimization/linear/LinearConstraint;</methodDescription><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>15</index><block>38</block><killingTest/><description>replaced call to org/apache/commons/math3/linear/RealVector::mapMultiply with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/linear/LinearConstraint;)Lorg/apache/commons/math3/optimization/linear/LinearConstraint;</methodDescription><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>18</index><block>38</block><killingTest/><description>replaced call to org/apache/commons/math3/optimization/linear/Relationship::oppositeRelationship with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalizeConstraints</mutatedMethod><methodDescription>(Ljava/util/Collection;)Ljava/util/List;</methodDescription><lineNumber>253</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>27</index><block>35</block><killingTest/><description>replaced call to org/apache/commons/math3/optimization/linear/SimplexTableau::normalize with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalizeConstraints</mutatedMethod><methodDescription>(Ljava/util/Collection;)Ljava/util/List;</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>7</index><block>34</block><killingTest/><description>removed call to java/util/ArrayList::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalizeConstraints</mutatedMethod><methodDescription>(Ljava/util/Collection;)Ljava/util/List;</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>36</index><block>36</block><killingTest/><description>replaced return value with Collections.emptyList for org/apache/commons/math3/optimization/linear/SimplexTableau::normalizeConstraints</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalizeConstraints</mutatedMethod><methodDescription>(Ljava/util/Collection;)Ljava/util/List;</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>34</block><killingTest/><description>removed call to java/util/Collection::size</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalizeConstraints</mutatedMethod><methodDescription>(Ljava/util/Collection;)Ljava/util/List;</methodDescription><lineNumber>253</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>27</index><block>35</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::normalize</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalizeConstraints</mutatedMethod><methodDescription>(Ljava/util/Collection;)Ljava/util/List;</methodDescription><lineNumber>253</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>35</block><killingTest/><description>removed call to java/util/List::add</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalizeConstraints</mutatedMethod><methodDescription>(Ljava/util/Collection;)Ljava/util/List;</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>36</index><block>36</block><killingTest/><description>mutated return of Object value for org/apache/commons/math3/optimization/linear/SimplexTableau::normalizeConstraints to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>readObject</mutatedMethod><methodDescription>(Ljava/io/ObjectInputStream;)V</methodDescription><lineNumber>634</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>136</block><killingTest/><description>removed call to java/io/ObjectInputStream::defaultReadObject</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>readObject</mutatedMethod><methodDescription>(Ljava/io/ObjectInputStream;)V</methodDescription><lineNumber>635</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>136</block><killingTest/><description>removed call to org/apache/commons/math3/linear/MatrixUtils::deserializeRealMatrix</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>110</block><killingTest/><description>removed call to org/apache/commons/math3/linear/RealMatrix::setEntry</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>29</index><block>104</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::abs with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>103</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>32</index><block>104</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>103</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>30</index><block>104</block><killingTest/><description>Substituted 1.0E-12 with 1.0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>465</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>35</index><block>105</block><killingTest/><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>104</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>104</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>103</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>104</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><block>103</block><killingTest/><description>removed call to org/apache/commons/math3/optimization/linear/SimplexTableau::getWidth</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>16</index><block>104</block><killingTest/><description>removed call to org/apache/commons/math3/linear/RealMatrix::getEntry</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>21</index><block>104</block><killingTest/><description>removed call to org/apache/commons/math3/linear/RealMatrix::getEntry</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>29</index><block>104</block><killingTest/><description>removed call to org/apache/commons/math3/util/FastMath::abs</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>9</index><block>103</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>32</index><block>104</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>9</index><block>103</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>32</index><block>104</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>44</index><block>105</block><killingTest/><description>removed call to org/apache/commons/math3/linear/RealMatrix::setEntry</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>writeObject</mutatedMethod><methodDescription>(Ljava/io/ObjectOutputStream;)V</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>135</block><killingTest/><description>removed call to java/io/ObjectOutputStream::defaultWriteObject</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>writeObject</mutatedMethod><methodDescription>(Ljava/io/ObjectOutputStream;)V</methodDescription><lineNumber>623</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>135</block><killingTest/><description>removed call to org/apache/commons/math3/linear/MatrixUtils::serializeRealMatrix</description></mutation>
</mutations>

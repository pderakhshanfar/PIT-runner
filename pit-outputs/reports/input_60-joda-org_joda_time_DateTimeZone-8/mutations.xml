<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>717</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>14</index><block>125</block><killingTest>org.joda.time.DateTimeZone_ESTest.test55</killingTest><description>removed call to java/lang/IllegalArgumentException::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>716</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>124</block><killingTest>org.joda.time.DateTimeZone_ESTest.test41</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>716</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>8</index><block>124</block><killingTest>org.joda.time.DateTimeZone_ESTest.test55</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>716</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>8</index><block>124</block><killingTest>org.joda.time.DateTimeZone_ESTest.test41</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>719</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>20</index><block>126</block><killingTest>org.joda.time.DateTimeZone_ESTest.test27</killingTest><description>Removed assignment to member variable iID</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>47</index><block>193</block><killingTest/><description>replaced call to org/joda/time/DateTimeZone::nextTransition with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>32</index><block>191</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>66</index><block>193</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>70</index><block>194</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>86</index><block>196</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>191</block><killingTest/><description>Substituted 10800000 with 10800001</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>10</index><block>191</block><killingTest/><description>Substituted 10800000 with 10800001</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>191</block><killingTest/><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>191</block><killingTest/><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>41</index><block>193</block><killingTest/><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>53</index><block>193</block><killingTest/><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>59</index><block>193</block><killingTest/><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>79</index><block>196</block><killingTest/><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>96</index><block>199</block><killingTest/><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>105</index><block>201</block><killingTest/><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>191</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>193</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>70</index><block>194</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>86</index><block>196</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>90</index><block>197</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>102</index><block>200</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>17</index><block>191</block><killingTest/><description>removed call to org/joda/time/DateTimeZone::getOffset</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>24</index><block>191</block><killingTest/><description>removed call to org/joda/time/DateTimeZone::getOffset</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>47</index><block>193</block><killingTest/><description>removed call to org/joda/time/DateTimeZone::nextTransition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>36</index><block>192</block><killingTest>org.joda.time.DateTimeZone_ESTest.test45</killingTest><description>replaced long return with 0 for org/joda/time/DateTimeZone::adjustOffset</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>74</index><block>195</block><killingTest/><description>replaced long return with 0 for org/joda/time/DateTimeZone::adjustOffset</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>98</index><block>199</block><killingTest/><description>replaced long return with 0 for org/joda/time/DateTimeZone::adjustOffset</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>110</index><block>202</block><killingTest/><description>replaced long return with 0 for org/joda/time/DateTimeZone::adjustOffset</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>90</index><block>197</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>102</index><block>200</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>90</index><block>197</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>102</index><block>200</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>32</index><block>191</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>66</index><block>193</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>70</index><block>194</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>86</index><block>196</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>32</index><block>191</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>66</index><block>193</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>70</index><block>194</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>86</index><block>196</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>36</index><block>192</block><killingTest>org.joda.time.DateTimeZone_ESTest.test45</killingTest><description>replaced return of long value with value + 1 for org/joda/time/DateTimeZone::adjustOffset</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>74</index><block>195</block><killingTest/><description>replaced return of long value with value + 1 for org/joda/time/DateTimeZone::adjustOffset</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>98</index><block>199</block><killingTest/><description>replaced return of long value with value + 1 for org/joda/time/DateTimeZone::adjustOffset</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>adjustOffset</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>110</index><block>202</block><killingTest/><description>replaced return of long value with value + 1 for org/joda/time/DateTimeZone::adjustOffset</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1049</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>34</index><block>174</block><killingTest/><description>replaced call to org/joda/time/DateTimeZone::nextTransition with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1053</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>56</index><block>175</block><killingTest/><description>replaced call to org/joda/time/DateTimeZone::nextTransition with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1047</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>26</index><block>173</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1074</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>108</index><block>179</block><killingTest>org.joda.time.DateTimeZone_ESTest.test42</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1074</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>115</index><block>180</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1061</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>88</index><block>178</block><killingTest/><description>removed call to org/joda/time/IllegalInstantException::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1075</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>121</index><block>181</block><killingTest>org.joda.time.DateTimeZone_ESTest.test48</killingTest><description>removed call to java/lang/ArithmeticException::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1051</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>47</index><block>175</block><killingTest/><description>Substituted 9223372036854775807 with -9223372036854775808</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1055</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>69</index><block>176</block><killingTest/><description>Substituted 9223372036854775807 with -9223372036854775808</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1074</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>106</index><block>179</block><killingTest>org.joda.time.DateTimeZone_ESTest.test42</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1074</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>113</index><block>180</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1041</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>171</block><killingTest/><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1049</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>174</block><killingTest/><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1050</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><block>174</block><killingTest/><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1053</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>55</index><block>175</block><killingTest/><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1054</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>64</index><block>175</block><killingTest/><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1072</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>99</index><block>179</block><killingTest>org.joda.time.DateTimeZone_ESTest.test48</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1074</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>105</index><block>179</block><killingTest>org.joda.time.DateTimeZone_ESTest.test42</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1074</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>112</index><block>180</block><killingTest>org.joda.time.DateTimeZone_ESTest.test48</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1043</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>171</block><killingTest>org.joda.time.DateTimeZone_ESTest.test49</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1047</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>172</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1047</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>173</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1050</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>174</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1054</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>175</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1057</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>76</index><block>176</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1059</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>80</index><block>177</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1074</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>108</index><block>179</block><killingTest>org.joda.time.DateTimeZone_ESTest.test42</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1074</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>115</index><block>180</block><killingTest>org.joda.time.DateTimeZone_ESTest.test48</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1039</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>171</block><killingTest/><description>removed call to org/joda/time/DateTimeZone::getOffset</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1041</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>171</block><killingTest>org.joda.time.DateTimeZone_ESTest.test48</killingTest><description>removed call to org/joda/time/DateTimeZone::getOffset</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1049</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>34</index><block>174</block><killingTest/><description>removed call to org/joda/time/DateTimeZone::nextTransition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1053</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>56</index><block>175</block><killingTest/><description>removed call to org/joda/time/DateTimeZone::nextTransition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1061</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>87</index><block>178</block><killingTest/><description>removed call to org/joda/time/DateTimeZone::getID</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1077</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>126</index><block>182</block><killingTest>org.joda.time.DateTimeZone_ESTest.test42</killingTest><description>replaced long return with 0 for org/joda/time/DateTimeZone::convertLocalToUTC</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1043</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>20</index><block>171</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1047</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>24</index><block>172</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1050</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>44</index><block>174</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1054</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>66</index><block>175</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1057</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>76</index><block>176</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1059</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>80</index><block>177</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1043</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>20</index><block>171</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1047</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>24</index><block>172</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1050</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>44</index><block>174</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1054</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>66</index><block>175</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1057</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>76</index><block>176</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1059</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>80</index><block>177</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1047</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>26</index><block>173</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1074</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>108</index><block>179</block><killingTest>org.joda.time.DateTimeZone_ESTest.test48</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1074</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>115</index><block>180</block><killingTest>org.joda.time.DateTimeZone_ESTest.test48</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1047</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>26</index><block>173</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1074</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>108</index><block>179</block><killingTest>org.joda.time.DateTimeZone_ESTest.test42</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1074</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>115</index><block>180</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1077</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>126</index><block>182</block><killingTest>org.joda.time.DateTimeZone_ESTest.test42</killingTest><description>replaced return of long value with value + 1 for org/joda/time/DateTimeZone::convertLocalToUTC</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZJ)J</methodDescription><lineNumber>1022</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>34</index><block>170</block><killingTest/><description>replaced call to org/joda/time/DateTimeZone::convertLocalToUTC with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZJ)J</methodDescription><lineNumber>1017</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>168</block><killingTest>org.joda.time.DateTimeZone_ESTest.test40</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZJ)J</methodDescription><lineNumber>1019</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>168</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZJ)J</methodDescription><lineNumber>1016</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>168</block><killingTest/><description>removed call to org/joda/time/DateTimeZone::getOffset</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZJ)J</methodDescription><lineNumber>1018</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>18</index><block>168</block><killingTest/><description>removed call to org/joda/time/DateTimeZone::getOffset</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZJ)J</methodDescription><lineNumber>1022</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>34</index><block>170</block><killingTest/><description>removed call to org/joda/time/DateTimeZone::convertLocalToUTC</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZJ)J</methodDescription><lineNumber>1020</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>28</index><block>169</block><killingTest>org.joda.time.DateTimeZone_ESTest.test41</killingTest><description>replaced long return with 0 for org/joda/time/DateTimeZone::convertLocalToUTC</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZJ)J</methodDescription><lineNumber>1022</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>35</index><block>170</block><killingTest/><description>replaced long return with 0 for org/joda/time/DateTimeZone::convertLocalToUTC</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZJ)J</methodDescription><lineNumber>1019</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>24</index><block>168</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZJ)J</methodDescription><lineNumber>1019</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>24</index><block>168</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZJ)J</methodDescription><lineNumber>1020</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>28</index><block>169</block><killingTest>org.joda.time.DateTimeZone_ESTest.test41</killingTest><description>replaced return of long value with value + 1 for org/joda/time/DateTimeZone::convertLocalToUTC</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZJ)J</methodDescription><lineNumber>1022</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>35</index><block>170</block><killingTest/><description>replaced return of long value with value + 1 for org/joda/time/DateTimeZone::convertLocalToUTC</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertToAsciiNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>27</index><block>67</block><killingTest/><description>replaced call to java/lang/Character::digit with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertToAsciiNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><block>66</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertToAsciiNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>32</index><block>67</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertToAsciiNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>402</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>6</index><block>66</block><killingTest/><description>removed call to java/lang/StringBuilder::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertToAsciiNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>50</index><block>69</block><killingTest/><description>replaced return value with &#34;&#34; for org/joda/time/DateTimeZone::convertToAsciiNumber</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertToAsciiNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>44</index><block>68</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertToAsciiNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>10</index><block>66</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertToAsciiNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>26</index><block>67</block><killingTest/><description>Substituted 10 with 11</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertToAsciiNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>37</index><block>68</block><killingTest/><description>Substituted 48 with 49</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertToAsciiNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>68</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertToAsciiNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>66</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertToAsciiNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>67</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertToAsciiNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>15</index><block>66</block><killingTest/><description>removed call to java/lang/StringBuilder::length</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertToAsciiNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>404</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>21</index><block>67</block><killingTest/><description>removed call to java/lang/StringBuilder::charAt</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertToAsciiNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>27</index><block>67</block><killingTest/><description>removed call to java/lang/Character::digit</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertToAsciiNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>49</index><block>69</block><killingTest/><description>removed call to java/lang/StringBuilder::toString</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertToAsciiNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>16</index><block>66</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertToAsciiNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>32</index><block>67</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertToAsciiNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>16</index><block>66</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertToAsciiNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>32</index><block>67</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertToAsciiNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>50</index><block>69</block><killingTest/><description>mutated return of Object value for org/joda/time/DateTimeZone::convertToAsciiNumber to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertToAsciiNumber</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>41</index><block>68</block><killingTest/><description>removed call to java/lang/StringBuilder::setCharAt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>992</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>21</index><block>164</block><killingTest>org.joda.time.DateTimeZone_ESTest.test38</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>992</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>28</index><block>165</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>993</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>34</index><block>166</block><killingTest/><description>removed call to java/lang/ArithmeticException::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>992</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>19</index><block>164</block><killingTest>org.joda.time.DateTimeZone_ESTest.test38</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>992</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>26</index><block>165</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>990</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>164</block><killingTest>org.joda.time.DateTimeZone_ESTest.test37</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>992</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>164</block><killingTest/><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>992</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>165</block><killingTest>org.joda.time.DateTimeZone_ESTest.test37</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>992</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>164</block><killingTest>org.joda.time.DateTimeZone_ESTest.test38</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>992</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>165</block><killingTest>org.joda.time.DateTimeZone_ESTest.test46</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>989</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>164</block><killingTest>org.joda.time.DateTimeZone_ESTest.test37</killingTest><description>removed call to org/joda/time/DateTimeZone::getOffset</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>995</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>39</index><block>167</block><killingTest>org.joda.time.DateTimeZone_ESTest.test38</killingTest><description>replaced long return with 0 for org/joda/time/DateTimeZone::convertUTCToLocal</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>992</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>21</index><block>164</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>992</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>28</index><block>165</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>992</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>21</index><block>164</block><killingTest>org.joda.time.DateTimeZone_ESTest.test38</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>992</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>28</index><block>165</block><killingTest>org.joda.time.DateTimeZone_ESTest.test37</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>995</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>39</index><block>167</block><killingTest>org.joda.time.DateTimeZone_ESTest.test38</killingTest><description>replaced return of long value with value + 1 for org/joda/time/DateTimeZone::convertUTCToLocal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>425</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>17</index><block>72</block><killingTest>org.joda.time.DateTimeZone_ESTest.test16</killingTest><description>removed call to org/joda/time/tz/FixedDateTimeZone::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>422</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>70</block><killingTest>org.joda.time.DateTimeZone_ESTest.test16</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>423</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>8</index><block>71</block><killingTest>org.joda.time.DateTimeZone_ESTest.test61</killingTest><description>replaced return value with null for org/joda/time/DateTimeZone::fixedOffsetZone</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>425</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>18</index><block>72</block><killingTest>org.joda.time.DateTimeZone_ESTest.test16</killingTest><description>replaced return value with null for org/joda/time/DateTimeZone::fixedOffsetZone</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>422</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>70</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>422</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>70</block><killingTest>org.joda.time.DateTimeZone_ESTest.test16</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>423</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>71</block><killingTest>org.joda.time.DateTimeZone_ESTest.test61</killingTest><description>mutated return of Object value for org/joda/time/DateTimeZone::fixedOffsetZone to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>425</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>72</block><killingTest>org.joda.time.DateTimeZone_ESTest.test16</killingTest><description>mutated return of Object value for org/joda/time/DateTimeZone::fixedOffsetZone to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>76</index><block>23</block><killingTest>org.joda.time.DateTimeZone_ESTest.test35</killingTest><description>removed call to java/lang/StringBuilder::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>84</index><block>23</block><killingTest>org.joda.time.DateTimeZone_ESTest.test35</killingTest><description>removed call to java/lang/IllegalArgumentException::&#60;init&#62;</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>52</index><block>20</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>12</block><killingTest>org.joda.time.DateTimeZone_ESTest.test36</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>14</block><killingTest>org.joda.time.DateTimeZone_ESTest.test35</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>16</block><killingTest>org.joda.time.DateTimeZone_ESTest.test35</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>18</block><killingTest>org.joda.time.DateTimeZone_ESTest.test35</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>19</block><killingTest>org.joda.time.DateTimeZone_ESTest.test35</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>54</index><block>20</block><killingTest>org.joda.time.DateTimeZone_ESTest.test18</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>229</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>13</block><killingTest>org.joda.time.DateTimeZone_ESTest.test36</killingTest><description>removed call to org/joda/time/DateTimeZone::getDefault</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>14</block><killingTest/><description>removed call to java/lang/String::equals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>21</index><block>16</block><killingTest>org.joda.time.DateTimeZone_ESTest.test35</killingTest><description>removed call to org/joda/time/DateTimeZone::getProvider</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>23</index><block>16</block><killingTest>org.joda.time.DateTimeZone_ESTest.test82</killingTest><description>removed call to org/joda/time/tz/Provider::getZone</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>37</index><block>18</block><killingTest>org.joda.time.DateTimeZone_ESTest.test18</killingTest><description>removed call to java/lang/String::startsWith</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>41</index><block>19</block><killingTest>org.joda.time.DateTimeZone_ESTest.test73</killingTest><description>removed call to java/lang/String::startsWith</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>46</index><block>20</block><killingTest>org.joda.time.DateTimeZone_ESTest.test18</killingTest><description>removed call to org/joda/time/DateTimeZone::parseOffset</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>62</index><block>22</block><killingTest>org.joda.time.DateTimeZone_ESTest.test18</killingTest><description>removed call to org/joda/time/DateTimeZone::printOffset</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>68</index><block>22</block><killingTest>org.joda.time.DateTimeZone_ESTest.test18</killingTest><description>removed call to org/joda/time/DateTimeZone::fixedOffsetZone</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>78</index><block>23</block><killingTest>org.joda.time.DateTimeZone_ESTest.test35</killingTest><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>80</index><block>23</block><killingTest>org.joda.time.DateTimeZone_ESTest.test35</killingTest><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>82</index><block>23</block><killingTest>org.joda.time.DateTimeZone_ESTest.test35</killingTest><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>83</index><block>23</block><killingTest/><description>removed call to java/lang/StringBuilder::toString</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>229</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>8</index><block>13</block><killingTest>org.joda.time.DateTimeZone_ESTest.test36</killingTest><description>replaced return value with null for org/joda/time/DateTimeZone::forID</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>18</index><block>15</block><killingTest>org.joda.time.DateTimeZone_ESTest.test75</killingTest><description>replaced return value with null for org/joda/time/DateTimeZone::forID</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>32</index><block>17</block><killingTest>org.joda.time.DateTimeZone_ESTest.test82</killingTest><description>replaced return value with null for org/joda/time/DateTimeZone::forID</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>58</index><block>21</block><killingTest/><description>replaced return value with null for org/joda/time/DateTimeZone::forID</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>69</index><block>22</block><killingTest>org.joda.time.DateTimeZone_ESTest.test18</killingTest><description>replaced return value with null for org/joda/time/DateTimeZone::forID</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>12</block><killingTest>org.joda.time.DateTimeZone_ESTest.test36</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>14</index><block>14</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>28</index><block>16</block><killingTest>org.joda.time.DateTimeZone_ESTest.test82</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>38</index><block>18</block><killingTest>org.joda.time.DateTimeZone_ESTest.test35</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>42</index><block>19</block><killingTest>org.joda.time.DateTimeZone_ESTest.test73</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>54</index><block>20</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>12</block><killingTest>org.joda.time.DateTimeZone_ESTest.test35</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>14</index><block>14</block><killingTest>org.joda.time.DateTimeZone_ESTest.test35</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>28</index><block>16</block><killingTest>org.joda.time.DateTimeZone_ESTest.test35</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>38</index><block>18</block><killingTest>org.joda.time.DateTimeZone_ESTest.test18</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>42</index><block>19</block><killingTest>org.joda.time.DateTimeZone_ESTest.test35</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>54</index><block>20</block><killingTest>org.joda.time.DateTimeZone_ESTest.test18</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>229</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>13</block><killingTest>org.joda.time.DateTimeZone_ESTest.test36</killingTest><description>mutated return of Object value for org/joda/time/DateTimeZone::forID to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>15</block><killingTest>org.joda.time.DateTimeZone_ESTest.test75</killingTest><description>mutated return of Object value for org/joda/time/DateTimeZone::forID to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>32</index><block>17</block><killingTest>org.joda.time.DateTimeZone_ESTest.test82</killingTest><description>mutated return of Object value for org/joda/time/DateTimeZone::forID to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>58</index><block>21</block><killingTest/><description>mutated return of Object value for org/joda/time/DateTimeZone::forID to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>69</index><block>22</block><killingTest>org.joda.time.DateTimeZone_ESTest.test18</killingTest><description>mutated return of Object value for org/joda/time/DateTimeZone::forID to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>78</index><block>23</block><killingTest/><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>80</index><block>23</block><killingTest/><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>82</index><block>23</block><killingTest/><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHours</mutatedMethod><methodDescription>(I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>24</block><killingTest>org.joda.time.DateTimeZone_ESTest.test77</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHours</mutatedMethod><methodDescription>(I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>24</block><killingTest>org.joda.time.DateTimeZone_ESTest.test77</killingTest><description>removed call to org/joda/time/DateTimeZone::forOffsetHoursMinutes</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHours</mutatedMethod><methodDescription>(I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>6</index><block>24</block><killingTest>org.joda.time.DateTimeZone_ESTest.test77</killingTest><description>replaced return value with null for org/joda/time/DateTimeZone::forOffsetHours</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHours</mutatedMethod><methodDescription>(I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>24</block><killingTest>org.joda.time.DateTimeZone_ESTest.test77</killingTest><description>mutated return of Object value for org/joda/time/DateTimeZone::forOffsetHours to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>93</index><block>38</block><killingTest/><description>replaced call to java/lang/Math::abs with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>107</index><block>39</block><killingTest>org.joda.time.DateTimeZone_ESTest.test21</killingTest><description>replaced call to org/joda/time/field/FieldUtils::safeMultiply with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>15</index><block>28</block><killingTest>org.joda.time.DateTimeZone_ESTest.test21</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>29</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>37</index><block>31</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>40</index><block>32</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>58</index><block>34</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>60</index><block>35</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>311</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>88</index><block>37</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>25</index><block>30</block><killingTest>org.joda.time.DateTimeZone_ESTest.test71</killingTest><description>removed call to java/lang/StringBuilder::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>31</index><block>30</block><killingTest>org.joda.time.DateTimeZone_ESTest.test71</killingTest><description>removed call to java/lang/IllegalArgumentException::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>303</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>47</index><block>33</block><killingTest>org.joda.time.DateTimeZone_ESTest.test69</killingTest><description>removed call to java/lang/StringBuilder::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>303</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>53</index><block>33</block><killingTest>org.joda.time.DateTimeZone_ESTest.test69</killingTest><description>removed call to java/lang/IllegalArgumentException::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>306</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>67</index><block>36</block><killingTest>org.joda.time.DateTimeZone_ESTest.test68</killingTest><description>removed call to java/lang/StringBuilder::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>306</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>73</index><block>36</block><killingTest>org.joda.time.DateTimeZone_ESTest.test68</killingTest><description>removed call to java/lang/IllegalArgumentException::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>120</index><block>40</block><killingTest/><description>removed call to java/lang/IllegalArgumentException::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>14</index><block>28</block><killingTest>org.joda.time.DateTimeZone_ESTest.test21</killingTest><description>Substituted -23 with -22</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>17</index><block>29</block><killingTest/><description>Substituted 23 with 24</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>36</index><block>31</block><killingTest/><description>Substituted -59 with -58</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>39</index><block>32</block><killingTest/><description>Substituted 59 with 60</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>77</index><block>37</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>82</index><block>37</block><killingTest>org.joda.time.DateTimeZone_ESTest.test21</killingTest><description>Substituted 60 with 61</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>106</index><block>39</block><killingTest>org.joda.time.DateTimeZone_ESTest.test21</killingTest><description>Substituted 60000 with 60001</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>83</index><block>37</block><killingTest>org.joda.time.DateTimeZone_ESTest.test21</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>94</index><block>38</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>314</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>101</index><block>39</block><killingTest>org.joda.time.DateTimeZone_ESTest.test70</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>25</block><killingTest>org.joda.time.DateTimeZone_ESTest.test71</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>26</block><killingTest>org.joda.time.DateTimeZone_ESTest.test72</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>28</block><killingTest>org.joda.time.DateTimeZone_ESTest.test21</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>29</block><killingTest>org.joda.time.DateTimeZone_ESTest.test21</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>31</block><killingTest>org.joda.time.DateTimeZone_ESTest.test21</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>32</block><killingTest>org.joda.time.DateTimeZone_ESTest.test21</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>58</index><block>34</block><killingTest>org.joda.time.DateTimeZone_ESTest.test68</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>60</index><block>35</block><killingTest>org.joda.time.DateTimeZone_ESTest.test68</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>311</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>88</index><block>37</block><killingTest>org.joda.time.DateTimeZone_ESTest.test70</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>27</index><block>30</block><killingTest>org.joda.time.DateTimeZone_ESTest.test71</killingTest><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>29</index><block>30</block><killingTest>org.joda.time.DateTimeZone_ESTest.test71</killingTest><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>30</index><block>30</block><killingTest/><description>removed call to java/lang/StringBuilder::toString</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>303</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>49</index><block>33</block><killingTest>org.joda.time.DateTimeZone_ESTest.test69</killingTest><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>303</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>51</index><block>33</block><killingTest>org.joda.time.DateTimeZone_ESTest.test69</killingTest><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>303</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>52</index><block>33</block><killingTest/><description>removed call to java/lang/StringBuilder::toString</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>306</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>69</index><block>36</block><killingTest>org.joda.time.DateTimeZone_ESTest.test68</killingTest><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>306</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>71</index><block>36</block><killingTest>org.joda.time.DateTimeZone_ESTest.test68</killingTest><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>306</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>72</index><block>36</block><killingTest/><description>removed call to java/lang/StringBuilder::toString</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>93</index><block>38</block><killingTest/><description>removed call to java/lang/Math::abs</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>107</index><block>39</block><killingTest>org.joda.time.DateTimeZone_ESTest.test21</killingTest><description>removed call to org/joda/time/field/FieldUtils::safeMultiply</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>125</index><block>41</block><killingTest>org.joda.time.DateTimeZone_ESTest.test21</killingTest><description>removed call to org/joda/time/DateTimeZone::forOffsetMillis</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>10</index><block>27</block><killingTest>org.joda.time.DateTimeZone_ESTest.test77</killingTest><description>replaced return value with null for org/joda/time/DateTimeZone::forOffsetHoursMinutes</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>126</index><block>41</block><killingTest>org.joda.time.DateTimeZone_ESTest.test21</killingTest><description>replaced return value with null for org/joda/time/DateTimeZone::forOffsetHoursMinutes</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>25</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>6</index><block>26</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>25</block><killingTest>org.joda.time.DateTimeZone_ESTest.test71</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>6</index><block>26</block><killingTest>org.joda.time.DateTimeZone_ESTest.test72</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>15</index><block>28</block><killingTest>org.joda.time.DateTimeZone_ESTest.test21</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>18</index><block>29</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>37</index><block>31</block><killingTest>org.joda.time.DateTimeZone_ESTest.test21</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>40</index><block>32</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>58</index><block>34</block><killingTest>org.joda.time.DateTimeZone_ESTest.test68</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>60</index><block>35</block><killingTest>org.joda.time.DateTimeZone_ESTest.test68</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>311</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>88</index><block>37</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>15</index><block>28</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>18</index><block>29</block><killingTest>org.joda.time.DateTimeZone_ESTest.test21</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>37</index><block>31</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>40</index><block>32</block><killingTest>org.joda.time.DateTimeZone_ESTest.test21</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>58</index><block>34</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>60</index><block>35</block><killingTest>org.joda.time.DateTimeZone_ESTest.test70</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>311</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>88</index><block>37</block><killingTest>org.joda.time.DateTimeZone_ESTest.test70</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>27</block><killingTest>org.joda.time.DateTimeZone_ESTest.test77</killingTest><description>mutated return of Object value for org/joda/time/DateTimeZone::forOffsetHoursMinutes to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>126</index><block>41</block><killingTest>org.joda.time.DateTimeZone_ESTest.test21</killingTest><description>mutated return of Object value for org/joda/time/DateTimeZone::forOffsetHoursMinutes to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>27</index><block>30</block><killingTest/><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>29</index><block>30</block><killingTest/><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>303</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>49</index><block>33</block><killingTest/><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>303</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>51</index><block>33</block><killingTest/><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>306</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>69</index><block>36</block><killingTest/><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>306</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>71</index><block>36</block><killingTest/><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetMillis</mutatedMethod><methodDescription>(I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>5</index><block>42</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetMillis</mutatedMethod><methodDescription>(I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>43</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetMillis</mutatedMethod><methodDescription>(I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>15</index><block>44</block><killingTest>org.joda.time.DateTimeZone_ESTest.test66</killingTest><description>removed call to java/lang/StringBuilder::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetMillis</mutatedMethod><methodDescription>(I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>21</index><block>44</block><killingTest>org.joda.time.DateTimeZone_ESTest.test66</killingTest><description>removed call to java/lang/IllegalArgumentException::&#60;init&#62;</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetMillis</mutatedMethod><methodDescription>(I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>42</block><killingTest/><description>Substituted -86399999 with -86399998</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetMillis</mutatedMethod><methodDescription>(I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>7</index><block>43</block><killingTest/><description>Substituted 86399999 with 86400000</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetMillis</mutatedMethod><methodDescription>(I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>42</block><killingTest>org.joda.time.DateTimeZone_ESTest.test67</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetMillis</mutatedMethod><methodDescription>(I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>43</block><killingTest>org.joda.time.DateTimeZone_ESTest.test66</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetMillis</mutatedMethod><methodDescription>(I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>17</index><block>44</block><killingTest>org.joda.time.DateTimeZone_ESTest.test66</killingTest><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetMillis</mutatedMethod><methodDescription>(I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>19</index><block>44</block><killingTest>org.joda.time.DateTimeZone_ESTest.test66</killingTest><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetMillis</mutatedMethod><methodDescription>(I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>20</index><block>44</block><killingTest/><description>removed call to java/lang/StringBuilder::toString</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetMillis</mutatedMethod><methodDescription>(I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>26</index><block>45</block><killingTest>org.joda.time.DateTimeZone_ESTest.test16</killingTest><description>removed call to org/joda/time/DateTimeZone::printOffset</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetMillis</mutatedMethod><methodDescription>(I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>32</index><block>45</block><killingTest>org.joda.time.DateTimeZone_ESTest.test16</killingTest><description>removed call to org/joda/time/DateTimeZone::fixedOffsetZone</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetMillis</mutatedMethod><methodDescription>(I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>33</index><block>45</block><killingTest>org.joda.time.DateTimeZone_ESTest.test16</killingTest><description>replaced return value with null for org/joda/time/DateTimeZone::forOffsetMillis</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetMillis</mutatedMethod><methodDescription>(I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>5</index><block>42</block><killingTest>org.joda.time.DateTimeZone_ESTest.test16</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetMillis</mutatedMethod><methodDescription>(I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>8</index><block>43</block><killingTest>org.joda.time.DateTimeZone_ESTest.test66</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetMillis</mutatedMethod><methodDescription>(I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>5</index><block>42</block><killingTest>org.joda.time.DateTimeZone_ESTest.test67</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetMillis</mutatedMethod><methodDescription>(I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>8</index><block>43</block><killingTest>org.joda.time.DateTimeZone_ESTest.test16</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetMillis</mutatedMethod><methodDescription>(I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>33</index><block>45</block><killingTest>org.joda.time.DateTimeZone_ESTest.test16</killingTest><description>mutated return of Object value for org/joda/time/DateTimeZone::forOffsetMillis to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetMillis</mutatedMethod><methodDescription>(I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>17</index><block>44</block><killingTest/><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetMillis</mutatedMethod><methodDescription>(I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>19</index><block>44</block><killingTest/><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>42</index><block>52</block><killingTest>org.joda.time.DateTimeZone_ESTest.test43</killingTest><description>replaced call to org/joda/time/DateTimeZone::getConvertedId with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>386</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>123</index><block>62</block><killingTest/><description>replaced call to org/joda/time/DateTimeZone::convertToAsciiNumber with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>383</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>105</index><block>59</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>116</index><block>60</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>23</index><block>49</block><killingTest/><description>removed call to java/lang/IllegalArgumentException::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>158</index><block>65</block><killingTest/><description>removed call to java/lang/StringBuilder::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>166</index><block>65</block><killingTest/><description>removed call to java/lang/IllegalArgumentException::&#60;init&#62;</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>97</index><block>59</block><killingTest/><description>Substituted 3 with 4</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>383</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>104</index><block>59</block><killingTest/><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>384</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>109</index><block>60</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>115</index><block>60</block><killingTest/><description>Substituted 57 with 58</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>134</index><block>62</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>46</block><killingTest>org.joda.time.DateTimeZone_ESTest.test65</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>48</block><killingTest>org.joda.time.DateTimeZone_ESTest.test43</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>50</block><killingTest>org.joda.time.DateTimeZone_ESTest.test62</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><block>52</block><killingTest>org.joda.time.DateTimeZone_ESTest.test63</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>371</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>61</index><block>53</block><killingTest>org.joda.time.DateTimeZone_ESTest.test63</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>71</index><block>54</block><killingTest>org.joda.time.DateTimeZone_ESTest.test43</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>79</index><block>56</block><killingTest>org.joda.time.DateTimeZone_ESTest.test62</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>381</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>89</index><block>57</block><killingTest>org.joda.time.DateTimeZone_ESTest.test62</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>381</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>93</index><block>58</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>383</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>105</index><block>59</block><killingTest>org.joda.time.DateTimeZone_ESTest.test62</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>116</index><block>60</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>119</index><block>61</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>136</index><block>62</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>354</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>47</block><killingTest>org.joda.time.DateTimeZone_ESTest.test65</killingTest><description>removed call to org/joda/time/DateTimeZone::getDefault</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>12</index><block>48</block><killingTest>org.joda.time.DateTimeZone_ESTest.test43</killingTest><description>removed call to java/util/TimeZone::getID</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>29</index><block>50</block><killingTest/><description>removed call to java/lang/String::equals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>42</index><block>52</block><killingTest>org.joda.time.DateTimeZone_ESTest.test63</killingTest><description>removed call to org/joda/time/DateTimeZone::getConvertedId</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>46</index><block>52</block><killingTest>org.joda.time.DateTimeZone_ESTest.test43</killingTest><description>removed call to org/joda/time/DateTimeZone::getProvider</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>56</index><block>53</block><killingTest>org.joda.time.DateTimeZone_ESTest.test43</killingTest><description>removed call to org/joda/time/tz/Provider::getZone</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>66</index><block>54</block><killingTest/><description>removed call to org/joda/time/tz/Provider::getZone</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>381</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>88</index><block>57</block><killingTest>org.joda.time.DateTimeZone_ESTest.test62</killingTest><description>removed call to java/lang/String::startsWith</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>381</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>92</index><block>58</block><killingTest/><description>removed call to java/lang/String::startsWith</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>98</index><block>59</block><killingTest>org.joda.time.DateTimeZone_ESTest.test62</killingTest><description>removed call to java/lang/String::substring</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>383</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>103</index><block>59</block><killingTest/><description>removed call to java/lang/String::length</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>384</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>110</index><block>60</block><killingTest/><description>removed call to java/lang/String::charAt</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>118</index><block>61</block><killingTest/><description>removed call to java/lang/Character::isDigit</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>386</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>123</index><block>62</block><killingTest/><description>removed call to org/joda/time/DateTimeZone::convertToAsciiNumber</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>389</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>128</index><block>62</block><killingTest>org.joda.time.DateTimeZone_ESTest.test62</killingTest><description>removed call to org/joda/time/DateTimeZone::parseOffset</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>393</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>144</index><block>64</block><killingTest/><description>removed call to org/joda/time/DateTimeZone::printOffset</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>150</index><block>64</block><killingTest/><description>removed call to org/joda/time/DateTimeZone::fixedOffsetZone</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>160</index><block>65</block><killingTest/><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>162</index><block>65</block><killingTest/><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>164</index><block>65</block><killingTest/><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>165</index><block>65</block><killingTest/><description>removed call to java/lang/StringBuilder::toString</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>354</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>8</index><block>47</block><killingTest>org.joda.time.DateTimeZone_ESTest.test65</killingTest><description>replaced return value with null for org/joda/time/DateTimeZone::forTimeZone</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>34</index><block>51</block><killingTest/><description>replaced return value with null for org/joda/time/DateTimeZone::forTimeZone</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>75</index><block>55</block><killingTest>org.joda.time.DateTimeZone_ESTest.test43</killingTest><description>replaced return value with null for org/joda/time/DateTimeZone::forTimeZone</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>140</index><block>63</block><killingTest/><description>replaced return value with null for org/joda/time/DateTimeZone::forTimeZone</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>151</index><block>64</block><killingTest/><description>replaced return value with null for org/joda/time/DateTimeZone::forTimeZone</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>46</block><killingTest>org.joda.time.DateTimeZone_ESTest.test65</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>17</index><block>48</block><killingTest>org.joda.time.DateTimeZone_ESTest.test63</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>30</index><block>50</block><killingTest>org.joda.time.DateTimeZone_ESTest.test63</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>51</index><block>52</block><killingTest>org.joda.time.DateTimeZone_ESTest.test63</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>371</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>61</index><block>53</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>71</index><block>54</block><killingTest>org.joda.time.DateTimeZone_ESTest.test43</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>79</index><block>56</block><killingTest>org.joda.time.DateTimeZone_ESTest.test62</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>381</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>89</index><block>57</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>381</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>93</index><block>58</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>119</index><block>61</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>136</index><block>62</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>46</block><killingTest>org.joda.time.DateTimeZone_ESTest.test62</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>17</index><block>48</block><killingTest>org.joda.time.DateTimeZone_ESTest.test43</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>30</index><block>50</block><killingTest>org.joda.time.DateTimeZone_ESTest.test62</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>51</index><block>52</block><killingTest>org.joda.time.DateTimeZone_ESTest.test63</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>371</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>61</index><block>53</block><killingTest>org.joda.time.DateTimeZone_ESTest.test63</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>71</index><block>54</block><killingTest>org.joda.time.DateTimeZone_ESTest.test62</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>79</index><block>56</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>381</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>89</index><block>57</block><killingTest>org.joda.time.DateTimeZone_ESTest.test62</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>381</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>93</index><block>58</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>119</index><block>61</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>136</index><block>62</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>383</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>105</index><block>59</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>116</index><block>60</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>383</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>105</index><block>59</block><killingTest>org.joda.time.DateTimeZone_ESTest.test62</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>116</index><block>60</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>354</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>47</block><killingTest>org.joda.time.DateTimeZone_ESTest.test65</killingTest><description>mutated return of Object value for org/joda/time/DateTimeZone::forTimeZone to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>34</index><block>51</block><killingTest/><description>mutated return of Object value for org/joda/time/DateTimeZone::forTimeZone to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>75</index><block>55</block><killingTest>org.joda.time.DateTimeZone_ESTest.test43</killingTest><description>mutated return of Object value for org/joda/time/DateTimeZone::forTimeZone to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>140</index><block>63</block><killingTest/><description>mutated return of Object value for org/joda/time/DateTimeZone::forTimeZone to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>151</index><block>64</block><killingTest/><description>mutated return of Object value for org/joda/time/DateTimeZone::forTimeZone to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>98</index><block>59</block><killingTest/><description>replaced call to java/lang/String::substring with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>160</index><block>65</block><killingTest/><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>162</index><block>65</block><killingTest/><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forTimeZone</mutatedMethod><methodDescription>(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>164</index><block>65</block><killingTest/><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getAvailableIDs</mutatedMethod><methodDescription>()Ljava/util/Set;</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>5</index><block>73</block><killingTest>org.joda.time.DateTimeZone_ESTest.test83</killingTest><description>replaced return value with Collections.emptyList for org/joda/time/DateTimeZone::getAvailableIDs</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getAvailableIDs</mutatedMethod><methodDescription>()Ljava/util/Set;</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>3</index><block>73</block><killingTest>org.joda.time.DateTimeZone_ESTest.test83</killingTest><description>removed call to org/joda/time/DateTimeZone::getProvider</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getAvailableIDs</mutatedMethod><methodDescription>()Ljava/util/Set;</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>73</block><killingTest>org.joda.time.DateTimeZone_ESTest.test83</killingTest><description>removed call to org/joda/time/tz/Provider::getAvailableIDs</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getAvailableIDs</mutatedMethod><methodDescription>()Ljava/util/Set;</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>73</block><killingTest>org.joda.time.DateTimeZone_ESTest.test83</killingTest><description>mutated return of Object value for org/joda/time/DateTimeZone::getAvailableIDs to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getConvertedId</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>648</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>5</index><block>115</block><killingTest>org.joda.time.DateTimeZone_ESTest.test62</killingTest><description>replaced call to java/util/Map::get with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getConvertedId</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>648</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>7</index><block>115</block><killingTest>org.joda.time.DateTimeZone_ESTest.test62</killingTest><description>replaced return value with &#34;&#34; for org/joda/time/DateTimeZone::getConvertedId</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getConvertedId</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>648</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>115</block><killingTest>org.joda.time.DateTimeZone_ESTest.test63</killingTest><description>removed call to java/util/Map::get</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getConvertedId</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>648</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>115</block><killingTest>org.joda.time.DateTimeZone_ESTest.test62</killingTest><description>mutated return of Object value for org/joda/time/DateTimeZone::getConvertedId to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>14</index><block>1</block><killingTest/><description>replaced call to java/lang/System::getProperty with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='22'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>0</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>1</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>3</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>49</index><block>5</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>60</index><block>6</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='22'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTest/><description>removed call to java/util/concurrent/atomic/AtomicReference::get</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>1</block><killingTest/><description>removed call to java/lang/System::getProperty</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>23</index><block>2</block><killingTest/><description>removed call to org/joda/time/DateTimeZone::forID</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>37</index><block>4</block><killingTest/><description>removed call to java/util/TimeZone::getDefault</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>38</index><block>4</block><killingTest/><description>removed call to org/joda/time/DateTimeZone::forTimeZone</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>59</index><block>6</block><killingTest/><description>removed call to java/util/concurrent/atomic/AtomicReference::compareAndSet</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>64</index><block>7</block><killingTest/><description>removed call to java/util/concurrent/atomic/AtomicReference::get</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>70</index><block>7</block><killingTest>org.joda.time.DateTimeZone_ESTest.test45</killingTest><description>replaced return value with null for org/joda/time/DateTimeZone::getDefault</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='22'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>10</index><block>0</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>19</index><block>1</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>34</index><block>3</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>49</index><block>5</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>60</index><block>6</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='22'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>10</index><block>0</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>19</index><block>1</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>34</index><block>3</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>49</index><block>5</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>60</index><block>6</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>70</index><block>7</block><killingTest>org.joda.time.DateTimeZone_ESTest.test45</killingTest><description>mutated return of Object value for org/joda/time/DateTimeZone::getDefault to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultNameProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/NameProvider;</methodDescription><lineNumber>616</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>8</index><block>107</block><killingTest>org.joda.time.DateTimeZone_ESTest.test58</killingTest><description>replaced call to java/lang/System::getProperty with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultNameProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/NameProvider;</methodDescription><lineNumber>624</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>46</index><block>110</block><killingTest/><description>replaced call to java/lang/Class::asSubclass with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultNameProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/NameProvider;</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>34</index><block>109</block><killingTest/><description>removed call to java/lang/StringBuilder::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultNameProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/NameProvider;</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>40</index><block>109</block><killingTest/><description>removed call to java/lang/IllegalArgumentException::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultNameProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/NameProvider;</methodDescription><lineNumber>626</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>66</index><block>111</block><killingTest/><description>removed call to java/lang/RuntimeException::&#60;init&#62;</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultNameProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/NameProvider;</methodDescription><lineNumber>634</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>82</index><block>114</block><killingTest/><description>removed call to org/joda/time/tz/DefaultNameProvider::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultNameProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/NameProvider;</methodDescription><lineNumber>620</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>17</index><block>108</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultNameProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/NameProvider;</methodDescription><lineNumber>624</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>47</index><block>110</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultNameProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/NameProvider;</methodDescription><lineNumber>624</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>50</index><block>110</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultNameProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/NameProvider;</methodDescription><lineNumber>617</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>107</block><killingTest>org.joda.time.DateTimeZone_ESTest.test58</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultNameProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/NameProvider;</methodDescription><lineNumber>621</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>108</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultNameProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/NameProvider;</methodDescription><lineNumber>633</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>77</index><block>113</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultNameProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/NameProvider;</methodDescription><lineNumber>616</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><block>107</block><killingTest/><description>removed call to java/lang/System::getProperty</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultNameProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/NameProvider;</methodDescription><lineNumber>620</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>19</index><block>108</block><killingTest/><description>removed call to java/lang/Class::getClassLoader</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultNameProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/NameProvider;</methodDescription><lineNumber>620</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>20</index><block>108</block><killingTest/><description>removed call to java/lang/Class::forName</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultNameProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/NameProvider;</methodDescription><lineNumber>621</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>26</index><block>108</block><killingTest/><description>removed call to java/lang/Class::isAssignableFrom</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultNameProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/NameProvider;</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>36</index><block>109</block><killingTest/><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultNameProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/NameProvider;</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>38</index><block>109</block><killingTest/><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultNameProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/NameProvider;</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>39</index><block>109</block><killingTest/><description>removed call to java/lang/StringBuilder::toString</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultNameProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/NameProvider;</methodDescription><lineNumber>624</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>46</index><block>110</block><killingTest/><description>removed call to java/lang/Class::asSubclass</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultNameProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/NameProvider;</methodDescription><lineNumber>624</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>49</index><block>110</block><killingTest/><description>removed call to java/lang/Class::getConstructor</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultNameProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/NameProvider;</methodDescription><lineNumber>624</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>52</index><block>110</block><killingTest/><description>removed call to java/lang/reflect/Constructor::newInstance</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultNameProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/NameProvider;</methodDescription><lineNumber>637</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>87</index><block>114</block><killingTest/><description>replaced return value with null for org/joda/time/DateTimeZone::getDefaultNameProvider</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultNameProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/NameProvider;</methodDescription><lineNumber>617</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>13</index><block>107</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultNameProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/NameProvider;</methodDescription><lineNumber>621</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>27</index><block>108</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultNameProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/NameProvider;</methodDescription><lineNumber>633</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>77</index><block>113</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultNameProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/NameProvider;</methodDescription><lineNumber>617</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>13</index><block>107</block><killingTest>org.joda.time.DateTimeZone_ESTest.test58</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultNameProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/NameProvider;</methodDescription><lineNumber>621</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>27</index><block>108</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultNameProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/NameProvider;</methodDescription><lineNumber>633</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>77</index><block>113</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultNameProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/NameProvider;</methodDescription><lineNumber>637</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>87</index><block>114</block><killingTest/><description>mutated return of Object value for org/joda/time/DateTimeZone::getDefaultNameProvider to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultNameProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/NameProvider;</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>36</index><block>109</block><killingTest/><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultNameProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/NameProvider;</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>38</index><block>109</block><killingTest/><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultNameProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/NameProvider;</methodDescription><lineNumber>624</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>46</index><block>110</block><killingTest/><description>replaced call to java/lang/Class::asSubclass with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>522</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>4</index><block>89</block><killingTest>org.joda.time.DateTimeZone_ESTest.test60</killingTest><description>replaced call to java/lang/System::getProperty with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>530</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>42</index><block>92</block><killingTest/><description>replaced call to java/lang/Class::asSubclass with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>531</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>54</index><block>92</block><killingTest/><description>replaced call to org/joda/time/DateTimeZone::validateProvider with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>541</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>76</index><block>95</block><killingTest>org.joda.time.DateTimeZone_ESTest.test60</killingTest><description>replaced call to java/lang/System::getProperty with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>545</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>95</index><block>96</block><killingTest/><description>replaced call to org/joda/time/DateTimeZone::validateProvider with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>556</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>124</index><block>99</block><killingTest/><description>replaced call to org/joda/time/DateTimeZone::validateProvider with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>30</index><block>91</block><killingTest/><description>removed call to java/lang/StringBuilder::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>36</index><block>91</block><killingTest/><description>removed call to java/lang/IllegalArgumentException::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>533</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>65</index><block>93</block><killingTest/><description>removed call to java/lang/RuntimeException::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>544</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>89</index><block>96</block><killingTest/><description>removed call to java/io/File::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>544</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>90</index><block>96</block><killingTest/><description>removed call to org/joda/time/tz/ZoneInfoProvider::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>547</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>106</index><block>97</block><killingTest/><description>removed call to java/lang/RuntimeException::&#60;init&#62;</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>555</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>119</index><block>99</block><killingTest/><description>removed call to org/joda/time/tz/ZoneInfoProvider::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>561</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>138</index><block>100</block><killingTest/><description>removed call to org/joda/time/tz/UTCProvider::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>526</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>13</index><block>90</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>530</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>43</index><block>92</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>530</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>46</index><block>92</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>89</block><killingTest>org.joda.time.DateTimeZone_ESTest.test60</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>527</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>90</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>542</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>81</index><block>95</block><killingTest>org.joda.time.DateTimeZone_ESTest.test60</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>522</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>89</block><killingTest/><description>removed call to java/lang/System::getProperty</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>526</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>15</index><block>90</block><killingTest/><description>removed call to java/lang/Class::getClassLoader</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>526</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>16</index><block>90</block><killingTest/><description>removed call to java/lang/Class::forName</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>527</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>22</index><block>90</block><killingTest/><description>removed call to java/lang/Class::isAssignableFrom</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>32</index><block>91</block><killingTest/><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>34</index><block>91</block><killingTest/><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>35</index><block>91</block><killingTest/><description>removed call to java/lang/StringBuilder::toString</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>530</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>42</index><block>92</block><killingTest/><description>removed call to java/lang/Class::asSubclass</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>530</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>45</index><block>92</block><killingTest/><description>removed call to java/lang/Class::getConstructor</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>530</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>48</index><block>92</block><killingTest/><description>removed call to java/lang/reflect/Constructor::newInstance</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>531</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>54</index><block>92</block><killingTest/><description>removed call to org/joda/time/DateTimeZone::validateProvider</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>541</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>76</index><block>95</block><killingTest/><description>removed call to java/lang/System::getProperty</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>545</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>95</index><block>96</block><killingTest/><description>removed call to org/joda/time/DateTimeZone::validateProvider</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>556</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>124</index><block>99</block><killingTest/><description>removed call to org/joda/time/DateTimeZone::validateProvider</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>531</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>56</index><block>92</block><killingTest/><description>replaced return value with null for org/joda/time/DateTimeZone::getDefaultProvider</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>545</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>97</index><block>96</block><killingTest/><description>replaced return value with null for org/joda/time/DateTimeZone::getDefaultProvider</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>556</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>126</index><block>99</block><killingTest/><description>replaced return value with null for org/joda/time/DateTimeZone::getDefaultProvider</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>561</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>139</index><block>100</block><killingTest/><description>replaced return value with null for org/joda/time/DateTimeZone::getDefaultProvider</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>9</index><block>89</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>527</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>23</index><block>90</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>542</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>81</index><block>95</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>9</index><block>89</block><killingTest>org.joda.time.DateTimeZone_ESTest.test60</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>527</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>23</index><block>90</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>542</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>81</index><block>95</block><killingTest>org.joda.time.DateTimeZone_ESTest.test60</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>531</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>56</index><block>92</block><killingTest/><description>mutated return of Object value for org/joda/time/DateTimeZone::getDefaultProvider to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>545</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>97</index><block>96</block><killingTest/><description>mutated return of Object value for org/joda/time/DateTimeZone::getDefaultProvider to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>556</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>126</index><block>99</block><killingTest/><description>mutated return of Object value for org/joda/time/DateTimeZone::getDefaultProvider to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>561</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>139</index><block>100</block><killingTest/><description>mutated return of Object value for org/joda/time/DateTimeZone::getDefaultProvider to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>558</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>133</index><block>100</block><killingTest/><description>removed call to java/lang/Exception::printStackTrace</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>32</index><block>91</block><killingTest/><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>34</index><block>91</block><killingTest/><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefaultProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>530</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>42</index><block>92</block><killingTest/><description>replaced call to java/lang/Class::asSubclass with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getID</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>732</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>5</index><block>127</block><killingTest>org.joda.time.DateTimeZone_ESTest.test77</killingTest><description>replaced return value with &#34;&#34; for org/joda/time/DateTimeZone::getID</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getID</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>732</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>127</block><killingTest>org.joda.time.DateTimeZone_ESTest.test77</killingTest><description>mutated return of Object value for org/joda/time/DateTimeZone::getID to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getMillisKeepLocal</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;J)J</methodDescription><lineNumber>1097</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>22</index><block>186</block><killingTest>org.joda.time.DateTimeZone_ESTest.test11</killingTest><description>replaced call to org/joda/time/DateTimeZone::convertUTCToLocal with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getMillisKeepLocal</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;J)J</methodDescription><lineNumber>1098</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>30</index><block>186</block><killingTest/><description>replaced call to org/joda/time/DateTimeZone::convertLocalToUTC with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getMillisKeepLocal</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;J)J</methodDescription><lineNumber>1098</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>28</index><block>186</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getMillisKeepLocal</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;J)J</methodDescription><lineNumber>1091</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>183</block><killingTest>org.joda.time.DateTimeZone_ESTest.test47</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getMillisKeepLocal</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;J)J</methodDescription><lineNumber>1094</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>184</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getMillisKeepLocal</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;J)J</methodDescription><lineNumber>1092</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>184</block><killingTest>org.joda.time.DateTimeZone_ESTest.test47</killingTest><description>removed call to org/joda/time/DateTimeZone::getDefault</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getMillisKeepLocal</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;J)J</methodDescription><lineNumber>1097</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>22</index><block>186</block><killingTest>org.joda.time.DateTimeZone_ESTest.test47</killingTest><description>removed call to org/joda/time/DateTimeZone::convertUTCToLocal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getMillisKeepLocal</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;J)J</methodDescription><lineNumber>1098</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>30</index><block>186</block><killingTest>org.joda.time.DateTimeZone_ESTest.test47</killingTest><description>removed call to org/joda/time/DateTimeZone::convertLocalToUTC</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getMillisKeepLocal</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;J)J</methodDescription><lineNumber>1095</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>17</index><block>185</block><killingTest>org.joda.time.DateTimeZone_ESTest.test33</killingTest><description>replaced long return with 0 for org/joda/time/DateTimeZone::getMillisKeepLocal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getMillisKeepLocal</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;J)J</methodDescription><lineNumber>1098</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>31</index><block>186</block><killingTest>org.joda.time.DateTimeZone_ESTest.test47</killingTest><description>replaced long return with 0 for org/joda/time/DateTimeZone::getMillisKeepLocal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getMillisKeepLocal</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;J)J</methodDescription><lineNumber>1091</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>183</block><killingTest>org.joda.time.DateTimeZone_ESTest.test47</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getMillisKeepLocal</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;J)J</methodDescription><lineNumber>1094</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>13</index><block>184</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getMillisKeepLocal</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;J)J</methodDescription><lineNumber>1091</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>183</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getMillisKeepLocal</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;J)J</methodDescription><lineNumber>1094</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>13</index><block>184</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getMillisKeepLocal</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;J)J</methodDescription><lineNumber>1095</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>185</block><killingTest>org.joda.time.DateTimeZone_ESTest.test33</killingTest><description>replaced return of long value with value + 1 for org/joda/time/DateTimeZone::getMillisKeepLocal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getMillisKeepLocal</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;J)J</methodDescription><lineNumber>1098</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>31</index><block>186</block><killingTest>org.joda.time.DateTimeZone_ESTest.test47</killingTest><description>replaced return of long value with value + 1 for org/joda/time/DateTimeZone::getMillisKeepLocal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>801</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>7</index><block>137</block><killingTest>org.joda.time.DateTimeZone_ESTest.test52</killingTest><description>replaced return value with &#34;&#34; for org/joda/time/DateTimeZone::getName</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>801</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>137</block><killingTest>org.joda.time.DateTimeZone_ESTest.test52</killingTest><description>removed call to org/joda/time/DateTimeZone::getName</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>801</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>137</block><killingTest>org.joda.time.DateTimeZone_ESTest.test52</killingTest><description>mutated return of Object value for org/joda/time/DateTimeZone::getName to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>826</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>44</index><block>142</block><killingTest>org.joda.time.DateTimeZone_ESTest.test52</killingTest><description>replaced call to org/joda/time/tz/DefaultNameProvider::getName with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>828</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>54</index><block>143</block><killingTest/><description>replaced call to org/joda/time/tz/NameProvider::getName with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>821</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>23</index><block>140</block><killingTest/><description>replaced return value with &#34;&#34; for org/joda/time/DateTimeZone::getName</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>831</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>63</index><block>144</block><killingTest>org.joda.time.DateTimeZone_ESTest.test52</killingTest><description>replaced return value with &#34;&#34; for org/joda/time/DateTimeZone::getName</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>833</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>70</index><block>145</block><killingTest>org.joda.time.DateTimeZone_ESTest.test53</killingTest><description>replaced return value with &#34;&#34; for org/joda/time/DateTimeZone::getName</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>816</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>138</block><killingTest>org.joda.time.DateTimeZone_ESTest.test52</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>820</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>139</block><killingTest>org.joda.time.DateTimeZone_ESTest.test52</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>825</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>141</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>830</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>59</index><block>143</block><killingTest>org.joda.time.DateTimeZone_ESTest.test52</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>817</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>139</block><killingTest>org.joda.time.DateTimeZone_ESTest.test52</killingTest><description>removed call to java/util/Locale::getDefault</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>819</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>139</block><killingTest>org.joda.time.DateTimeZone_ESTest.test52</killingTest><description>removed call to org/joda/time/DateTimeZone::getNameKey</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>824</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>26</index><block>141</block><killingTest>org.joda.time.DateTimeZone_ESTest.test52</killingTest><description>removed call to org/joda/time/DateTimeZone::getNameProvider</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>826</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>43</index><block>142</block><killingTest>org.joda.time.DateTimeZone_ESTest.test52</killingTest><description>removed call to org/joda/time/DateTimeZone::isStandardOffset</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>826</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>44</index><block>142</block><killingTest>org.joda.time.DateTimeZone_ESTest.test52</killingTest><description>removed call to org/joda/time/tz/DefaultNameProvider::getName</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>828</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>54</index><block>143</block><killingTest/><description>removed call to org/joda/time/tz/NameProvider::getName</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>833</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>68</index><block>145</block><killingTest/><description>removed call to org/joda/time/DateTimeZone::getOffset</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>833</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>69</index><block>145</block><killingTest>org.joda.time.DateTimeZone_ESTest.test53</killingTest><description>removed call to org/joda/time/DateTimeZone::printOffset</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>816</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>138</block><killingTest>org.joda.time.DateTimeZone_ESTest.test52</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>820</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>18</index><block>139</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>825</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>32</index><block>141</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>830</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>59</index><block>143</block><killingTest>org.joda.time.DateTimeZone_ESTest.test52</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>816</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>138</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>820</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>18</index><block>139</block><killingTest>org.joda.time.DateTimeZone_ESTest.test52</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>825</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>32</index><block>141</block><killingTest>org.joda.time.DateTimeZone_ESTest.test52</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>830</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>59</index><block>143</block><killingTest>org.joda.time.DateTimeZone_ESTest.test53</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>821</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>23</index><block>140</block><killingTest/><description>mutated return of Object value for org/joda/time/DateTimeZone::getName to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>831</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>63</index><block>144</block><killingTest>org.joda.time.DateTimeZone_ESTest.test52</killingTest><description>mutated return of Object value for org/joda/time/DateTimeZone::getName to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>833</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>70</index><block>145</block><killingTest>org.joda.time.DateTimeZone_ESTest.test53</killingTest><description>mutated return of Object value for org/joda/time/DateTimeZone::getName to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='13'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getNameProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/NameProvider;</methodDescription><lineNumber>575</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>101</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getNameProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/NameProvider;</methodDescription><lineNumber>577</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>102</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='13'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getNameProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/NameProvider;</methodDescription><lineNumber>574</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>101</block><killingTest/><description>removed call to java/util/concurrent/atomic/AtomicReference::get</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getNameProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/NameProvider;</methodDescription><lineNumber>576</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>102</block><killingTest/><description>removed call to org/joda/time/DateTimeZone::getDefaultNameProvider</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getNameProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/NameProvider;</methodDescription><lineNumber>577</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>20</index><block>102</block><killingTest/><description>removed call to java/util/concurrent/atomic/AtomicReference::compareAndSet</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getNameProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/NameProvider;</methodDescription><lineNumber>578</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>25</index><block>103</block><killingTest/><description>removed call to java/util/concurrent/atomic/AtomicReference::get</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getNameProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/NameProvider;</methodDescription><lineNumber>581</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>31</index><block>103</block><killingTest>org.joda.time.DateTimeZone_ESTest.test52</killingTest><description>replaced return value with null for org/joda/time/DateTimeZone::getNameProvider</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='13'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getNameProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/NameProvider;</methodDescription><lineNumber>575</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>10</index><block>101</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getNameProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/NameProvider;</methodDescription><lineNumber>577</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>21</index><block>102</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='13'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getNameProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/NameProvider;</methodDescription><lineNumber>575</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>10</index><block>101</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getNameProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/NameProvider;</methodDescription><lineNumber>577</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>21</index><block>102</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getNameProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/NameProvider;</methodDescription><lineNumber>581</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>31</index><block>103</block><killingTest>org.joda.time.DateTimeZone_ESTest.test52</killingTest><description>mutated return of Object value for org/joda/time/DateTimeZone::getNameProvider to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)I</methodDescription><lineNumber>859</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>146</block><killingTest>org.joda.time.DateTimeZone_ESTest.test50</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)I</methodDescription><lineNumber>860</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><block>147</block><killingTest/><description>removed call to org/joda/time/DateTimeUtils::currentTimeMillis</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)I</methodDescription><lineNumber>860</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>147</block><killingTest/><description>removed call to org/joda/time/DateTimeZone::getOffset</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)I</methodDescription><lineNumber>862</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>15</index><block>148</block><killingTest/><description>removed call to org/joda/time/ReadableInstant::getMillis</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)I</methodDescription><lineNumber>862</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>16</index><block>148</block><killingTest/><description>removed call to org/joda/time/DateTimeZone::getOffset</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)I</methodDescription><lineNumber>860</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>10</index><block>147</block><killingTest/><description>replaced int return with 0 for org/joda/time/DateTimeZone::getOffset</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)I</methodDescription><lineNumber>862</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>17</index><block>148</block><killingTest/><description>replaced int return with 0 for org/joda/time/DateTimeZone::getOffset</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)I</methodDescription><lineNumber>859</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>146</block><killingTest>org.joda.time.DateTimeZone_ESTest.test50</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)I</methodDescription><lineNumber>859</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>146</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)I</methodDescription><lineNumber>860</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>147</block><killingTest>org.joda.time.DateTimeZone_ESTest.test50</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)I</methodDescription><lineNumber>862</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>148</block><killingTest>org.joda.time.DateTimeZone_ESTest.test19</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>953</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>35</index><block>154</block><killingTest/><description>replaced call to org/joda/time/DateTimeZone::nextTransition with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>957</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>57</index><block>155</block><killingTest/><description>replaced call to org/joda/time/DateTimeZone::nextTransition with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>966</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>93</index><block>160</block><killingTest/><description>replaced call to org/joda/time/DateTimeZone::previousTransition with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>949</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>30</index><block>153</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>965</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>88</index><block>159</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>967</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>100</index><block>160</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>970</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>121</index><block>161</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>955</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>48</index><block>155</block><killingTest/><description>Substituted 9223372036854775807 with -9223372036854775808</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>959</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>70</index><block>156</block><killingTest/><description>Substituted 9223372036854775807 with -9223372036854775808</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>943</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>152</block><killingTest/><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>949</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>29</index><block>153</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>954</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>43</index><block>154</block><killingTest/><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>957</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>56</index><block>155</block><killingTest/><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>958</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>65</index><block>155</block><killingTest/><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>969</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>111</index><block>161</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>970</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>117</index><block>161</block><killingTest/><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>946</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>152</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>949</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>153</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>954</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>45</index><block>154</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>958</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>67</index><block>155</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>961</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>77</index><block>156</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>965</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>88</index><block>159</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>967</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>100</index><block>160</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>970</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>121</index><block>161</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>941</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>152</block><killingTest/><description>removed call to org/joda/time/DateTimeZone::getOffset</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>944</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>18</index><block>152</block><killingTest/><description>removed call to org/joda/time/DateTimeZone::getOffset</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>953</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>35</index><block>154</block><killingTest/><description>removed call to org/joda/time/DateTimeZone::nextTransition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>957</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>57</index><block>155</block><killingTest/><description>removed call to org/joda/time/DateTimeZone::nextTransition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>966</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>93</index><block>160</block><killingTest/><description>removed call to org/joda/time/DateTimeZone::previousTransition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>968</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>105</index><block>161</block><killingTest/><description>removed call to org/joda/time/DateTimeZone::getOffset</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>962</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>81</index><block>157</block><killingTest/><description>replaced int return with 0 for org/joda/time/DateTimeZone::getOffsetFromLocal</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>971</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>125</index><block>162</block><killingTest/><description>replaced int return with 0 for org/joda/time/DateTimeZone::getOffsetFromLocal</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>975</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>129</index><block>163</block><killingTest/><description>replaced int return with 0 for org/joda/time/DateTimeZone::getOffsetFromLocal</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>946</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>24</index><block>152</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>954</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>45</index><block>154</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>958</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>67</index><block>155</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>961</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>77</index><block>156</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>946</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>24</index><block>152</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>954</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>45</index><block>154</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>958</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>67</index><block>155</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>961</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>77</index><block>156</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>949</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>30</index><block>153</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>965</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>88</index><block>159</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>967</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>100</index><block>160</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>970</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>121</index><block>161</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>949</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>30</index><block>153</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>965</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>88</index><block>159</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>967</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>100</index><block>160</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>970</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>121</index><block>161</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>962</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>81</index><block>157</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>971</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>125</index><block>162</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getOffsetFromLocal</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>975</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>129</index><block>163</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>74</block><killingTest>org.joda.time.DateTimeZone_ESTest.test83</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>450</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>75</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>447</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>74</block><killingTest>org.joda.time.DateTimeZone_ESTest.test83</killingTest><description>removed call to java/util/concurrent/atomic/AtomicReference::get</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>75</block><killingTest/><description>removed call to org/joda/time/DateTimeZone::getDefaultProvider</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>450</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>20</index><block>75</block><killingTest/><description>removed call to java/util/concurrent/atomic/AtomicReference::compareAndSet</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>451</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>25</index><block>76</block><killingTest/><description>removed call to java/util/concurrent/atomic/AtomicReference::get</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>454</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>31</index><block>76</block><killingTest>org.joda.time.DateTimeZone_ESTest.test83</killingTest><description>replaced return value with null for org/joda/time/DateTimeZone::getProvider</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>10</index><block>74</block><killingTest>org.joda.time.DateTimeZone_ESTest.test83</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>450</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>21</index><block>75</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>10</index><block>74</block><killingTest>org.joda.time.DateTimeZone_ESTest.test83</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>450</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>21</index><block>75</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getProvider</mutatedMethod><methodDescription>()Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>454</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>31</index><block>76</block><killingTest>org.joda.time.DateTimeZone_ESTest.test83</killingTest><description>mutated return of Object value for org/joda/time/DateTimeZone::getProvider to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getShortName</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>755</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>7</index><block>128</block><killingTest>org.joda.time.DateTimeZone_ESTest.test14</killingTest><description>replaced return value with &#34;&#34; for org/joda/time/DateTimeZone::getShortName</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getShortName</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>755</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>128</block><killingTest>org.joda.time.DateTimeZone_ESTest.test14</killingTest><description>removed call to org/joda/time/DateTimeZone::getShortName</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getShortName</mutatedMethod><methodDescription>(J)Ljava/lang/String;</methodDescription><lineNumber>755</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>128</block><killingTest>org.joda.time.DateTimeZone_ESTest.test14</killingTest><description>mutated return of Object value for org/joda/time/DateTimeZone::getShortName to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getShortName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>780</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>44</index><block>133</block><killingTest/><description>replaced call to org/joda/time/tz/DefaultNameProvider::getShortName with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getShortName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>782</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>54</index><block>134</block><killingTest/><description>replaced call to org/joda/time/tz/NameProvider::getShortName with argument</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getShortName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>775</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>23</index><block>131</block><killingTest/><description>replaced return value with &#34;&#34; for org/joda/time/DateTimeZone::getShortName</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getShortName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>785</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>63</index><block>135</block><killingTest>org.joda.time.DateTimeZone_ESTest.test14</killingTest><description>replaced return value with &#34;&#34; for org/joda/time/DateTimeZone::getShortName</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getShortName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>787</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>70</index><block>136</block><killingTest/><description>replaced return value with &#34;&#34; for org/joda/time/DateTimeZone::getShortName</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getShortName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>770</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>129</block><killingTest>org.joda.time.DateTimeZone_ESTest.test14</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getShortName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>774</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>130</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getShortName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>779</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>132</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getShortName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>784</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>59</index><block>134</block><killingTest>org.joda.time.DateTimeZone_ESTest.test14</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getShortName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>771</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>130</block><killingTest>org.joda.time.DateTimeZone_ESTest.test14</killingTest><description>removed call to java/util/Locale::getDefault</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getShortName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>773</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>130</block><killingTest>org.joda.time.DateTimeZone_ESTest.test14</killingTest><description>removed call to org/joda/time/DateTimeZone::getNameKey</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getShortName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>778</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>26</index><block>132</block><killingTest>org.joda.time.DateTimeZone_ESTest.test14</killingTest><description>removed call to org/joda/time/DateTimeZone::getNameProvider</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getShortName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>780</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>43</index><block>133</block><killingTest/><description>removed call to org/joda/time/DateTimeZone::isStandardOffset</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getShortName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>780</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>44</index><block>133</block><killingTest>org.joda.time.DateTimeZone_ESTest.test14</killingTest><description>removed call to org/joda/time/tz/DefaultNameProvider::getShortName</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getShortName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>782</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>54</index><block>134</block><killingTest/><description>removed call to org/joda/time/tz/NameProvider::getShortName</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getShortName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>787</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>68</index><block>136</block><killingTest/><description>removed call to org/joda/time/DateTimeZone::getOffset</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getShortName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>787</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>69</index><block>136</block><killingTest/><description>removed call to org/joda/time/DateTimeZone::printOffset</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getShortName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>770</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>129</block><killingTest>org.joda.time.DateTimeZone_ESTest.test14</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getShortName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>774</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>18</index><block>130</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getShortName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>779</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>32</index><block>132</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getShortName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>784</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>59</index><block>134</block><killingTest>org.joda.time.DateTimeZone_ESTest.test14</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getShortName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>770</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>129</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getShortName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>774</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>18</index><block>130</block><killingTest>org.joda.time.DateTimeZone_ESTest.test14</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getShortName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>779</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>32</index><block>132</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getShortName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>784</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>59</index><block>134</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getShortName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>775</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>23</index><block>131</block><killingTest/><description>mutated return of Object value for org/joda/time/DateTimeZone::getShortName to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getShortName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>785</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>63</index><block>135</block><killingTest>org.joda.time.DateTimeZone_ESTest.test14</killingTest><description>mutated return of Object value for org/joda/time/DateTimeZone::getShortName to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getShortName</mutatedMethod><methodDescription>(JLjava/util/Locale;)Ljava/lang/String;</methodDescription><lineNumber>787</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>70</index><block>136</block><killingTest/><description>mutated return of Object value for org/joda/time/DateTimeZone::getShortName to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>204</block><killingTest/><description>Substituted 57 with 58</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>204</block><killingTest>org.joda.time.DateTimeZone_ESTest.test82</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>204</block><killingTest>org.joda.time.DateTimeZone_ESTest.test82</killingTest><description>removed call to org/joda/time/DateTimeZone::getID</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>204</block><killingTest>org.joda.time.DateTimeZone_ESTest.test82</killingTest><description>removed call to java/lang/String::hashCode</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>8</index><block>204</block><killingTest>org.joda.time.DateTimeZone_ESTest.test82</killingTest><description>replaced int return with 0 for org/joda/time/DateTimeZone::hashCode</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>204</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>isLocalDateTimeGap</mutatedMethod><methodDescription>(Lorg/joda/time/LocalDateTime;)Z</methodDescription><lineNumber>1119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>27</index><block>190</block><killingTest/><description>replaced boolean return with false for org/joda/time/DateTimeZone::isLocalDateTimeGap</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>isLocalDateTimeGap</mutatedMethod><methodDescription>(Lorg/joda/time/LocalDateTime;)Z</methodDescription><lineNumber>1113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>9</index><block>188</block><killingTest>org.joda.time.DateTimeZone_ESTest.test46</killingTest><description>replaced boolean return with true for org/joda/time/DateTimeZone::isLocalDateTimeGap</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>isLocalDateTimeGap</mutatedMethod><methodDescription>(Lorg/joda/time/LocalDateTime;)Z</methodDescription><lineNumber>1117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>20</index><block>189</block><killingTest/><description>replaced boolean return with true for org/joda/time/DateTimeZone::isLocalDateTimeGap</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>isLocalDateTimeGap</mutatedMethod><methodDescription>(Lorg/joda/time/LocalDateTime;)Z</methodDescription><lineNumber>1113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>188</block><killingTest>org.joda.time.DateTimeZone_ESTest.test46</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>isLocalDateTimeGap</mutatedMethod><methodDescription>(Lorg/joda/time/LocalDateTime;)Z</methodDescription><lineNumber>1117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>18</index><block>189</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>isLocalDateTimeGap</mutatedMethod><methodDescription>(Lorg/joda/time/LocalDateTime;)Z</methodDescription><lineNumber>1119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>26</index><block>190</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>isLocalDateTimeGap</mutatedMethod><methodDescription>(Lorg/joda/time/LocalDateTime;)Z</methodDescription><lineNumber>1112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>187</block><killingTest>org.joda.time.DateTimeZone_ESTest.test08</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>isLocalDateTimeGap</mutatedMethod><methodDescription>(Lorg/joda/time/LocalDateTime;)Z</methodDescription><lineNumber>1112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>187</block><killingTest>org.joda.time.DateTimeZone_ESTest.test08</killingTest><description>removed call to org/joda/time/DateTimeZone::isFixed</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>isLocalDateTimeGap</mutatedMethod><methodDescription>(Lorg/joda/time/LocalDateTime;)Z</methodDescription><lineNumber>1116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>189</block><killingTest/><description>removed call to org/joda/time/LocalDateTime::toDateTime</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>isLocalDateTimeGap</mutatedMethod><methodDescription>(Lorg/joda/time/LocalDateTime;)Z</methodDescription><lineNumber>1112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>187</block><killingTest>org.joda.time.DateTimeZone_ESTest.test08</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>isLocalDateTimeGap</mutatedMethod><methodDescription>(Lorg/joda/time/LocalDateTime;)Z</methodDescription><lineNumber>1112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>187</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>isLocalDateTimeGap</mutatedMethod><methodDescription>(Lorg/joda/time/LocalDateTime;)Z</methodDescription><lineNumber>1113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>188</block><killingTest>org.joda.time.DateTimeZone_ESTest.test46</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>isLocalDateTimeGap</mutatedMethod><methodDescription>(Lorg/joda/time/LocalDateTime;)Z</methodDescription><lineNumber>1117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>189</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>isLocalDateTimeGap</mutatedMethod><methodDescription>(Lorg/joda/time/LocalDateTime;)Z</methodDescription><lineNumber>1119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>27</index><block>190</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>isStandardOffset</mutatedMethod><methodDescription>(J)Z</methodDescription><lineNumber>900</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>15</index><block>151</block><killingTest/><description>replaced boolean return with true for org/joda/time/DateTimeZone::isStandardOffset</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>isStandardOffset</mutatedMethod><methodDescription>(J)Z</methodDescription><lineNumber>900</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>10</index><block>150</block><killingTest>org.joda.time.DateTimeZone_ESTest.test07</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>isStandardOffset</mutatedMethod><methodDescription>(J)Z</methodDescription><lineNumber>900</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>13</index><block>151</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>isStandardOffset</mutatedMethod><methodDescription>(J)Z</methodDescription><lineNumber>900</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>149</block><killingTest>org.joda.time.DateTimeZone_ESTest.test07</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>isStandardOffset</mutatedMethod><methodDescription>(J)Z</methodDescription><lineNumber>900</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>149</block><killingTest/><description>removed call to org/joda/time/DateTimeZone::getOffset</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>isStandardOffset</mutatedMethod><methodDescription>(J)Z</methodDescription><lineNumber>900</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><block>149</block><killingTest/><description>removed call to org/joda/time/DateTimeZone::getStandardOffset</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>isStandardOffset</mutatedMethod><methodDescription>(J)Z</methodDescription><lineNumber>900</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>9</index><block>149</block><killingTest>org.joda.time.DateTimeZone_ESTest.test07</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>isStandardOffset</mutatedMethod><methodDescription>(J)Z</methodDescription><lineNumber>900</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>9</index><block>149</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>isStandardOffset</mutatedMethod><methodDescription>(J)Z</methodDescription><lineNumber>900</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>151</block><killingTest>org.joda.time.DateTimeZone_ESTest.test07</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>parseOffset</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>658</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>7</index><block>116</block><killingTest>org.joda.time.DateTimeZone_ESTest.test18</killingTest><description>removed negation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>parseOffset</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>658</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>116</block><killingTest>org.joda.time.DateTimeZone_ESTest.test18</killingTest><description>removed call to org/joda/time/format/DateTimeFormatter::parseMillis</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>parseOffset</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>658</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>8</index><block>116</block><killingTest>org.joda.time.DateTimeZone_ESTest.test18</killingTest><description>replaced int return with 0 for org/joda/time/DateTimeZone::parseOffset</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>parseOffset</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>658</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>116</block><killingTest>org.joda.time.DateTimeZone_ESTest.test18</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>672</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>117</block><killingTest>org.joda.time.DateTimeZone_ESTest.test53</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>671</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>5</index><block>117</block><killingTest>org.joda.time.DateTimeZone_ESTest.test53</killingTest><description>removed call to java/lang/StringBuffer::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>688</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>83</index><block>120</block><killingTest>org.joda.time.DateTimeZone_ESTest.test53</killingTest><description>replaced return value with &#34;&#34; for org/joda/time/DateTimeZone::printOffset</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>696</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>118</index><block>122</block><killingTest>org.joda.time.DateTimeZone_ESTest.test56</killingTest><description>replaced return value with &#34;&#34; for org/joda/time/DateTimeZone::printOffset</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>701</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>135</index><block>123</block><killingTest>org.joda.time.DateTimeZone_ESTest.test16</killingTest><description>replaced return value with &#34;&#34; for org/joda/time/DateTimeZone::printOffset</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>673</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>14</index><block>118</block><killingTest>org.joda.time.DateTimeZone_ESTest.test53</killingTest><description>Substituted 43 with 44</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>675</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>21</index><block>119</block><killingTest>org.joda.time.DateTimeZone_ESTest.test21</killingTest><description>Substituted 45 with 46</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>679</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>32</index><block>119</block><killingTest>org.joda.time.DateTimeZone_ESTest.test21</killingTest><description>Substituted 3600000 with 3600001</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>680</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>39</index><block>119</block><killingTest>org.joda.time.DateTimeZone_ESTest.test53</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>681</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>45</index><block>119</block><killingTest>org.joda.time.DateTimeZone_ESTest.test21</killingTest><description>Substituted 3600000 with 3600001</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>683</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>52</index><block>119</block><killingTest>org.joda.time.DateTimeZone_ESTest.test70</killingTest><description>Substituted 60000 with 60001</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>684</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>58</index><block>119</block><killingTest>org.joda.time.DateTimeZone_ESTest.test53</killingTest><description>Substituted 58 with 59</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>685</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>65</index><block>119</block><killingTest>org.joda.time.DateTimeZone_ESTest.test53</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>686</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>71</index><block>119</block><killingTest>org.joda.time.DateTimeZone_ESTest.test70</killingTest><description>Substituted 60000 with 60001</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>691</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>87</index><block>121</block><killingTest>org.joda.time.DateTimeZone_ESTest.test56</killingTest><description>Substituted 1000 with 1001</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>692</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>93</index><block>121</block><killingTest>org.joda.time.DateTimeZone_ESTest.test16</killingTest><description>Substituted 58 with 59</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>693</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>100</index><block>121</block><killingTest>org.joda.time.DateTimeZone_ESTest.test16</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>694</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>106</index><block>121</block><killingTest>org.joda.time.DateTimeZone_ESTest.test56</killingTest><description>Substituted 1000 with 1001</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>699</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>122</index><block>123</block><killingTest>org.joda.time.DateTimeZone_ESTest.test16</killingTest><description>Substituted 46 with 47</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>700</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>129</index><block>123</block><killingTest>org.joda.time.DateTimeZone_ESTest.test16</killingTest><description>Substituted 3 with 4</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>676</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>27</index><block>119</block><killingTest>org.joda.time.DateTimeZone_ESTest.test21</killingTest><description>removed negation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>679</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>119</block><killingTest>org.joda.time.DateTimeZone_ESTest.test16</killingTest><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>681</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>46</index><block>119</block><killingTest>org.joda.time.DateTimeZone_ESTest.test21</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>681</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>47</index><block>119</block><killingTest>org.joda.time.DateTimeZone_ESTest.test21</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>683</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>53</index><block>119</block><killingTest>org.joda.time.DateTimeZone_ESTest.test16</killingTest><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>686</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>72</index><block>119</block><killingTest>org.joda.time.DateTimeZone_ESTest.test70</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>686</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>73</index><block>119</block><killingTest>org.joda.time.DateTimeZone_ESTest.test70</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>691</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>88</index><block>121</block><killingTest>org.joda.time.DateTimeZone_ESTest.test16</killingTest><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>694</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>107</index><block>121</block><killingTest>org.joda.time.DateTimeZone_ESTest.test56</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>694</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>108</index><block>121</block><killingTest>org.joda.time.DateTimeZone_ESTest.test56</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>672</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>117</block><killingTest>org.joda.time.DateTimeZone_ESTest.test53</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>687</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>78</index><block>119</block><killingTest>org.joda.time.DateTimeZone_ESTest.test53</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>695</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>113</index><block>121</block><killingTest>org.joda.time.DateTimeZone_ESTest.test16</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>673</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>15</index><block>118</block><killingTest>org.joda.time.DateTimeZone_ESTest.test53</killingTest><description>removed call to java/lang/StringBuffer::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>675</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>22</index><block>119</block><killingTest>org.joda.time.DateTimeZone_ESTest.test21</killingTest><description>removed call to java/lang/StringBuffer::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>684</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>59</index><block>119</block><killingTest>org.joda.time.DateTimeZone_ESTest.test53</killingTest><description>removed call to java/lang/StringBuffer::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>688</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>82</index><block>120</block><killingTest>org.joda.time.DateTimeZone_ESTest.test53</killingTest><description>removed call to java/lang/StringBuffer::toString</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>692</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>94</index><block>121</block><killingTest>org.joda.time.DateTimeZone_ESTest.test16</killingTest><description>removed call to java/lang/StringBuffer::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>696</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>117</index><block>122</block><killingTest>org.joda.time.DateTimeZone_ESTest.test56</killingTest><description>removed call to java/lang/StringBuffer::toString</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>699</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>123</index><block>123</block><killingTest>org.joda.time.DateTimeZone_ESTest.test16</killingTest><description>removed call to java/lang/StringBuffer::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>701</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>134</index><block>123</block><killingTest>org.joda.time.DateTimeZone_ESTest.test16</killingTest><description>removed call to java/lang/StringBuffer::toString</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>687</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>78</index><block>119</block><killingTest>org.joda.time.DateTimeZone_ESTest.test53</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>695</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>113</index><block>121</block><killingTest>org.joda.time.DateTimeZone_ESTest.test56</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>687</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>78</index><block>119</block><killingTest>org.joda.time.DateTimeZone_ESTest.test16</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>695</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>113</index><block>121</block><killingTest>org.joda.time.DateTimeZone_ESTest.test16</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>672</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>10</index><block>117</block><killingTest>org.joda.time.DateTimeZone_ESTest.test53</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>672</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>10</index><block>117</block><killingTest>org.joda.time.DateTimeZone_ESTest.test21</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>688</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>83</index><block>120</block><killingTest>org.joda.time.DateTimeZone_ESTest.test53</killingTest><description>mutated return of Object value for org/joda/time/DateTimeZone::printOffset to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>696</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>118</index><block>122</block><killingTest>org.joda.time.DateTimeZone_ESTest.test56</killingTest><description>mutated return of Object value for org/joda/time/DateTimeZone::printOffset to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>701</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>135</index><block>123</block><killingTest>org.joda.time.DateTimeZone_ESTest.test16</killingTest><description>mutated return of Object value for org/joda/time/DateTimeZone::printOffset to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>680</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>40</index><block>119</block><killingTest>org.joda.time.DateTimeZone_ESTest.test53</killingTest><description>removed call to org/joda/time/format/FormatUtils::appendPaddedInteger</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>685</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>66</index><block>119</block><killingTest>org.joda.time.DateTimeZone_ESTest.test53</killingTest><description>removed call to org/joda/time/format/FormatUtils::appendPaddedInteger</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>693</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>101</index><block>121</block><killingTest>org.joda.time.DateTimeZone_ESTest.test16</killingTest><description>removed call to org/joda/time/format/FormatUtils::appendPaddedInteger</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>700</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>130</index><block>123</block><killingTest>org.joda.time.DateTimeZone_ESTest.test16</killingTest><description>removed call to org/joda/time/format/FormatUtils::appendPaddedInteger</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>673</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>15</index><block>118</block><killingTest>org.joda.time.DateTimeZone_ESTest.test53</killingTest><description>replaced call to java/lang/StringBuffer::append with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>675</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>22</index><block>119</block><killingTest>org.joda.time.DateTimeZone_ESTest.test21</killingTest><description>replaced call to java/lang/StringBuffer::append with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>684</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>59</index><block>119</block><killingTest>org.joda.time.DateTimeZone_ESTest.test53</killingTest><description>replaced call to java/lang/StringBuffer::append with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>692</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>94</index><block>121</block><killingTest>org.joda.time.DateTimeZone_ESTest.test16</killingTest><description>replaced call to java/lang/StringBuffer::append with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>699</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>123</index><block>123</block><killingTest>org.joda.time.DateTimeZone_ESTest.test16</killingTest><description>replaced call to java/lang/StringBuffer::append with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>15</index><block>9</block><killingTest>org.joda.time.DateTimeZone_ESTest.test77</killingTest><description>removed call to org/joda/time/JodaTimePermission::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>26</index><block>10</block><killingTest>org.joda.time.DateTimeZone_ESTest.test76</killingTest><description>removed call to java/lang/IllegalArgumentException::&#60;init&#62;</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>8</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>9</block><killingTest>org.joda.time.DateTimeZone_ESTest.test77</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>3</index><block>8</block><killingTest/><description>removed call to java/lang/System::getSecurityManager</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>8</index><block>8</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>20</index><block>9</block><killingTest>org.joda.time.DateTimeZone_ESTest.test76</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>8</index><block>8</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>20</index><block>9</block><killingTest>org.joda.time.DateTimeZone_ESTest.test77</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>9</block><killingTest/><description>removed call to java/lang/SecurityManager::checkPermission</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>32</index><block>11</block><killingTest/><description>removed call to java/util/concurrent/atomic/AtomicReference::set</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setNameProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/NameProvider;)V</methodDescription><lineNumber>597</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>15</index><block>105</block><killingTest>org.joda.time.DateTimeZone_ESTest.test57</killingTest><description>removed call to org/joda/time/JodaTimePermission::&#60;init&#62;</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setNameProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/NameProvider;)V</methodDescription><lineNumber>596</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>104</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setNameProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/NameProvider;)V</methodDescription><lineNumber>599</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>105</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setNameProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/NameProvider;)V</methodDescription><lineNumber>595</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>3</index><block>104</block><killingTest/><description>removed call to java/lang/System::getSecurityManager</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setNameProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/NameProvider;)V</methodDescription><lineNumber>600</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>23</index><block>106</block><killingTest/><description>removed call to org/joda/time/DateTimeZone::getDefaultNameProvider</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setNameProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/NameProvider;)V</methodDescription><lineNumber>596</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>8</index><block>104</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setNameProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/NameProvider;)V</methodDescription><lineNumber>599</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>20</index><block>105</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setNameProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/NameProvider;)V</methodDescription><lineNumber>596</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>8</index><block>104</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setNameProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/NameProvider;)V</methodDescription><lineNumber>599</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>20</index><block>105</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setNameProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/NameProvider;)V</methodDescription><lineNumber>597</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>105</block><killingTest/><description>removed call to java/lang/SecurityManager::checkPermission</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setNameProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/NameProvider;)V</methodDescription><lineNumber>602</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>29</index><block>106</block><killingTest/><description>removed call to java/util/concurrent/atomic/AtomicReference::set</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/Provider;)V</methodDescription><lineNumber>475</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>29</index><block>80</block><killingTest/><description>replaced call to org/joda/time/DateTimeZone::validateProvider with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/Provider;)V</methodDescription><lineNumber>470</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>15</index><block>78</block><killingTest>org.joda.time.DateTimeZone_ESTest.test60</killingTest><description>removed call to org/joda/time/JodaTimePermission::&#60;init&#62;</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/Provider;)V</methodDescription><lineNumber>469</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>77</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/Provider;)V</methodDescription><lineNumber>472</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>78</block><killingTest>org.joda.time.DateTimeZone_ESTest.test60</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/Provider;)V</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>3</index><block>77</block><killingTest/><description>removed call to java/lang/System::getSecurityManager</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/Provider;)V</methodDescription><lineNumber>473</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>23</index><block>79</block><killingTest/><description>removed call to org/joda/time/DateTimeZone::getDefaultProvider</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/Provider;)V</methodDescription><lineNumber>475</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>29</index><block>80</block><killingTest/><description>removed call to org/joda/time/DateTimeZone::validateProvider</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/Provider;)V</methodDescription><lineNumber>469</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>8</index><block>77</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/Provider;)V</methodDescription><lineNumber>472</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>20</index><block>78</block><killingTest>org.joda.time.DateTimeZone_ESTest.test60</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/Provider;)V</methodDescription><lineNumber>469</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>8</index><block>77</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/Provider;)V</methodDescription><lineNumber>472</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>20</index><block>78</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/Provider;)V</methodDescription><lineNumber>470</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>78</block><killingTest/><description>removed call to java/lang/SecurityManager::checkPermission</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/Provider;)V</methodDescription><lineNumber>477</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>35</index><block>80</block><killingTest/><description>removed call to java/util/concurrent/atomic/AtomicReference::set</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>1225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>5</index><block>205</block><killingTest>org.joda.time.DateTimeZone_ESTest.test77</killingTest><description>replaced return value with &#34;&#34; for org/joda/time/DateTimeZone::toString</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>1225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>205</block><killingTest>org.joda.time.DateTimeZone_ESTest.test77</killingTest><description>removed call to org/joda/time/DateTimeZone::getID</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>1225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>205</block><killingTest>org.joda.time.DateTimeZone_ESTest.test77</killingTest><description>mutated return of Object value for org/joda/time/DateTimeZone::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>toTimeZone</mutatedMethod><methodDescription>()Ljava/util/TimeZone;</methodDescription><lineNumber>1200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>203</block><killingTest/><description>removed call to java/util/TimeZone::getTimeZone</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>toTimeZone</mutatedMethod><methodDescription>()Ljava/util/TimeZone;</methodDescription><lineNumber>1200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>6</index><block>203</block><killingTest/><description>replaced return value with null for org/joda/time/DateTimeZone::toTimeZone</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>toTimeZone</mutatedMethod><methodDescription>()Ljava/util/TimeZone;</methodDescription><lineNumber>1200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>203</block><killingTest/><description>mutated return of Object value for org/joda/time/DateTimeZone::toTimeZone to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>validateProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/Provider;)Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>490</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>18</index><block>83</block><killingTest/><description>removed call to java/lang/IllegalArgumentException::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>validateProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/Provider;)Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>493</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>31</index><block>85</block><killingTest/><description>removed call to java/lang/IllegalArgumentException::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>validateProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/Provider;)Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>496</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>46</index><block>87</block><killingTest/><description>removed call to java/lang/IllegalArgumentException::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>validateProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/Provider;)Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>489</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>81</block><killingTest>org.joda.time.DateTimeZone_ESTest.test59</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>validateProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/Provider;)Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>489</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>82</block><killingTest>org.joda.time.DateTimeZone_ESTest.test59</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>validateProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/Provider;)Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>492</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>84</block><killingTest>org.joda.time.DateTimeZone_ESTest.test59</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>validateProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/Provider;)Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>495</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>86</block><killingTest>org.joda.time.DateTimeZone_ESTest.test59</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>validateProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/Provider;)Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>488</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>81</block><killingTest>org.joda.time.DateTimeZone_ESTest.test59</killingTest><description>removed call to org/joda/time/tz/Provider::getAvailableIDs</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>validateProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/Provider;)Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>489</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>11</index><block>82</block><killingTest>org.joda.time.DateTimeZone_ESTest.test59</killingTest><description>removed call to java/util/Set::size</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>validateProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/Provider;)Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>492</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>24</index><block>84</block><killingTest>org.joda.time.DateTimeZone_ESTest.test59</killingTest><description>removed call to java/util/Set::contains</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>validateProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/Provider;)Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>495</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>38</index><block>86</block><killingTest>org.joda.time.DateTimeZone_ESTest.test59</killingTest><description>removed call to org/joda/time/tz/Provider::getZone</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>validateProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/Provider;)Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>495</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>39</index><block>86</block><killingTest>org.joda.time.DateTimeZone_ESTest.test59</killingTest><description>removed call to org/joda/time/DateTimeZone::equals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>validateProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/Provider;)Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>498</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>51</index><block>88</block><killingTest/><description>replaced return value with null for org/joda/time/DateTimeZone::validateProvider</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>validateProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/Provider;)Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>489</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>9</index><block>81</block><killingTest>org.joda.time.DateTimeZone_ESTest.test59</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>validateProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/Provider;)Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>489</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>12</index><block>82</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>validateProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/Provider;)Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>492</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>25</index><block>84</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>validateProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/Provider;)Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>495</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>40</index><block>86</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>validateProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/Provider;)Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>489</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>9</index><block>81</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>validateProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/Provider;)Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>489</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>12</index><block>82</block><killingTest>org.joda.time.DateTimeZone_ESTest.test59</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>validateProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/Provider;)Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>492</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>25</index><block>84</block><killingTest>org.joda.time.DateTimeZone_ESTest.test59</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>validateProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/Provider;)Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>495</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>40</index><block>86</block><killingTest>org.joda.time.DateTimeZone_ESTest.test59</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>validateProvider</mutatedMethod><methodDescription>(Lorg/joda/time/tz/Provider;)Lorg/joda/time/tz/Provider;</methodDescription><lineNumber>498</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>51</index><block>88</block><killingTest/><description>mutated return of Object value for org/joda/time/DateTimeZone::validateProvider to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>writeReplace</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>1235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>7</index><block>206</block><killingTest/><description>removed call to org/joda/time/DateTimeZone$Stub::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>writeReplace</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>1235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>8</index><block>206</block><killingTest/><description>replaced return value with null for org/joda/time/DateTimeZone::writeReplace</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>writeReplace</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>1235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>206</block><killingTest/><description>mutated return of Object value for org/joda/time/DateTimeZone::writeReplace to ( if (x != null) null else throw new RuntimeException )</description></mutation>
</mutations>

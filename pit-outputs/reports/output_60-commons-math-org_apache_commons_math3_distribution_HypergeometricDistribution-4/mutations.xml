<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(III)V</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test14</killingTest><description>removed call to org/apache/commons/math3/random/Well19937c::&#60;init&#62;</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='31'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;III)V</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><block>1</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='30'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;III)V</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>32</index><block>3</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;III)V</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>45</index><block>5</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test06</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;III)V</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>59</index><block>7</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test27</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;III)V</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>76</index><block>9</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test27</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;III)V</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>27</index><block>2</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test25</killingTest><description>removed call to org/apache/commons/math3/exception/NotStrictlyPositiveException::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;III)V</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>40</index><block>4</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test24</killingTest><description>removed call to org/apache/commons/math3/exception/NotPositiveException::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;III)V</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>53</index><block>6</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test23</killingTest><description>removed call to org/apache/commons/math3/exception/NotPositiveException::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;III)V</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>70</index><block>8</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test22</killingTest><description>removed call to org/apache/commons/math3/exception/NumberIsTooLargeException::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;III)V</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>87</index><block>10</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test21</killingTest><description>removed call to org/apache/commons/math3/exception/NumberIsTooLargeException::&#60;init&#62;</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='31'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;III)V</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>9</index><block>1</block><killingTest/><description>Substituted NaN with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;III)V</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>14</index><block>1</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test10</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;III)V</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>69</index><block>8</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;III)V</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>86</index><block>10</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;III)V</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>1</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test30</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;III)V</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>3</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test30</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;III)V</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>45</index><block>5</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test30</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;III)V</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>59</index><block>7</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test30</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;III)V</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>76</index><block>9</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test30</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;III)V</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>26</index><block>2</block><killingTest/><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;III)V</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>39</index><block>4</block><killingTest/><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;III)V</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>52</index><block>6</block><killingTest/><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;III)V</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>66</index><block>8</block><killingTest/><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;III)V</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>68</index><block>8</block><killingTest/><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;III)V</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>83</index><block>10</block><killingTest/><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;III)V</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>85</index><block>10</block><killingTest/><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='31'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;III)V</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>19</index><block>1</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='30'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;III)V</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>32</index><block>3</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;III)V</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>45</index><block>5</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test23</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='28'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;III)V</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>59</index><block>7</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;III)V</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>76</index><block>9</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test21</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;III)V</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>19</index><block>1</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test30</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;III)V</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>32</index><block>3</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test30</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;III)V</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>45</index><block>5</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test30</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;III)V</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>59</index><block>7</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test30</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;III)V</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>76</index><block>9</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test30</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='31'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;III)V</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>10</index><block>1</block><killingTest/><description>Removed assignment to member variable numericalVariance</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='31'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;III)V</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>15</index><block>1</block><killingTest/><description>Removed assignment to member variable numericalVarianceIsCalculated</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;III)V</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>93</index><block>11</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test27</killingTest><description>Removed assignment to member variable numberOfSuccesses</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;III)V</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>98</index><block>11</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test30</killingTest><description>Removed assignment to member variable populationSize</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/random/RandomGenerator;III)V</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>103</index><block>11</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test27</killingTest><description>Removed assignment to member variable sampleSize</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>calculateNumericalVariance</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>36</index><block>41</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test10</killingTest><description>Substituted 1.0 with 2.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>calculateNumericalVariance</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>41</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test10</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>calculateNumericalVariance</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><block>41</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test10</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>calculateNumericalVariance</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>41</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test10</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>calculateNumericalVariance</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>41</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test10</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>calculateNumericalVariance</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>41</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test10</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>calculateNumericalVariance</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>34</index><block>41</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test30</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>calculateNumericalVariance</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>41</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test10</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>calculateNumericalVariance</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>38</index><block>41</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test30</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>calculateNumericalVariance</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>41</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test30</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>calculateNumericalVariance</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>41</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test30</killingTest><description>removed call to org/apache/commons/math3/distribution/HypergeometricDistribution::getPopulationSize</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>calculateNumericalVariance</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>306</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>41</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test10</killingTest><description>removed call to org/apache/commons/math3/distribution/HypergeometricDistribution::getNumberOfSuccesses</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>calculateNumericalVariance</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>307</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>16</index><block>41</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test10</killingTest><description>removed call to org/apache/commons/math3/distribution/HypergeometricDistribution::getSampleSize</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>calculateNumericalVariance</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>40</index><block>41</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test10</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/distribution/HypergeometricDistribution::calculateNumericalVariance</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>calculateNumericalVariance</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>40</index><block>41</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test30</killingTest><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/distribution/HypergeometricDistribution::calculateNumericalVariance</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>12</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test19</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>31</index><block>14</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test19</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>16</index><block>12</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>21</index><block>13</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test20</killingTest><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>29</index><block>14</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>34</index><block>15</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test19</killingTest><description>Substituted 1.0 with 2.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>42</index><block>16</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>45</index><block>16</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>12</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test19</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>14</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test19</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>12</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test19</killingTest><description>removed call to org/apache/commons/math3/distribution/HypergeometricDistribution::getDomain</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>46</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/distribution/HypergeometricDistribution::innerCumulativeProbability</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>51</index><block>16</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test19</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/distribution/HypergeometricDistribution::cumulativeProbability</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>18</index><block>12</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>31</index><block>14</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test19</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>18</index><block>12</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test19</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>31</index><block>14</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>cumulativeProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>51</index><block>16</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test19</killingTest><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/distribution/HypergeometricDistribution::cumulativeProbability</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getDomain</mutatedMethod><methodDescription>(III)[I</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>11</index><block>17</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test29</killingTest><description>replaced call to org/apache/commons/math3/distribution/HypergeometricDistribution::getLowerDomain with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getDomain</mutatedMethod><methodDescription>(III)[I</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>18</index><block>17</block><killingTest/><description>replaced call to org/apache/commons/math3/distribution/HypergeometricDistribution::getUpperDomain with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getDomain</mutatedMethod><methodDescription>(III)[I</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>17</block><killingTest/><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getDomain</mutatedMethod><methodDescription>(III)[I</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><block>17</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test16</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getDomain</mutatedMethod><methodDescription>(III)[I</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>14</index><block>17</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test29</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getDomain</mutatedMethod><methodDescription>(III)[I</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>11</index><block>17</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test16</killingTest><description>removed call to org/apache/commons/math3/distribution/HypergeometricDistribution::getLowerDomain</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getDomain</mutatedMethod><methodDescription>(III)[I</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>18</index><block>17</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test01</killingTest><description>removed call to org/apache/commons/math3/distribution/HypergeometricDistribution::getUpperDomain</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getDomain</mutatedMethod><methodDescription>(III)[I</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>20</index><block>17</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test29</killingTest><description>replaced return value with null for org/apache/commons/math3/distribution/HypergeometricDistribution::getDomain</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getDomain</mutatedMethod><methodDescription>(III)[I</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>17</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test29</killingTest><description>mutated return of Object value for org/apache/commons/math3/distribution/HypergeometricDistribution::getDomain to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getLowerDomain</mutatedMethod><methodDescription>(III)I</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>9</index><block>18</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test18</killingTest><description>replaced call to org/apache/commons/math3/util/FastMath::max with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getLowerDomain</mutatedMethod><methodDescription>(III)I</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>18</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getLowerDomain</mutatedMethod><methodDescription>(III)I</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>18</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test16</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getLowerDomain</mutatedMethod><methodDescription>(III)I</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><block>18</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test29</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getLowerDomain</mutatedMethod><methodDescription>(III)I</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>18</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test16</killingTest><description>removed call to org/apache/commons/math3/util/FastMath::max</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getLowerDomain</mutatedMethod><methodDescription>(III)I</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>10</index><block>18</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test16</killingTest><description>replaced int return with 0 for org/apache/commons/math3/distribution/HypergeometricDistribution::getLowerDomain</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getLowerDomain</mutatedMethod><methodDescription>(III)I</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>18</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test16</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getNumberOfSuccesses</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>19</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test27</killingTest><description>replaced int return with 0 for org/apache/commons/math3/distribution/HypergeometricDistribution::getNumberOfSuccesses</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getNumberOfSuccesses</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>19</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test27</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getNumericalMean</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>38</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test27</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getNumericalMean</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>38</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test29</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getNumericalMean</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>38</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test27</killingTest><description>removed call to org/apache/commons/math3/distribution/HypergeometricDistribution::getSampleSize</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getNumericalMean</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>38</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test27</killingTest><description>removed call to org/apache/commons/math3/distribution/HypergeometricDistribution::getNumberOfSuccesses</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getNumericalMean</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>38</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test27</killingTest><description>removed call to org/apache/commons/math3/distribution/HypergeometricDistribution::getPopulationSize</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getNumericalMean</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>14</index><block>38</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test27</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/distribution/HypergeometricDistribution::getNumericalMean</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getNumericalMean</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>38</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test27</killingTest><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/distribution/HypergeometricDistribution::getNumericalMean</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getNumericalVariance</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>40</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getNumericalVariance</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>39</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test10</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getNumericalVariance</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>40</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test10</killingTest><description>removed call to org/apache/commons/math3/distribution/HypergeometricDistribution::calculateNumericalVariance</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getNumericalVariance</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>21</index><block>40</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test10</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/distribution/HypergeometricDistribution::getNumericalVariance</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getNumericalVariance</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>39</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test10</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getNumericalVariance</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>39</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getNumericalVariance</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>40</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test10</killingTest><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/distribution/HypergeometricDistribution::getNumericalVariance</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getNumericalVariance</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>11</index><block>40</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test10</killingTest><description>Removed assignment to member variable numericalVariance</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getNumericalVariance</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>16</index><block>40</block><killingTest/><description>Removed assignment to member variable numericalVarianceIsCalculated</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getPopulationSize</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>20</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test30</killingTest><description>replaced int return with 0 for org/apache/commons/math3/distribution/HypergeometricDistribution::getPopulationSize</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getPopulationSize</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>20</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test30</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getSampleSize</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>21</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test27</killingTest><description>replaced int return with 0 for org/apache/commons/math3/distribution/HypergeometricDistribution::getSampleSize</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getSampleSize</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>21</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test27</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getSupportLowerBound</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>12</index><block>42</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::max with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getSupportLowerBound</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>42</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test04</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getSupportLowerBound</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><block>42</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test05</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getSupportLowerBound</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>42</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test04</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getSupportLowerBound</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>42</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test05</killingTest><description>removed call to org/apache/commons/math3/distribution/HypergeometricDistribution::getSampleSize</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getSupportLowerBound</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>42</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test05</killingTest><description>removed call to org/apache/commons/math3/distribution/HypergeometricDistribution::getNumberOfSuccesses</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getSupportLowerBound</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>42</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test04</killingTest><description>removed call to org/apache/commons/math3/distribution/HypergeometricDistribution::getPopulationSize</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getSupportLowerBound</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>12</index><block>42</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test05</killingTest><description>removed call to org/apache/commons/math3/util/FastMath::max</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getSupportLowerBound</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>13</index><block>42</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test05</killingTest><description>replaced int return with 0 for org/apache/commons/math3/distribution/HypergeometricDistribution::getSupportLowerBound</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getSupportLowerBound</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>42</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test04</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getSupportUpperBound</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>7</index><block>43</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::min with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getSupportUpperBound</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>43</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test03</killingTest><description>removed call to org/apache/commons/math3/distribution/HypergeometricDistribution::getNumberOfSuccesses</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getSupportUpperBound</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>43</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test03</killingTest><description>removed call to org/apache/commons/math3/distribution/HypergeometricDistribution::getSampleSize</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getSupportUpperBound</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>43</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test03</killingTest><description>removed call to org/apache/commons/math3/util/FastMath::min</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getSupportUpperBound</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>8</index><block>43</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test03</killingTest><description>replaced int return with 0 for org/apache/commons/math3/distribution/HypergeometricDistribution::getSupportUpperBound</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getSupportUpperBound</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>43</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test02</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getUpperDomain</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>5</index><block>22</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::min with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getUpperDomain</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>22</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test01</killingTest><description>removed call to org/apache/commons/math3/util/FastMath::min</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getUpperDomain</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>6</index><block>22</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test01</killingTest><description>replaced int return with 0 for org/apache/commons/math3/distribution/HypergeometricDistribution::getUpperDomain</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>getUpperDomain</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>22</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test01</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>innerCumulativeProbability</mutatedMethod><methodDescription>(III)D</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>36</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>innerCumulativeProbability</mutatedMethod><methodDescription>(III)D</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>36</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>innerCumulativeProbability</mutatedMethod><methodDescription>(III)D</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>35</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>innerCumulativeProbability</mutatedMethod><methodDescription>(III)D</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>35</block><killingTest/><description>removed call to org/apache/commons/math3/distribution/HypergeometricDistribution::probability</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>innerCumulativeProbability</mutatedMethod><methodDescription>(III)D</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>23</index><block>36</block><killingTest/><description>removed call to org/apache/commons/math3/distribution/HypergeometricDistribution::probability</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>innerCumulativeProbability</mutatedMethod><methodDescription>(III)D</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>30</index><block>37</block><killingTest/><description>replaced double return with 0.0d for org/apache/commons/math3/distribution/HypergeometricDistribution::innerCumulativeProbability</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>innerCumulativeProbability</mutatedMethod><methodDescription>(III)D</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>11</index><block>35</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>innerCumulativeProbability</mutatedMethod><methodDescription>(III)D</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>11</index><block>35</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>innerCumulativeProbability</mutatedMethod><methodDescription>(III)D</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>30</index><block>37</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test29</killingTest><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/distribution/HypergeometricDistribution::innerCumulativeProbability</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>isSupportConnected</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>4</index><block>44</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test27</killingTest><description>replaced boolean return with false for org/apache/commons/math3/distribution/HypergeometricDistribution::isSupportConnected</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>isSupportConnected</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>44</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test27</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>isSupportConnected</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>44</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test27</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>logProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>60</index><block>29</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test01</killingTest><description>replaced call to org/apache/commons/math3/distribution/SaddlePointExpansion::logBinomialProbability with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>logProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>75</index><block>29</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test01</killingTest><description>replaced call to org/apache/commons/math3/distribution/SaddlePointExpansion::logBinomialProbability with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>logProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>85</index><block>29</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test01</killingTest><description>replaced call to org/apache/commons/math3/distribution/SaddlePointExpansion::logBinomialProbability with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>logProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>26</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test01</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>logProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>23</index><block>27</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test01</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>logProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>16</index><block>26</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>logProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>21</index><block>27</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>logProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>26</index><block>28</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test17</killingTest><description>Substituted -Infinity with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>logProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>38</index><block>29</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test29</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>logProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>46</index><block>29</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>logProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>51</index><block>29</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test29</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>logProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>67</index><block>29</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test01</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>logProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>72</index><block>29</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test01</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>logProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>91</index><block>29</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>logProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>93</index><block>29</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test01</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>logProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>26</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test18</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>logProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>27</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test17</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>logProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>26</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test29</killingTest><description>removed call to org/apache/commons/math3/distribution/HypergeometricDistribution::getDomain</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>logProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>60</index><block>29</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test01</killingTest><description>removed call to org/apache/commons/math3/distribution/SaddlePointExpansion::logBinomialProbability</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>logProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>75</index><block>29</block><killingTest/><description>removed call to org/apache/commons/math3/distribution/SaddlePointExpansion::logBinomialProbability</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>logProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>85</index><block>29</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test01</killingTest><description>removed call to org/apache/commons/math3/distribution/SaddlePointExpansion::logBinomialProbability</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>logProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>98</index><block>29</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test29</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/distribution/HypergeometricDistribution::logProbability</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>logProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>18</index><block>26</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test01</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>logProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>23</index><block>27</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test17</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>logProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>18</index><block>26</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test18</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>logProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>23</index><block>27</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test01</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>logProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>98</index><block>29</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test29</killingTest><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/distribution/HypergeometricDistribution::logProbability</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>probability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>17</index><block>25</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test29</killingTest><description>replaced call to org/apache/commons/math3/util/FastMath::exp with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>probability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>10</index><block>23</block><killingTest/><description>Substituted -Infinity with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>probability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>13</index><block>24</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test18</killingTest><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>probability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>23</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test00</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>probability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>23</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test29</killingTest><description>removed call to org/apache/commons/math3/distribution/HypergeometricDistribution::logProbability</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>probability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>17</index><block>25</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test00</killingTest><description>removed call to org/apache/commons/math3/util/FastMath::exp</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>probability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>19</index><block>25</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test00</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/distribution/HypergeometricDistribution::probability</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>probability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>12</index><block>23</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>probability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>12</index><block>23</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test00</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>probability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><block>25</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test29</killingTest><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/distribution/HypergeometricDistribution::probability</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>upperCumulativeProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>30</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test16</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>upperCumulativeProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>31</index><block>32</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>upperCumulativeProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>16</index><block>30</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test29</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>upperCumulativeProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>21</index><block>31</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test16</killingTest><description>Substituted 1.0 with 2.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>upperCumulativeProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>29</index><block>32</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>upperCumulativeProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>34</index><block>33</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test15</killingTest><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>upperCumulativeProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>42</index><block>34</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>upperCumulativeProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>45</index><block>34</block><killingTest/><description>Substituted -1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>upperCumulativeProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>30</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test29</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>upperCumulativeProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>32</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>upperCumulativeProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>30</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test29</killingTest><description>removed call to org/apache/commons/math3/distribution/HypergeometricDistribution::getDomain</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>upperCumulativeProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>46</index><block>34</block><killingTest/><description>removed call to org/apache/commons/math3/distribution/HypergeometricDistribution::innerCumulativeProbability</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>upperCumulativeProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>51</index><block>34</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test16</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/distribution/HypergeometricDistribution::upperCumulativeProbability</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>upperCumulativeProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>18</index><block>30</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test16</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>upperCumulativeProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>31</index><block>32</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>upperCumulativeProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>18</index><block>30</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test29</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>upperCumulativeProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>31</index><block>32</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HypergeometricDistribution.java</sourceFile><mutatedClass>org.apache.commons.math3.distribution.HypergeometricDistribution</mutatedClass><mutatedMethod>upperCumulativeProbability</mutatedMethod><methodDescription>(I)D</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>51</index><block>34</block><killingTest>org.apache.commons.math3.distribution.HypergeometricDistribution_ESTest.test29</killingTest><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/distribution/HypergeometricDistribution::upperCumulativeProbability</description></mutation>
</mutations>

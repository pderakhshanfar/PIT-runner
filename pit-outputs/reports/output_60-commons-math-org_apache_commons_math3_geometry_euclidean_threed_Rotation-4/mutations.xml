<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDZ)V</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>27</index><block>1</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>replaced call to org/apache/commons/math3/util/FastMath::sqrt with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDZ)V</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>11</index><block>1</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>Substituted 1.0 with 2.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDZ)V</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>1</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test097</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDZ)V</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>1</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test097</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDZ)V</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>1</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test097</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDZ)V</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>1</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test032</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDZ)V</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>1</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test097</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDZ)V</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>1</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDZ)V</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><block>1</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDZ)V</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>1</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDZ)V</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>34</index><block>1</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDZ)V</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><block>1</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDZ)V</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>46</index><block>1</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDZ)V</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>52</index><block>1</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDZ)V</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>0</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test069</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDZ)V</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>27</index><block>1</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>removed call to org/apache/commons/math3/util/FastMath::sqrt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDZ)V</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>8</index><block>0</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDZ)V</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>8</index><block>0</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test069</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDZ)V</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>58</index><block>1</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test069</killingTest><description>Removed assignment to member variable q0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDZ)V</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>63</index><block>1</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test074</killingTest><description>Removed assignment to member variable q1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDZ)V</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>68</index><block>1</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test069</killingTest><description>Removed assignment to member variable q2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDZ)V</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>73</index><block>1</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>Removed assignment to member variable q3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;DDD)V</methodDescription><lineNumber>408</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>41</index><block>23</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test099</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::compose with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;DDD)V</methodDescription><lineNumber>408</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>43</index><block>23</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test099</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::compose with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;DDD)V</methodDescription><lineNumber>405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>23</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test099</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/RotationOrder::getA1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;DDD)V</methodDescription><lineNumber>406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>20</index><block>23</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test099</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/RotationOrder::getA2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;DDD)V</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>30</index><block>23</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test099</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/RotationOrder::getA3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;DDD)V</methodDescription><lineNumber>408</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>41</index><block>23</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test099</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::compose</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;DDD)V</methodDescription><lineNumber>408</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>43</index><block>23</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test099</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::compose</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;DDD)V</methodDescription><lineNumber>409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>50</index><block>23</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test099</killingTest><description>Removed assignment to member variable q0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;DDD)V</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>56</index><block>23</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test099</killingTest><description>Removed assignment to member variable q1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;DDD)V</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>62</index><block>23</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test100</killingTest><description>Removed assignment to member variable q2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;DDD)V</methodDescription><lineNumber>412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>68</index><block>23</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test099</killingTest><description>Removed assignment to member variable q3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;DDD)V</methodDescription><lineNumber>408</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>41</index><block>23</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test099</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::compose with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;DDD)V</methodDescription><lineNumber>408</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>43</index><block>23</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test099</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::compose with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)V</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>43</index><block>7</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test099</killingTest><description>replaced call to org/apache/commons/math3/util/FastMath::sin with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)V</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>51</index><block>7</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test080</killingTest><description>replaced call to org/apache/commons/math3/util/FastMath::cos with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)V</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>23</index><block>4</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test091</killingTest><description>removed call to org/apache/commons/math3/exception/MathIllegalArgumentException::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)V</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>13</index><block>3</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test091</killingTest><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)V</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>21</index><block>4</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)V</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>30</index><block>6</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test099</killingTest><description>Substituted -0.5 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)V</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>35</index><block>7</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test080</killingTest><description>Substituted 0.5 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)V</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>6</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test099</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='24'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)V</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>7</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test022</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)V</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>45</index><block>7</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test080</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)V</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>59</index><block>7</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test080</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)V</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>67</index><block>7</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test080</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)V</methodDescription><lineNumber>190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>75</index><block>7</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test080</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)V</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>3</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test091</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)V</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>5</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test099</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)V</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><block>3</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test080</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getNorm</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)V</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>43</index><block>7</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test099</killingTest><description>removed call to org/apache/commons/math3/util/FastMath::sin</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)V</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>51</index><block>7</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test080</killingTest><description>removed call to org/apache/commons/math3/util/FastMath::cos</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)V</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>58</index><block>7</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test080</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)V</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>66</index><block>7</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test080</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)V</methodDescription><lineNumber>190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>74</index><block>7</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test080</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)V</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>15</index><block>3</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test091</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)V</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>29</index><block>5</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test099</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)V</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>15</index><block>3</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test080</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='24'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)V</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>29</index><block>5</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test022</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)V</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>52</index><block>7</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test080</killingTest><description>Removed assignment to member variable q0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)V</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>60</index><block>7</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test080</killingTest><description>Removed assignment to member variable q1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)V</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>68</index><block>7</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test080</killingTest><description>Removed assignment to member variable q2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)V</methodDescription><lineNumber>190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>76</index><block>7</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test080</killingTest><description>Removed assignment to member variable q3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='23'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>86</index><block>21</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::sqrt with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='24'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>41</index><block>19</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>26</index><block>18</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test084</killingTest><description>removed call to org/apache/commons/math3/exception/MathArithmeticException::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>16</index><block>17</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test066</killingTest><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>24</index><block>18</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>37</index><block>19</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test072</killingTest><description>Substituted -0.999999999999998 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>343</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>50</index><block>20</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test019</killingTest><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>79</index><block>21</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test081</killingTest><description>Substituted 0.5 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>80</index><block>21</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test081</killingTest><description>Substituted 1.0 with 2.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='23'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>90</index><block>21</block><killingTest/><description>Substituted 1.0 with 2.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='23'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>91</index><block>21</block><killingTest/><description>Substituted 2.0 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>344</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>57</index><block>20</block><killingTest/><description>removed negation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>64</index><block>20</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test019</killingTest><description>removed negation</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>71</index><block>20</block><killingTest/><description>removed negation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>17</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test084</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='24'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>19</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>83</index><block>21</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test053</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>84</index><block>21</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test081</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>85</index><block>21</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test081</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>94</index><block>21</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test072</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='23'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>96</index><block>21</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='23'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>97</index><block>21</block><killingTest/><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>111</index><block>21</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test081</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>354</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>119</index><block>21</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test081</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>127</index><block>21</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test081</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>17</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test066</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>19</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test066</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><block>17</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test066</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getNorm</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>17</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test066</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getNorm</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>32</index><block>19</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test066</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::dotProduct</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>45</index><block>20</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test066</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::orthogonal</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>344</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>56</index><block>20</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>63</index><block>20</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test019</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>70</index><block>20</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>86</index><block>21</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test081</killingTest><description>removed call to org/apache/commons/math3/util/FastMath::sqrt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>103</index><block>21</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test081</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::crossProduct</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='23'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>110</index><block>21</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='23'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>354</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>118</index><block>21</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>126</index><block>21</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test072</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>18</index><block>17</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test084</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>18</index><block>17</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test066</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>41</index><block>19</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test066</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>41</index><block>19</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test081</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>343</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>51</index><block>20</block><killingTest/><description>Removed assignment to member variable q0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>344</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>58</index><block>20</block><killingTest/><description>Removed assignment to member variable q1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>65</index><block>20</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test019</killingTest><description>Removed assignment to member variable q2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>72</index><block>20</block><killingTest/><description>Removed assignment to member variable q3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>87</index><block>21</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test081</killingTest><description>Removed assignment to member variable q0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>112</index><block>21</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test062</killingTest><description>Removed assignment to member variable q1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='23'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>354</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>120</index><block>21</block><killingTest/><description>Removed assignment to member variable q2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>128</index><block>21</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test072</killingTest><description>Removed assignment to member variable q3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>45</index><block>20</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test019</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::orthogonal with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>103</index><block>21</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test081</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::crossProduct with receiver</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>65</index><block>16</block><killingTest/><description>replaced call to org/apache/commons/math3/util/MathArrays::linearCombination with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>81</index><block>16</block><killingTest/><description>replaced call to org/apache/commons/math3/util/MathArrays::linearCombination with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>97</index><block>16</block><killingTest/><description>replaced call to org/apache/commons/math3/util/MathArrays::linearCombination with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>118</index><block>16</block><killingTest/><description>replaced call to org/apache/commons/math3/util/MathArrays::linearCombination with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>134</index><block>16</block><killingTest/><description>replaced call to org/apache/commons/math3/util/MathArrays::linearCombination with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>150</index><block>16</block><killingTest/><description>replaced call to org/apache/commons/math3/util/MathArrays::linearCombination with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>171</index><block>16</block><killingTest/><description>replaced call to org/apache/commons/math3/util/MathArrays::linearCombination with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>187</index><block>16</block><killingTest/><description>replaced call to org/apache/commons/math3/util/MathArrays::linearCombination with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>203</index><block>16</block><killingTest/><description>replaced call to org/apache/commons/math3/util/MathArrays::linearCombination with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>45</index><block>16</block><killingTest/><description>Substituted 3 with 4</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>48</index><block>16</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test095</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>49</index><block>16</block><killingTest/><description>Substituted 3 with 4</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>52</index><block>16</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>68</index><block>16</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>84</index><block>16</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test095</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>101</index><block>16</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test095</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>102</index><block>16</block><killingTest/><description>Substituted 3 with 4</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>105</index><block>16</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>121</index><block>16</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>137</index><block>16</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test095</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>154</index><block>16</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test095</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>155</index><block>16</block><killingTest/><description>Substituted 3 with 4</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>158</index><block>16</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>174</index><block>16</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>190</index><block>16</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test095</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>216</index><block>16</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>311</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>223</index><block>16</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>230</index><block>16</block><killingTest/><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>313</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>237</index><block>16</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test095</killingTest><description>Substituted 3 with 4</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>16</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test095</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::crossProduct</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>16</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test095</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::normalize</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>16</index><block>16</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test095</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::crossProduct</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>17</index><block>16</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test095</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::normalize</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>22</index><block>16</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test095</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::normalize</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>16</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test095</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::crossProduct</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>29</index><block>16</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test095</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::normalize</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>35</index><block>16</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test095</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::crossProduct</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>36</index><block>16</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test095</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::normalize</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>41</index><block>16</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test095</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::normalize</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>54</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>56</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>58</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>60</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>62</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>64</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>65</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/util/MathArrays::linearCombination</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>70</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>72</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>74</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>76</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>78</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>80</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>81</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/util/MathArrays::linearCombination</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>86</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>88</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>90</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>92</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>94</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>96</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>97</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/util/MathArrays::linearCombination</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>107</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>109</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>111</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>113</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>115</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>117</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>118</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/util/MathArrays::linearCombination</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>123</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>125</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>127</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>129</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>131</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>133</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>134</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/util/MathArrays::linearCombination</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>139</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>141</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>143</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>145</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>147</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>149</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>150</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/util/MathArrays::linearCombination</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>160</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>162</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>164</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>166</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>168</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>170</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>171</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/util/MathArrays::linearCombination</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>176</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>178</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>180</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>182</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>184</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>186</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>187</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/util/MathArrays::linearCombination</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>192</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>194</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>196</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>198</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>200</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>202</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>203</index><block>16</block><killingTest/><description>removed call to org/apache/commons/math3/util/MathArrays::linearCombination</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>210</index><block>16</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test095</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::mat2quat</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>218</index><block>16</block><killingTest/><description>Removed assignment to member variable q0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>311</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>225</index><block>16</block><killingTest/><description>Removed assignment to member variable q1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>232</index><block>16</block><killingTest/><description>Removed assignment to member variable q2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>313</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>239</index><block>16</block><killingTest/><description>Removed assignment to member variable q3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>9</index><block>16</block><killingTest/><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::crossProduct with receiver</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>10</index><block>16</block><killingTest/><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::normalize with receiver</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>16</index><block>16</block><killingTest/><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::crossProduct with receiver</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>17</index><block>16</block><killingTest/><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::normalize with receiver</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>22</index><block>16</block><killingTest/><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::normalize with receiver</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>28</index><block>16</block><killingTest/><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::crossProduct with receiver</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>29</index><block>16</block><killingTest/><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::normalize with receiver</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>35</index><block>16</block><killingTest/><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::crossProduct with receiver</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>36</index><block>16</block><killingTest/><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::normalize with receiver</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V</methodDescription><lineNumber>288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>41</index><block>16</block><killingTest/><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::normalize with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>57</index><block>13</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test033</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::orthogonalizeMatrix with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>156</index><block>13</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>50</index><block>12</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test089</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/NotARotationMatrixException::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>169</index><block>14</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test085</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/NotARotationMatrixException::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>9</index><block>8</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 3 with 4</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>12</index><block>9</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>9</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 3 with 4</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>18</index><block>10</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>21</index><block>10</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 3 with 4</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>24</index><block>11</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test033</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>27</index><block>11</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 3 with 4</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>34</index><block>12</block><killingTest/><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>37</index><block>12</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>43</index><block>12</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>45</index><block>12</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>62</index><block>13</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>64</index><block>13</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test085</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>67</index><block>13</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test085</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>69</index><block>13</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>72</index><block>13</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>74</index><block>13</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>78</index><block>13</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>80</index><block>13</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>83</index><block>13</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>85</index><block>13</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>91</index><block>13</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test083</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>93</index><block>13</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>96</index><block>13</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>98</index><block>13</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>101</index><block>13</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>103</index><block>13</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>107</index><block>13</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>109</index><block>13</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>112</index><block>13</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>114</index><block>13</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>121</index><block>13</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>123</index><block>13</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test086</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>126</index><block>13</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>128</index><block>13</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>131</index><block>13</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>133</index><block>13</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>137</index><block>13</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>139</index><block>13</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>142</index><block>13</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>144</index><block>13</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>154</index><block>13</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>162</index><block>14</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test085</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>165</index><block>14</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test085</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>180</index><block>15</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>187</index><block>15</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>194</index><block>15</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test083</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>201</index><block>15</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 3 with 4</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>76</index><block>13</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>87</index><block>13</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>88</index><block>13</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>89</index><block>13</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>105</index><block>13</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>116</index><block>13</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>117</index><block>13</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>118</index><block>13</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>119</index><block>13</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test083</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>135</index><block>13</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>146</index><block>13</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>147</index><block>13</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test086</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>148</index><block>13</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>149</index><block>13</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test086</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>8</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>9</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>10</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>11</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>156</index><block>13</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>40</index><block>12</block><killingTest/><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>48</index><block>12</block><killingTest/><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>57</index><block>13</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test033</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::orthogonalizeMatrix</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>167</index><block>14</block><killingTest/><description>removed call to java/lang/Double::valueOf</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>174</index><block>15</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::mat2quat</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>10</index><block>8</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>16</index><block>9</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>22</index><block>10</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>28</index><block>11</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test087</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>10</index><block>8</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>16</index><block>9</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>22</index><block>10</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>28</index><block>11</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>156</index><block>13</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test085</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>156</index><block>13</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>182</index><block>15</block><killingTest/><description>Removed assignment to member variable q0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>189</index><block>15</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Removed assignment to member variable q1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>196</index><block>15</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test083</killingTest><description>Removed assignment to member variable q2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[DD)V</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>203</index><block>15</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Removed assignment to member variable q3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>6</index><block>182</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test032</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::composeInverse with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>182</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test032</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::composeInverse</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>7</index><block>182</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test032</killingTest><description>replaced return value with null for org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>182</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test032</killingTest><description>mutated return of Object value for org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>6</index><block>182</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test032</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::composeInverse with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>115</index><block>175</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test048</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>43</index><block>175</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test065</killingTest><description>Substituted 2.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>67</index><block>175</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test061</killingTest><description>Substituted 2.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>91</index><block>175</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test074</killingTest><description>Substituted 2.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>37</index><block>175</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test074</killingTest><description>removed negation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>175</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test048</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>175</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test066</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><block>175</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>175</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test048</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>175</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test068</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>47</index><block>175</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test066</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>51</index><block>175</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test048</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>55</index><block>175</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test066</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>56</index><block>175</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test030</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>57</index><block>175</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test068</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>58</index><block>175</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test048</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>62</index><block>175</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test048</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>63</index><block>175</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test068</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>64</index><block>175</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test048</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>66</index><block>175</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test097</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>71</index><block>175</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>75</index><block>175</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test048</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>79</index><block>175</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test048</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>80</index><block>175</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test030</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='31'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>81</index><block>175</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test060</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>82</index><block>175</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>86</index><block>175</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test048</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>87</index><block>175</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test030</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>88</index><block>175</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>90</index><block>175</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>95</index><block>175</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test030</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>99</index><block>175</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test092</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>103</index><block>175</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test048</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>104</index><block>175</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test030</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>105</index><block>175</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test074</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>106</index><block>175</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test048</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>110</index><block>175</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test048</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>111</index><block>175</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>112</index><block>175</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test048</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='22'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>114</index><block>175</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test030</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>175</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test066</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>175</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>175</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test069</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>116</index><block>175</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test048</killingTest><description>replaced return value with null for org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>116</index><block>175</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test048</killingTest><description>mutated return of Object value for org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>176</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>10</index><block>176</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>16</index><block>176</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test097</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>45</index><block>176</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>46</index><block>176</block><killingTest/><description>Substituted 2.0 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>74</index><block>176</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>75</index><block>176</block><killingTest/><description>Substituted 2.0 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>103</index><block>176</block><killingTest/><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>104</index><block>176</block><killingTest/><description>Substituted 2.0 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>40</index><block>176</block><killingTest/><description>removed negation</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>176</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>176</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>29</index><block>176</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>176</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>34</index><block>176</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>50</index><block>176</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>54</index><block>176</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>58</index><block>176</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>59</index><block>176</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>60</index><block>176</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>61</index><block>176</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>65</index><block>176</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>66</index><block>176</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>67</index><block>176</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>69</index><block>176</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>79</index><block>176</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>83</index><block>176</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>87</index><block>176</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>88</index><block>176</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>89</index><block>176</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>90</index><block>176</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>94</index><block>176</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>95</index><block>176</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>96</index><block>176</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>98</index><block>176</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>108</index><block>176</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>112</index><block>176</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>116</index><block>176</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>117</index><block>176</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>118</index><block>176</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>119</index><block>176</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>123</index><block>176</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>124</index><block>176</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>125</index><block>176</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyInverseTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>127</index><block>176</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>6</index><block>177</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test094</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::compose with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>177</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test094</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::compose</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>7</index><block>177</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test094</killingTest><description>replaced return value with null for org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>177</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test094</killingTest><description>mutated return of Object value for org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>6</index><block>177</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test094</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::compose with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>115</index><block>173</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test048</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='30'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>37</index><block>173</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test060</killingTest><description>Substituted 2.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='30'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>63</index><block>173</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test060</killingTest><description>Substituted 2.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='40'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>89</index><block>173</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test071</killingTest><description>Substituted 2.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>173</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test048</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>173</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test048</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='40'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><block>173</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test071</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>173</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='30'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>173</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test060</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>43</index><block>173</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>47</index><block>173</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test092</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>51</index><block>173</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test048</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='40'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>52</index><block>173</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test071</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='30'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>53</index><block>173</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test060</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>54</index><block>173</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test048</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>58</index><block>173</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test048</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='30'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>59</index><block>173</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test060</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>60</index><block>173</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test048</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>62</index><block>173</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='56'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>69</index><block>173</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>73</index><block>173</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test092</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>77</index><block>173</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test092</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='30'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>78</index><block>173</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test060</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='30'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>79</index><block>173</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test060</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='30'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>80</index><block>173</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test060</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>84</index><block>173</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test092</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='30'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>85</index><block>173</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test060</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='30'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>86</index><block>173</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test060</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='56'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>88</index><block>173</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='47'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>95</index><block>173</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test022</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>99</index><block>173</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test048</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>103</index><block>173</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test048</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='42'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>104</index><block>173</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test020</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='42'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>105</index><block>173</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test020</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>106</index><block>173</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>110</index><block>173</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test048</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>111</index><block>173</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>112</index><block>173</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='47'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>114</index><block>173</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test022</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>173</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='40'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>173</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test071</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='30'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>173</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test060</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>116</index><block>173</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test048</killingTest><description>replaced return value with null for org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>1119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>116</index><block>173</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test048</killingTest><description>mutated return of Object value for org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>174</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>10</index><block>174</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>16</index><block>174</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test092</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>39</index><block>174</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>40</index><block>174</block><killingTest/><description>Substituted 2.0 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>70</index><block>174</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>71</index><block>174</block><killingTest/><description>Substituted 2.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>101</index><block>174</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test092</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>102</index><block>174</block><killingTest/><description>Substituted 2.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>174</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test092</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>174</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test092</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>29</index><block>174</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>174</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test092</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>34</index><block>174</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>46</index><block>174</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>50</index><block>174</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test092</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>54</index><block>174</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test092</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>55</index><block>174</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>56</index><block>174</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>57</index><block>174</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test092</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>61</index><block>174</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test092</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>62</index><block>174</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>63</index><block>174</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test092</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>65</index><block>174</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>77</index><block>174</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>81</index><block>174</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test092</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>85</index><block>174</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test092</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>86</index><block>174</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>87</index><block>174</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>88</index><block>174</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test092</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>92</index><block>174</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test092</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>93</index><block>174</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>94</index><block>174</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test092</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>96</index><block>174</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>108</index><block>174</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>112</index><block>174</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test092</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>116</index><block>174</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test092</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>117</index><block>174</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>118</index><block>174</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>119</index><block>174</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test092</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>123</index><block>174</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test092</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>124</index><block>174</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>125</index><block>174</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test092</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>applyTo</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>1140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>127</index><block>174</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>compose</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>8</index><block>179</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test094</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::composeInternal with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>compose</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>13</index><block>180</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test019</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::composeInternal with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>compose</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>178</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test030</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>compose</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><block>179</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test094</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::composeInternal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>compose</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>180</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test019</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::composeInternal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>compose</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>15</index><block>180</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test094</killingTest><description>replaced return value with null for org/apache/commons/math3/geometry/euclidean/threed/Rotation::compose</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>compose</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>178</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test030</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>compose</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>178</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test083</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>compose</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>180</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test094</killingTest><description>mutated return of Object value for org/apache/commons/math3/geometry/euclidean/threed/Rotation::compose to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>compose</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>8</index><block>179</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test094</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::composeInternal with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>compose</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>13</index><block>180</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test083</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::composeInternal with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>98</index><block>181</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test094</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>97</index><block>181</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test094</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>181</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test099</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>181</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test099</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>181</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test099</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>181</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test094</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>181</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test094</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><block>181</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test094</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>181</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test094</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>181</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test099</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>181</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test099</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>38</index><block>181</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test094</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>43</index><block>181</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test094</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>48</index><block>181</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test099</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>49</index><block>181</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test094</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>50</index><block>181</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test099</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>55</index><block>181</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test099</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>60</index><block>181</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test099</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>61</index><block>181</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test094</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>66</index><block>181</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test099</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>71</index><block>181</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test094</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>72</index><block>181</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test094</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>73</index><block>181</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test099</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>78</index><block>181</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test099</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>83</index><block>181</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test094</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>84</index><block>181</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test094</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>89</index><block>181</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test099</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>94</index><block>181</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test099</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>95</index><block>181</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test094</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>96</index><block>181</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test100</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>99</index><block>181</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test094</killingTest><description>replaced return value with null for org/apache/commons/math3/geometry/euclidean/threed/Rotation::composeInternal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>99</index><block>181</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test094</killingTest><description>mutated return of Object value for org/apache/commons/math3/geometry/euclidean/threed/Rotation::composeInternal to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInverse</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>8</index><block>184</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test032</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::composeInverseInternal with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInverse</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>14</index><block>185</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test096</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::composeInternal with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInverse</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>183</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test031</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInverse</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><block>184</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test032</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::composeInverseInternal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInverse</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>185</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test096</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::revert</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInverse</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>185</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test096</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::composeInternal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInverse</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>16</index><block>185</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test032</killingTest><description>replaced return value with null for org/apache/commons/math3/geometry/euclidean/threed/Rotation::composeInverse</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInverse</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>183</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test031</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInverse</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>183</block><killingTest/><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInverse</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>185</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test032</killingTest><description>mutated return of Object value for org/apache/commons/math3/geometry/euclidean/threed/Rotation::composeInverse to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInverse</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>8</index><block>184</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test032</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::composeInverseInternal with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInverse</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>13</index><block>185</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test096</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::revert with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInverse</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>14</index><block>185</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test096</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::composeInternal with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInverseInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>102</index><block>186</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test032</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::&#60;init&#62;</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInverseInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>101</index><block>186</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInverseInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>7</index><block>186</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test031</killingTest><description>removed negation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInverseInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>31</index><block>186</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test031</killingTest><description>removed negation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInverseInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>55</index><block>186</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test032</killingTest><description>removed negation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInverseInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>79</index><block>186</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test031</killingTest><description>removed negation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInverseInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>186</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test031</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInverseInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>186</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test032</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInverseInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>186</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test032</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInverseInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>186</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test031</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInverseInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><block>186</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test032</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInverseInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>186</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test031</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInverseInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>186</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test031</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInverseInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>34</index><block>186</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test031</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInverseInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>186</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test032</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInverseInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><block>186</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test031</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInverseInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>45</index><block>186</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test032</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInverseInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>50</index><block>186</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test032</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInverseInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>51</index><block>186</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test031</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInverseInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>52</index><block>186</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test031</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInverseInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>58</index><block>186</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test031</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInverseInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>63</index><block>186</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test032</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInverseInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>64</index><block>186</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test031</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInverseInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>69</index><block>186</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test032</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInverseInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>74</index><block>186</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test032</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInverseInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>75</index><block>186</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test031</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInverseInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>76</index><block>186</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test031</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInverseInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>82</index><block>186</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test031</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInverseInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>87</index><block>186</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test032</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInverseInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>88</index><block>186</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test031</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInverseInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>93</index><block>186</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test032</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInverseInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>98</index><block>186</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test032</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInverseInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>99</index><block>186</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test031</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInverseInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>100</index><block>186</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test015</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInverseInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>103</index><block>186</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test032</killingTest><description>replaced return value with null for org/apache/commons/math3/geometry/euclidean/threed/Rotation::composeInverseInternal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>composeInverseInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>1290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>103</index><block>186</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test032</killingTest><description>mutated return of Object value for org/apache/commons/math3/geometry/euclidean/threed/Rotation::composeInverseInternal to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)D</methodDescription><lineNumber>1421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>5</index><block>192</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test014</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::composeInverseInternal with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)D</methodDescription><lineNumber>1421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>192</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test093</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::composeInverseInternal</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)D</methodDescription><lineNumber>1421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>192</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test015</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngle</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)D</methodDescription><lineNumber>1421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>7</index><block>192</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test015</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/geometry/euclidean/threed/Rotation::distance</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)D</methodDescription><lineNumber>1421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>192</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test014</killingTest><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/geometry/euclidean/threed/Rotation::distance</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>distance</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)D</methodDescription><lineNumber>1421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>5</index><block>192</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test014</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::composeInverseInternal with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngle</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>561</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>33</index><block>48</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test015</killingTest><description>replaced call to org/apache/commons/math3/util/FastMath::sqrt with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngle</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>561</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>34</index><block>48</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test015</killingTest><description>replaced call to org/apache/commons/math3/util/FastMath::asin with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngle</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>50</index><block>50</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test079</killingTest><description>replaced call to org/apache/commons/math3/util/FastMath::acos with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngle</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>565</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>58</index><block>51</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::acos with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngle</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>560</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>7</index><block>46</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngle</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>560</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>12</index><block>47</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngle</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>562</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>43</index><block>49</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngle</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>560</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>46</block><killingTest/><description>Substituted -0.1 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngle</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>560</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>10</index><block>47</block><killingTest/><description>Substituted 0.1 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngle</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>561</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>48</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test015</killingTest><description>Substituted 2.0 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngle</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>562</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>41</index><block>49</block><killingTest/><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngle</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>46</index><block>50</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test079</killingTest><description>Substituted 2.0 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngle</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>565</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>55</index><block>51</block><killingTest/><description>Substituted 2.0 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngle</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>49</index><block>50</block><killingTest/><description>removed negation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngle</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>561</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>48</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test013</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngle</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>561</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>48</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test013</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngle</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>561</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><block>48</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test015</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngle</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>561</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>48</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test013</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngle</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>561</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>48</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test015</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngle</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>561</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>48</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test013</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngle</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>51</index><block>50</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test079</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngle</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>565</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>59</index><block>51</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngle</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>560</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>46</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngle</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>560</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>47</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngle</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>562</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>49</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngle</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>561</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>33</index><block>48</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test015</killingTest><description>removed call to org/apache/commons/math3/util/FastMath::sqrt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngle</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>561</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>34</index><block>48</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test015</killingTest><description>removed call to org/apache/commons/math3/util/FastMath::asin</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngle</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>50</index><block>50</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test079</killingTest><description>removed call to org/apache/commons/math3/util/FastMath::acos</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngle</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>565</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>58</index><block>51</block><killingTest/><description>removed call to org/apache/commons/math3/util/FastMath::acos</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngle</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>561</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>36</index><block>48</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test015</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngle</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngle</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>52</index><block>50</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test079</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngle</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngle</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>565</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>60</index><block>51</block><killingTest/><description>replaced double return with 0.0d for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngle</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngle</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>560</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>7</index><block>46</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngle</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>560</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>12</index><block>47</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngle</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>562</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>43</index><block>49</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngle</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>560</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>7</index><block>46</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngle</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>560</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>12</index><block>47</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngle</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>562</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>43</index><block>49</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngle</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>561</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>36</index><block>48</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test013</killingTest><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngle</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngle</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>52</index><block>50</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test079</killingTest><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngle</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngle</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>565</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>60</index><block>51</block><killingTest/><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngle</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;)[D</methodDescription><lineNumber>585</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>52</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test069</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;)[D</methodDescription><lineNumber>585</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>7</index><block>52</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>replaced return value with null for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;)[D</methodDescription><lineNumber>585</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>52</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>mutated return of Object value for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>636</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>15</index><block>55</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test095</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>637</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>21</index><block>55</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test078</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>641</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>53</index><block>58</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::atan2 with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>641</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>59</index><block>58</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::asin with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>641</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>68</index><block>58</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::atan2 with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>654</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>80</index><block>60</block><killingTest/><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>655</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>86</index><block>60</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test076</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>659</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>117</index><block>63</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::atan2 with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>659</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>123</index><block>63</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::asin with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>659</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>132</index><block>63</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::atan2 with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>672</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>144</index><block>65</block><killingTest/><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>673</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>150</index><block>65</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test074</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>181</index><block>68</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::atan2 with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>187</index><block>68</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::asin with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>196</index><block>68</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::atan2 with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>690</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>208</index><block>70</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>691</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>214</index><block>70</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>695</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>246</index><block>73</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>replaced call to org/apache/commons/math3/util/FastMath::atan2 with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>695</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>252</index><block>73</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::asin with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>695</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>261</index><block>73</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>replaced call to org/apache/commons/math3/util/FastMath::atan2 with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>708</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>273</index><block>75</block><killingTest/><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>709</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>279</index><block>75</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test098</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>311</index><block>78</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test092</killingTest><description>replaced call to org/apache/commons/math3/util/FastMath::atan2 with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>317</index><block>78</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::asin with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>326</index><block>78</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test092</killingTest><description>replaced call to org/apache/commons/math3/util/FastMath::atan2 with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>726</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>338</index><block>80</block><killingTest/><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>727</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>344</index><block>80</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test069</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>731</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>375</index><block>83</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::atan2 with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>731</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>381</index><block>83</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::asin with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>731</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>390</index><block>83</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::atan2 with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>744</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>402</index><block>85</block><killingTest/><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>745</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>408</index><block>85</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test067</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>749</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>440</index><block>88</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::atan2 with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>749</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>446</index><block>88</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::acos with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>749</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>454</index><block>88</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::atan2 with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>762</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>466</index><block>90</block><killingTest/><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>763</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>472</index><block>90</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test063</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>767</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>503</index><block>93</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::atan2 with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>767</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>509</index><block>93</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::acos with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>767</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>518</index><block>93</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::atan2 with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>780</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>530</index><block>95</block><killingTest/><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>781</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>536</index><block>95</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test062</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>785</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>567</index><block>98</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::atan2 with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>785</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>573</index><block>98</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::acos with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>785</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>582</index><block>98</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::atan2 with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>798</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>594</index><block>100</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test071</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>799</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>600</index><block>100</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test071</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>803</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>632</index><block>103</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test071</killingTest><description>replaced call to org/apache/commons/math3/util/FastMath::atan2 with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>803</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>638</index><block>103</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test071</killingTest><description>replaced call to org/apache/commons/math3/util/FastMath::acos with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>803</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>646</index><block>103</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test071</killingTest><description>replaced call to org/apache/commons/math3/util/FastMath::atan2 with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>816</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>658</index><block>105</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test058</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>817</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>664</index><block>105</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test058</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>821</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>696</index><block>108</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test058</killingTest><description>replaced call to org/apache/commons/math3/util/FastMath::atan2 with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>821</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>702</index><block>108</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test058</killingTest><description>replaced call to org/apache/commons/math3/util/FastMath::acos with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>821</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>710</index><block>108</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test058</killingTest><description>replaced call to org/apache/commons/math3/util/FastMath::atan2 with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>834</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>717</index><block>109</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test060</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>835</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>723</index><block>109</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test060</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>839</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>754</index><block>112</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test060</killingTest><description>replaced call to org/apache/commons/math3/util/FastMath::atan2 with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>839</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>760</index><block>112</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test060</killingTest><description>replaced call to org/apache/commons/math3/util/FastMath::acos with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>839</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>769</index><block>112</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test060</killingTest><description>replaced call to org/apache/commons/math3/util/FastMath::atan2 with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>854</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>781</index><block>114</block><killingTest/><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>855</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>787</index><block>114</block><killingTest/><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>859</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>819</index><block>117</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::atan2 with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>859</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>825</index><block>117</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::asin with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>859</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>834</index><block>117</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::atan2 with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>872</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>846</index><block>119</block><killingTest/><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>873</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>852</index><block>119</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test052</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>877</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>883</index><block>122</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::atan2 with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>877</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>889</index><block>122</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::asin with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>877</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>898</index><block>122</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::atan2 with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>890</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>910</index><block>124</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test051</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>891</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>916</index><block>124</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test051</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>895</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>947</index><block>127</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::atan2 with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>895</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>953</index><block>127</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::asin with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>895</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>962</index><block>127</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::atan2 with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>908</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>974</index><block>129</block><killingTest/><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>909</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>980</index><block>129</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test049</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>913</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>1012</index><block>132</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test050</killingTest><description>replaced call to org/apache/commons/math3/util/FastMath::atan2 with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>913</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>1018</index><block>132</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::asin with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>913</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>1027</index><block>132</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test050</killingTest><description>replaced call to org/apache/commons/math3/util/FastMath::atan2 with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>926</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>1039</index><block>134</block><killingTest/><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>927</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>1045</index><block>134</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test047</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>931</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>1077</index><block>137</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test048</killingTest><description>replaced call to org/apache/commons/math3/util/FastMath::atan2 with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>931</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>1083</index><block>137</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::asin with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>931</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>1092</index><block>137</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test048</killingTest><description>replaced call to org/apache/commons/math3/util/FastMath::atan2 with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>944</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>1104</index><block>139</block><killingTest/><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>945</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>1110</index><block>139</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test046</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>949</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>1141</index><block>142</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::atan2 with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>949</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>1147</index><block>142</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::asin with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>949</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>1156</index><block>142</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::atan2 with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>962</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>1168</index><block>144</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test045</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>963</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>1174</index><block>144</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test045</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>967</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>1206</index><block>147</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::atan2 with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>967</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>1212</index><block>147</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::acos with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>967</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>1220</index><block>147</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::atan2 with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>980</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>1232</index><block>149</block><killingTest/><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>981</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>1238</index><block>149</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test097</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>985</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>1269</index><block>152</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::atan2 with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>985</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>1275</index><block>152</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::acos with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>985</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>1284</index><block>152</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::atan2 with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>998</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>1296</index><block>154</block><killingTest/><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>999</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>1302</index><block>154</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test040</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1003</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>1333</index><block>157</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::atan2 with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1003</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>1339</index><block>157</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::acos with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1003</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>1348</index><block>157</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::atan2 with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1016</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>1360</index><block>159</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test043</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1017</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>1366</index><block>159</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test043</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1021</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>1398</index><block>162</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test043</killingTest><description>replaced call to org/apache/commons/math3/util/FastMath::atan2 with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1021</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>1404</index><block>162</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test043</killingTest><description>replaced call to org/apache/commons/math3/util/FastMath::acos with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1021</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>1412</index><block>162</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test043</killingTest><description>replaced call to org/apache/commons/math3/util/FastMath::atan2 with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1034</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>1424</index><block>164</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test036</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1035</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>1430</index><block>164</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test036</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1039</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>1462</index><block>167</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test036</killingTest><description>replaced call to org/apache/commons/math3/util/FastMath::atan2 with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1039</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>1468</index><block>167</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test036</killingTest><description>replaced call to org/apache/commons/math3/util/FastMath::acos with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1039</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>1476</index><block>167</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test036</killingTest><description>replaced call to org/apache/commons/math3/util/FastMath::atan2 with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1052</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>1483</index><block>168</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test038</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1053</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>1489</index><block>168</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test038</killingTest><description>replaced call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1057</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>1520</index><block>171</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test038</killingTest><description>replaced call to org/apache/commons/math3/util/FastMath::atan2 with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1057</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>1526</index><block>171</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test038</killingTest><description>replaced call to org/apache/commons/math3/util/FastMath::acos with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1057</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>1535</index><block>171</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test038</killingTest><description>replaced call to org/apache/commons/math3/util/FastMath::atan2 with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>638</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>29</index><block>55</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>638</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>34</index><block>56</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>656</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>94</index><block>60</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>656</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>99</index><block>61</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>674</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>158</index><block>65</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>674</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>163</index><block>66</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>692</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>222</index><block>70</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>692</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>227</index><block>71</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>710</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>287</index><block>75</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>710</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>292</index><block>76</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>728</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>352</index><block>80</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>728</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>357</index><block>81</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>746</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>416</index><block>85</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>746</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>421</index><block>86</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>764</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>480</index><block>90</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>764</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>485</index><block>91</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>782</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>544</index><block>95</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>782</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>549</index><block>96</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>800</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>608</index><block>100</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>800</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>613</index><block>101</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>818</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>672</index><block>105</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>818</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>677</index><block>106</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>836</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>731</index><block>109</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>836</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>736</index><block>110</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>856</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>795</index><block>114</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>856</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>800</index><block>115</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>874</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>860</index><block>119</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>874</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>865</index><block>120</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>892</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>924</index><block>124</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>892</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>929</index><block>125</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>910</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>988</index><block>129</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>910</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>993</index><block>130</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>928</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>1053</index><block>134</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>928</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>1058</index><block>135</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>946</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>1118</index><block>139</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>946</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>1123</index><block>140</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>964</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>1182</index><block>144</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>964</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>1187</index><block>145</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>982</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>1246</index><block>149</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>982</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>1251</index><block>150</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1000</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>1310</index><block>154</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1000</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>1315</index><block>155</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1018</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>1374</index><block>159</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1018</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>1379</index><block>160</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1036</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>1438</index><block>164</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1036</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>1443</index><block>165</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1054</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>1497</index><block>168</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1054</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>1502</index><block>169</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>639</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>40</index><block>57</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test078</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/CardanEulerSingularityException::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>657</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>105</index><block>62</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test076</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/CardanEulerSingularityException::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>675</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>169</index><block>67</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test074</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/CardanEulerSingularityException::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>693</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>233</index><block>72</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test072</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/CardanEulerSingularityException::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>711</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>298</index><block>77</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test098</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/CardanEulerSingularityException::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>729</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>363</index><block>82</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test069</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/CardanEulerSingularityException::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>747</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>427</index><block>87</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test066</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/CardanEulerSingularityException::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>765</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>491</index><block>92</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test064</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/CardanEulerSingularityException::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>783</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>555</index><block>97</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test061</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/CardanEulerSingularityException::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>801</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>619</index><block>102</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test059</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/CardanEulerSingularityException::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>819</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>683</index><block>107</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test057</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/CardanEulerSingularityException::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>837</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>742</index><block>111</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test055</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/CardanEulerSingularityException::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>857</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>806</index><block>116</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/CardanEulerSingularityException::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>875</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>871</index><block>121</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test052</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/CardanEulerSingularityException::&#60;init&#62;</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>893</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>935</index><block>126</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/CardanEulerSingularityException::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>911</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>999</index><block>131</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test049</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/CardanEulerSingularityException::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>929</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>1064</index><block>136</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test047</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/CardanEulerSingularityException::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>947</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>1129</index><block>141</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test046</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/CardanEulerSingularityException::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>965</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>1193</index><block>146</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test044</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/CardanEulerSingularityException::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>983</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>1257</index><block>151</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test042</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/CardanEulerSingularityException::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1001</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>1321</index><block>156</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test039</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/CardanEulerSingularityException::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1019</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>1385</index><block>161</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test037</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/CardanEulerSingularityException::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1037</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>1449</index><block>166</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test035</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/CardanEulerSingularityException::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1055</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>1508</index><block>170</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test034</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/CardanEulerSingularityException::&#60;init&#62;</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>638</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>27</index><block>55</block><killingTest/><description>Substituted -0.9999999999 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>638</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>32</index><block>56</block><killingTest/><description>Substituted 0.9999999999 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>639</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>39</index><block>57</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>641</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>44</index><block>58</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test095</killingTest><description>Substituted 3 with 4</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>641</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>47</index><block>58</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test095</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>641</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>56</index><block>58</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test095</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>641</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>62</index><block>58</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test095</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>656</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>92</index><block>60</block><killingTest/><description>Substituted -0.9999999999 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>656</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>97</index><block>61</block><killingTest/><description>Substituted 0.9999999999 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>657</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>104</index><block>62</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>659</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>109</index><block>63</block><killingTest/><description>Substituted 3 with 4</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>659</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>112</index><block>63</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>659</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>120</index><block>63</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>659</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>127</index><block>63</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test077</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>674</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>156</index><block>65</block><killingTest/><description>Substituted -0.9999999999 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>674</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>161</index><block>66</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test074</killingTest><description>Substituted 0.9999999999 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>675</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>168</index><block>67</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>173</index><block>68</block><killingTest/><description>Substituted 3 with 4</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>176</index><block>68</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>184</index><block>68</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>191</index><block>68</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test087</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>692</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>220</index><block>70</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>Substituted -0.9999999999 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>692</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>225</index><block>71</block><killingTest/><description>Substituted 0.9999999999 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>693</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>232</index><block>72</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>695</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>237</index><block>73</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>Substituted 3 with 4</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>695</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>240</index><block>73</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>695</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>249</index><block>73</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>695</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>255</index><block>73</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>710</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>285</index><block>75</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test092</killingTest><description>Substituted -0.9999999999 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>710</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>290</index><block>76</block><killingTest/><description>Substituted 0.9999999999 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>711</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>297</index><block>77</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>302</index><block>78</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test092</killingTest><description>Substituted 3 with 4</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>305</index><block>78</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>314</index><block>78</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>320</index><block>78</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test092</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>728</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>350</index><block>80</block><killingTest/><description>Substituted -0.9999999999 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>728</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>355</index><block>81</block><killingTest/><description>Substituted 0.9999999999 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>729</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>362</index><block>82</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>731</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>367</index><block>83</block><killingTest/><description>Substituted 3 with 4</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>731</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>370</index><block>83</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>731</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>378</index><block>83</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>731</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>385</index><block>83</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test070</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>746</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>414</index><block>85</block><killingTest/><description>Substituted -0.9999999999 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>746</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>419</index><block>86</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test065</killingTest><description>Substituted 0.9999999999 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>747</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>426</index><block>87</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>749</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>431</index><block>88</block><killingTest/><description>Substituted 3 with 4</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>749</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>434</index><block>88</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>749</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>443</index><block>88</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>749</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>449</index><block>88</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test067</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>764</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>478</index><block>90</block><killingTest/><description>Substituted -0.9999999999 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>764</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>483</index><block>91</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test064</killingTest><description>Substituted 0.9999999999 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>765</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>490</index><block>92</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>767</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>495</index><block>93</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test063</killingTest><description>Substituted 3 with 4</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>767</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>498</index><block>93</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>767</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>506</index><block>93</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>767</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>512</index><block>93</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test063</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>782</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>542</index><block>95</block><killingTest/><description>Substituted -0.9999999999 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>782</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>547</index><block>96</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test061</killingTest><description>Substituted 0.9999999999 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>783</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>554</index><block>97</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>785</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>559</index><block>98</block><killingTest/><description>Substituted 3 with 4</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>785</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>562</index><block>98</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>785</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>570</index><block>98</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>785</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>576</index><block>98</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test062</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>800</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>606</index><block>100</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test071</killingTest><description>Substituted -0.9999999999 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>800</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>611</index><block>101</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test059</killingTest><description>Substituted 0.9999999999 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>801</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>618</index><block>102</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>803</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>623</index><block>103</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test071</killingTest><description>Substituted 3 with 4</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>803</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>626</index><block>103</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test071</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>803</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>635</index><block>103</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test071</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>803</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>641</index><block>103</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test071</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>818</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>670</index><block>105</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test058</killingTest><description>Substituted -0.9999999999 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>818</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>675</index><block>106</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test056</killingTest><description>Substituted 0.9999999999 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>819</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>682</index><block>107</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>821</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>687</index><block>108</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test058</killingTest><description>Substituted 3 with 4</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>821</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>690</index><block>108</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test058</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>821</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>699</index><block>108</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test058</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>821</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>705</index><block>108</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test058</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>836</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>729</index><block>109</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test060</killingTest><description>Substituted -0.9999999999 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>836</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>734</index><block>110</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test055</killingTest><description>Substituted 0.9999999999 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>837</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>741</index><block>111</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>839</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>746</index><block>112</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test060</killingTest><description>Substituted 3 with 4</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>839</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>749</index><block>112</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test060</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>839</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>757</index><block>112</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test060</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>839</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>763</index><block>112</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test060</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>856</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>793</index><block>114</block><killingTest/><description>Substituted -0.9999999999 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>856</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>798</index><block>115</block><killingTest/><description>Substituted 0.9999999999 with 1.0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>857</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>805</index><block>116</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>859</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>810</index><block>117</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test054</killingTest><description>Substituted 3 with 4</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>859</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>813</index><block>117</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>859</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>822</index><block>117</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>859</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>828</index><block>117</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test054</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>874</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>858</index><block>119</block><killingTest/><description>Substituted -0.9999999999 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>874</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>863</index><block>120</block><killingTest/><description>Substituted 0.9999999999 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>875</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>870</index><block>121</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>877</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>875</index><block>122</block><killingTest/><description>Substituted 3 with 4</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>877</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>878</index><block>122</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>877</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>886</index><block>122</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>877</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>893</index><block>122</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test053</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>892</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>922</index><block>124</block><killingTest/><description>Substituted -0.9999999999 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>892</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>927</index><block>125</block><killingTest/><description>Substituted 0.9999999999 with 1.0</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>893</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>934</index><block>126</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>895</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>939</index><block>127</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test051</killingTest><description>Substituted 3 with 4</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>895</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>942</index><block>127</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test051</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>895</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>950</index><block>127</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test051</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>895</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>957</index><block>127</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test051</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>910</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>986</index><block>129</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test050</killingTest><description>Substituted -0.9999999999 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>910</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>991</index><block>130</block><killingTest/><description>Substituted 0.9999999999 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>911</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>998</index><block>131</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>913</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1003</index><block>132</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test050</killingTest><description>Substituted 3 with 4</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>913</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1006</index><block>132</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>913</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1015</index><block>132</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>913</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1021</index><block>132</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test050</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>928</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1051</index><block>134</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test048</killingTest><description>Substituted -0.9999999999 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>928</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1056</index><block>135</block><killingTest/><description>Substituted 0.9999999999 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>929</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1063</index><block>136</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>931</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1068</index><block>137</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test048</killingTest><description>Substituted 3 with 4</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>931</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1071</index><block>137</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>931</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1080</index><block>137</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>931</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1086</index><block>137</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test048</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>946</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1116</index><block>139</block><killingTest/><description>Substituted -0.9999999999 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>946</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1121</index><block>140</block><killingTest/><description>Substituted 0.9999999999 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>947</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1128</index><block>141</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>949</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1133</index><block>142</block><killingTest/><description>Substituted 3 with 4</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>949</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1136</index><block>142</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>949</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1144</index><block>142</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>949</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1151</index><block>142</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test088</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>964</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1180</index><block>144</block><killingTest/><description>Substituted -0.9999999999 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>964</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1185</index><block>145</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test044</killingTest><description>Substituted 0.9999999999 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>965</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1192</index><block>146</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>967</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1197</index><block>147</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test045</killingTest><description>Substituted 3 with 4</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>967</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1200</index><block>147</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test045</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>967</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1209</index><block>147</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test045</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>967</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1215</index><block>147</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test045</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>982</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1244</index><block>149</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test097</killingTest><description>Substituted -0.9999999999 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>982</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1249</index><block>150</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test041</killingTest><description>Substituted 0.9999999999 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>983</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1256</index><block>151</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>985</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1261</index><block>152</block><killingTest/><description>Substituted 3 with 4</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>985</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1264</index><block>152</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>985</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1272</index><block>152</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>985</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1278</index><block>152</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test097</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1000</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1308</index><block>154</block><killingTest/><description>Substituted -0.9999999999 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1000</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1313</index><block>155</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test039</killingTest><description>Substituted 0.9999999999 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1001</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1320</index><block>156</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1003</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1325</index><block>157</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test040</killingTest><description>Substituted 3 with 4</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1003</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1328</index><block>157</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1003</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1336</index><block>157</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1003</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1342</index><block>157</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test040</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1018</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1372</index><block>159</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test043</killingTest><description>Substituted -0.9999999999 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1018</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1377</index><block>160</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test037</killingTest><description>Substituted 0.9999999999 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1019</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1384</index><block>161</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1021</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1389</index><block>162</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test043</killingTest><description>Substituted 3 with 4</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1021</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1392</index><block>162</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test043</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1021</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1401</index><block>162</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test043</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1021</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1407</index><block>162</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test043</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1036</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1436</index><block>164</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test036</killingTest><description>Substituted -0.9999999999 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1036</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1441</index><block>165</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test035</killingTest><description>Substituted 0.9999999999 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1037</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1448</index><block>166</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1039</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1453</index><block>167</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test036</killingTest><description>Substituted 3 with 4</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1039</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1456</index><block>167</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test036</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1039</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1465</index><block>167</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test036</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1039</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1471</index><block>167</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test036</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1054</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1495</index><block>168</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test038</killingTest><description>Substituted -0.9999999999 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1054</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1500</index><block>169</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test034</killingTest><description>Substituted 0.9999999999 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1055</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1507</index><block>170</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1057</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1512</index><block>171</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test038</killingTest><description>Substituted 3 with 4</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1057</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1515</index><block>171</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test038</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1057</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1523</index><block>171</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test038</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1057</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>1529</index><block>171</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test038</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>641</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>50</index><block>58</block><killingTest/><description>removed negation</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>641</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>65</index><block>58</block><killingTest/><description>removed negation</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>659</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>124</index><block>63</block><killingTest/><description>removed negation</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>188</index><block>68</block><killingTest/><description>removed negation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>695</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>243</index><block>73</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>removed negation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>695</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>258</index><block>73</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>removed negation</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>308</index><block>78</block><killingTest/><description>removed negation</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>323</index><block>78</block><killingTest/><description>removed negation</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>731</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>382</index><block>83</block><killingTest/><description>removed negation</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>749</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>439</index><block>88</block><killingTest/><description>removed negation</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>767</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>517</index><block>93</block><killingTest/><description>removed negation</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>785</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>581</index><block>98</block><killingTest/><description>removed negation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>803</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>631</index><block>103</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test071</killingTest><description>removed negation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>821</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>695</index><block>108</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test058</killingTest><description>removed negation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>839</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>768</index><block>112</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test060</killingTest><description>removed negation</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>859</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>816</index><block>117</block><killingTest/><description>removed negation</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>859</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>831</index><block>117</block><killingTest/><description>removed negation</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>877</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>890</index><block>122</block><killingTest/><description>removed negation</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>895</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>954</index><block>127</block><killingTest/><description>removed negation</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>913</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>1009</index><block>132</block><killingTest/><description>removed negation</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>913</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>1024</index><block>132</block><killingTest/><description>removed negation</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>931</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>1074</index><block>137</block><killingTest/><description>removed negation</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>931</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>1089</index><block>137</block><killingTest/><description>removed negation</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>949</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>1148</index><block>142</block><killingTest/><description>removed negation</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>967</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>1205</index><block>147</block><killingTest/><description>removed negation</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>985</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>1283</index><block>152</block><killingTest/><description>removed negation</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1003</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>1347</index><block>157</block><killingTest/><description>removed negation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1021</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>1397</index><block>162</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test043</killingTest><description>removed negation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1039</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>1461</index><block>167</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test036</killingTest><description>removed negation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1057</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>1534</index><block>171</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test038</killingTest><description>removed negation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>628</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>53</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test074</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>629</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>54</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test066</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>638</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>55</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test095</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>638</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>56</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test078</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>647</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>75</index><block>59</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test066</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>656</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>94</index><block>60</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test077</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>656</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>99</index><block>61</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test076</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>665</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>139</index><block>64</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test066</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>674</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>158</index><block>65</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test075</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>674</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>163</index><block>66</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test074</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>683</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>203</index><block>69</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test066</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>692</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>222</index><block>70</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>692</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>227</index><block>71</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>701</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>268</index><block>74</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test066</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>710</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>287</index><block>75</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test092</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>710</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>292</index><block>76</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test092</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>719</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>333</index><block>79</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test066</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>728</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>352</index><block>80</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test069</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>728</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>357</index><block>81</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test068</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>737</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>397</index><block>84</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test060</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>746</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>416</index><block>85</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test066</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>746</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>421</index><block>86</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test065</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>755</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>461</index><block>89</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test060</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>764</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>480</index><block>90</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test063</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>764</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>485</index><block>91</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test064</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>773</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>525</index><block>94</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test057</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>782</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>544</index><block>95</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test062</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>782</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>549</index><block>96</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test061</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>791</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>589</index><block>99</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test057</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>800</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>608</index><block>100</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test071</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>800</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>613</index><block>101</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test059</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>809</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>653</index><block>104</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test060</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>818</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>672</index><block>105</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test057</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>818</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>677</index><block>106</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test056</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>836</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>731</index><block>109</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test060</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>836</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>736</index><block>110</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test060</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>847</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>776</index><block>113</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test039</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>856</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>795</index><block>114</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test054</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>856</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>800</index><block>115</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test054</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>865</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>841</index><block>118</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test039</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>874</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>860</index><block>119</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test053</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>874</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>865</index><block>120</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test053</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>883</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>905</index><block>123</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test039</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>892</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>924</index><block>124</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test051</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>892</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>929</index><block>125</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test051</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>901</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>969</index><block>128</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test039</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>910</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>988</index><block>129</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test050</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>910</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>993</index><block>130</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test049</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>919</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>1034</index><block>133</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test048</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>928</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>1053</index><block>134</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test048</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>928</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>1058</index><block>135</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test048</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>937</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>1099</index><block>138</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test039</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>946</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>1118</index><block>139</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test046</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>946</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>1123</index><block>140</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test088</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>955</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>1163</index><block>143</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test036</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>964</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>1182</index><block>144</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test045</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>964</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>1187</index><block>145</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test044</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>973</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>1227</index><block>148</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test036</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>982</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>1246</index><block>149</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test097</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>982</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>1251</index><block>150</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test097</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>991</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>1291</index><block>153</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test036</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1000</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>1310</index><block>154</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test040</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1000</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>1315</index><block>155</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test039</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1009</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>1355</index><block>158</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test036</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1018</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>1374</index><block>159</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test043</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1018</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>1379</index><block>160</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test037</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1027</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>1419</index><block>163</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test036</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1036</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>1438</index><block>164</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test036</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1036</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>1443</index><block>165</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test035</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1054</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>1497</index><block>168</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test038</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1054</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>1502</index><block>169</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test034</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>636</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>15</index><block>55</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test095</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>637</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>21</index><block>55</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test078</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>638</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>26</index><block>55</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>638</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>31</index><block>56</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test078</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>641</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>49</index><block>58</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>641</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>52</index><block>58</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>641</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>53</index><block>58</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test095</killingTest><description>removed call to org/apache/commons/math3/util/FastMath::atan2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>641</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>58</index><block>58</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test095</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>641</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>59</index><block>58</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test095</killingTest><description>removed call to org/apache/commons/math3/util/FastMath::asin</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>641</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>64</index><block>58</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>641</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>67</index><block>58</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>641</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>68</index><block>58</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test095</killingTest><description>removed call to org/apache/commons/math3/util/FastMath::atan2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>654</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>80</index><block>60</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test077</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>655</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>86</index><block>60</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test076</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>656</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>91</index><block>60</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>656</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>96</index><block>61</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test076</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>659</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>114</index><block>63</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>659</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>116</index><block>63</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>659</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>117</index><block>63</block><killingTest/><description>removed call to org/apache/commons/math3/util/FastMath::atan2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>659</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>122</index><block>63</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>659</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>123</index><block>63</block><killingTest/><description>removed call to org/apache/commons/math3/util/FastMath::asin</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>659</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>129</index><block>63</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>659</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>131</index><block>63</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>659</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>132</index><block>63</block><killingTest/><description>removed call to org/apache/commons/math3/util/FastMath::atan2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>672</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>144</index><block>65</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test087</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>673</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>150</index><block>65</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test074</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>674</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>155</index><block>65</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test075</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>674</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>160</index><block>66</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test074</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>178</index><block>68</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>180</index><block>68</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>181</index><block>68</block><killingTest/><description>removed call to org/apache/commons/math3/util/FastMath::atan2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>186</index><block>68</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>187</index><block>68</block><killingTest/><description>removed call to org/apache/commons/math3/util/FastMath::asin</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>193</index><block>68</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>195</index><block>68</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>196</index><block>68</block><killingTest/><description>removed call to org/apache/commons/math3/util/FastMath::atan2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>690</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>208</index><block>70</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>691</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>214</index><block>70</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>692</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>219</index><block>70</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test072</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>692</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>224</index><block>71</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>695</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>242</index><block>73</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>695</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>245</index><block>73</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>695</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>246</index><block>73</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>removed call to org/apache/commons/math3/util/FastMath::atan2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>695</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>251</index><block>73</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>695</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>252</index><block>73</block><killingTest/><description>removed call to org/apache/commons/math3/util/FastMath::asin</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>695</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>257</index><block>73</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>695</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>260</index><block>73</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>695</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>261</index><block>73</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>removed call to org/apache/commons/math3/util/FastMath::atan2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>708</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>273</index><block>75</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test092</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>709</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>279</index><block>75</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test092</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>710</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>284</index><block>75</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test098</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>710</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>289</index><block>76</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>307</index><block>78</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>310</index><block>78</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>311</index><block>78</block><killingTest/><description>removed call to org/apache/commons/math3/util/FastMath::atan2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>316</index><block>78</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>317</index><block>78</block><killingTest/><description>removed call to org/apache/commons/math3/util/FastMath::asin</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>322</index><block>78</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>325</index><block>78</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>326</index><block>78</block><killingTest/><description>removed call to org/apache/commons/math3/util/FastMath::atan2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>726</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>338</index><block>80</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test070</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>727</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>344</index><block>80</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test069</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>728</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>349</index><block>80</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test069</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>728</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>354</index><block>81</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test068</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>731</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>372</index><block>83</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>731</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>374</index><block>83</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>731</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>375</index><block>83</block><killingTest/><description>removed call to org/apache/commons/math3/util/FastMath::atan2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>731</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>380</index><block>83</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>731</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>381</index><block>83</block><killingTest/><description>removed call to org/apache/commons/math3/util/FastMath::asin</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>731</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>387</index><block>83</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>731</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>389</index><block>83</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>731</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>390</index><block>83</block><killingTest/><description>removed call to org/apache/commons/math3/util/FastMath::atan2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>744</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>402</index><block>85</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test067</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>745</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>408</index><block>85</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test066</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>746</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>413</index><block>85</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test066</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>746</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>418</index><block>86</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test065</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>749</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>436</index><block>88</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>749</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>438</index><block>88</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>749</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>440</index><block>88</block><killingTest/><description>removed call to org/apache/commons/math3/util/FastMath::atan2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>749</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>445</index><block>88</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>749</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>446</index><block>88</block><killingTest/><description>removed call to org/apache/commons/math3/util/FastMath::acos</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>749</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>451</index><block>88</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>749</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>453</index><block>88</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>749</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>454</index><block>88</block><killingTest/><description>removed call to org/apache/commons/math3/util/FastMath::atan2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>762</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>466</index><block>90</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test063</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>763</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>472</index><block>90</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test064</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>764</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>477</index><block>90</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>764</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>482</index><block>91</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test064</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>767</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>500</index><block>93</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>767</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>502</index><block>93</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>767</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>503</index><block>93</block><killingTest/><description>removed call to org/apache/commons/math3/util/FastMath::atan2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>767</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>508</index><block>93</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>767</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>509</index><block>93</block><killingTest/><description>removed call to org/apache/commons/math3/util/FastMath::acos</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>767</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>514</index><block>93</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>767</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>516</index><block>93</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>767</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>518</index><block>93</block><killingTest/><description>removed call to org/apache/commons/math3/util/FastMath::atan2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>780</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>530</index><block>95</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test062</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>781</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>536</index><block>95</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test061</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>782</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>541</index><block>95</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>782</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>546</index><block>96</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test061</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>785</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>564</index><block>98</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>785</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>566</index><block>98</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>785</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>567</index><block>98</block><killingTest/><description>removed call to org/apache/commons/math3/util/FastMath::atan2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>785</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>572</index><block>98</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>785</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>573</index><block>98</block><killingTest/><description>removed call to org/apache/commons/math3/util/FastMath::acos</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>785</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>578</index><block>98</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>785</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>580</index><block>98</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>785</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>582</index><block>98</block><killingTest/><description>removed call to org/apache/commons/math3/util/FastMath::atan2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>798</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>594</index><block>100</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test071</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>799</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>600</index><block>100</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test059</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>800</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>605</index><block>100</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>800</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>610</index><block>101</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test059</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>803</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>628</index><block>103</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test071</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>803</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>630</index><block>103</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test071</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>803</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>632</index><block>103</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test071</killingTest><description>removed call to org/apache/commons/math3/util/FastMath::atan2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>803</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>637</index><block>103</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test071</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>803</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>638</index><block>103</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test071</killingTest><description>removed call to org/apache/commons/math3/util/FastMath::acos</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>803</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>643</index><block>103</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test071</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>803</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>645</index><block>103</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test071</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>803</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>646</index><block>103</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test071</killingTest><description>removed call to org/apache/commons/math3/util/FastMath::atan2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>816</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>658</index><block>105</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test058</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>817</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>664</index><block>105</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test057</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>818</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>669</index><block>105</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test057</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>818</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>674</index><block>106</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test056</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>821</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>692</index><block>108</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test058</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>821</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>694</index><block>108</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test058</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>821</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>696</index><block>108</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test058</killingTest><description>removed call to org/apache/commons/math3/util/FastMath::atan2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>821</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>701</index><block>108</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test058</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>821</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>702</index><block>108</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test058</killingTest><description>removed call to org/apache/commons/math3/util/FastMath::acos</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>821</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>707</index><block>108</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test058</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>821</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>709</index><block>108</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test058</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>821</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>710</index><block>108</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test058</killingTest><description>removed call to org/apache/commons/math3/util/FastMath::atan2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>834</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>717</index><block>109</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test060</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>835</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>723</index><block>109</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test060</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>836</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>728</index><block>109</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>836</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>733</index><block>110</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test055</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>839</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>751</index><block>112</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test060</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>839</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>753</index><block>112</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test060</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>839</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>754</index><block>112</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test060</killingTest><description>removed call to org/apache/commons/math3/util/FastMath::atan2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>839</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>759</index><block>112</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test060</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>839</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>760</index><block>112</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test060</killingTest><description>removed call to org/apache/commons/math3/util/FastMath::acos</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>839</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>765</index><block>112</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test060</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>839</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>767</index><block>112</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test060</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>839</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>769</index><block>112</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test060</killingTest><description>removed call to org/apache/commons/math3/util/FastMath::atan2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>854</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>781</index><block>114</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test054</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>855</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>787</index><block>114</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test054</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>856</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>792</index><block>114</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>856</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>797</index><block>115</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>859</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>815</index><block>117</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>859</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>818</index><block>117</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>859</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>819</index><block>117</block><killingTest/><description>removed call to org/apache/commons/math3/util/FastMath::atan2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>859</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>824</index><block>117</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>859</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>825</index><block>117</block><killingTest/><description>removed call to org/apache/commons/math3/util/FastMath::asin</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>859</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>830</index><block>117</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>859</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>833</index><block>117</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>859</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>834</index><block>117</block><killingTest/><description>removed call to org/apache/commons/math3/util/FastMath::atan2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>872</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>846</index><block>119</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test053</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>873</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>852</index><block>119</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test053</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>874</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>857</index><block>119</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test052</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>874</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>862</index><block>120</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>877</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>880</index><block>122</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>877</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>882</index><block>122</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>877</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>883</index><block>122</block><killingTest/><description>removed call to org/apache/commons/math3/util/FastMath::atan2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>877</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>888</index><block>122</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>877</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>889</index><block>122</block><killingTest/><description>removed call to org/apache/commons/math3/util/FastMath::asin</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>877</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>895</index><block>122</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>877</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>897</index><block>122</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>877</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>898</index><block>122</block><killingTest/><description>removed call to org/apache/commons/math3/util/FastMath::atan2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>890</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>910</index><block>124</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test051</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>891</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>916</index><block>124</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test051</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>892</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>921</index><block>124</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>892</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>926</index><block>125</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>895</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>944</index><block>127</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>895</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>946</index><block>127</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>895</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>947</index><block>127</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test051</killingTest><description>removed call to org/apache/commons/math3/util/FastMath::atan2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>895</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>952</index><block>127</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test051</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>895</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>953</index><block>127</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test051</killingTest><description>removed call to org/apache/commons/math3/util/FastMath::asin</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>895</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>959</index><block>127</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>895</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>961</index><block>127</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>895</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>962</index><block>127</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test051</killingTest><description>removed call to org/apache/commons/math3/util/FastMath::atan2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>908</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>974</index><block>129</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test050</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>909</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>980</index><block>129</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test049</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>910</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>985</index><block>129</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>910</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>990</index><block>130</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test049</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>913</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1008</index><block>132</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>913</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1011</index><block>132</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>913</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1012</index><block>132</block><killingTest/><description>removed call to org/apache/commons/math3/util/FastMath::atan2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>913</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1017</index><block>132</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>913</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1018</index><block>132</block><killingTest/><description>removed call to org/apache/commons/math3/util/FastMath::asin</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>913</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1023</index><block>132</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>913</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1026</index><block>132</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>913</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1027</index><block>132</block><killingTest/><description>removed call to org/apache/commons/math3/util/FastMath::atan2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>926</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1039</index><block>134</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test048</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>927</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1045</index><block>134</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test048</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>928</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1050</index><block>134</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>928</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1055</index><block>135</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test047</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>931</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1073</index><block>137</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>931</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1076</index><block>137</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>931</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1077</index><block>137</block><killingTest/><description>removed call to org/apache/commons/math3/util/FastMath::atan2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>931</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1082</index><block>137</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>931</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1083</index><block>137</block><killingTest/><description>removed call to org/apache/commons/math3/util/FastMath::asin</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>931</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1088</index><block>137</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>931</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1091</index><block>137</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>931</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1092</index><block>137</block><killingTest/><description>removed call to org/apache/commons/math3/util/FastMath::atan2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>944</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1104</index><block>139</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test088</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>945</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1110</index><block>139</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test046</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>946</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1115</index><block>139</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test046</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>946</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1120</index><block>140</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>949</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1138</index><block>142</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>949</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1140</index><block>142</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>949</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1141</index><block>142</block><killingTest/><description>removed call to org/apache/commons/math3/util/FastMath::atan2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>949</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1146</index><block>142</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>949</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1147</index><block>142</block><killingTest/><description>removed call to org/apache/commons/math3/util/FastMath::asin</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>949</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1153</index><block>142</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>949</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1155</index><block>142</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>949</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1156</index><block>142</block><killingTest/><description>removed call to org/apache/commons/math3/util/FastMath::atan2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>962</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1168</index><block>144</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test045</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>963</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1174</index><block>144</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test044</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>964</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1179</index><block>144</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>964</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1184</index><block>145</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test044</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>967</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1202</index><block>147</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>967</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1204</index><block>147</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>967</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1206</index><block>147</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test045</killingTest><description>removed call to org/apache/commons/math3/util/FastMath::atan2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>967</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1211</index><block>147</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test045</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>967</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1212</index><block>147</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test045</killingTest><description>removed call to org/apache/commons/math3/util/FastMath::acos</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>967</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1217</index><block>147</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>967</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1219</index><block>147</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>967</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1220</index><block>147</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test045</killingTest><description>removed call to org/apache/commons/math3/util/FastMath::atan2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>980</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1232</index><block>149</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test097</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>981</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1238</index><block>149</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test097</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>982</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1243</index><block>149</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test042</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>982</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1248</index><block>150</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test041</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>985</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1266</index><block>152</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>985</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1268</index><block>152</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>985</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1269</index><block>152</block><killingTest/><description>removed call to org/apache/commons/math3/util/FastMath::atan2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>985</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1274</index><block>152</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>985</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1275</index><block>152</block><killingTest/><description>removed call to org/apache/commons/math3/util/FastMath::acos</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>985</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1280</index><block>152</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>985</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1282</index><block>152</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>985</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1284</index><block>152</block><killingTest/><description>removed call to org/apache/commons/math3/util/FastMath::atan2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>998</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1296</index><block>154</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test040</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>999</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1302</index><block>154</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test039</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1000</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1307</index><block>154</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1000</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1312</index><block>155</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test039</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1003</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1330</index><block>157</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1003</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1332</index><block>157</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1003</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1333</index><block>157</block><killingTest/><description>removed call to org/apache/commons/math3/util/FastMath::atan2</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1003</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1338</index><block>157</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1003</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1339</index><block>157</block><killingTest/><description>removed call to org/apache/commons/math3/util/FastMath::acos</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1003</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1344</index><block>157</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1003</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1346</index><block>157</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1003</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1348</index><block>157</block><killingTest/><description>removed call to org/apache/commons/math3/util/FastMath::atan2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1016</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1360</index><block>159</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test043</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1017</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1366</index><block>159</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test037</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1018</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1371</index><block>159</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1018</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1376</index><block>160</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test037</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1021</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1394</index><block>162</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test043</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1021</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1396</index><block>162</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test043</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1021</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1398</index><block>162</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test043</killingTest><description>removed call to org/apache/commons/math3/util/FastMath::atan2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1021</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1403</index><block>162</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test043</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1021</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1404</index><block>162</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test043</killingTest><description>removed call to org/apache/commons/math3/util/FastMath::acos</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1021</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1409</index><block>162</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test043</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1021</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1411</index><block>162</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test043</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1021</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1412</index><block>162</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test043</killingTest><description>removed call to org/apache/commons/math3/util/FastMath::atan2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1034</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1424</index><block>164</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test036</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1035</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1430</index><block>164</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test035</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1036</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1435</index><block>164</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1036</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1440</index><block>165</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test035</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1039</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1458</index><block>167</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test036</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1039</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1460</index><block>167</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test036</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1039</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1462</index><block>167</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test036</killingTest><description>removed call to org/apache/commons/math3/util/FastMath::atan2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1039</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1467</index><block>167</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test036</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1039</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1468</index><block>167</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test036</killingTest><description>removed call to org/apache/commons/math3/util/FastMath::acos</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1039</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1473</index><block>167</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test036</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1039</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1475</index><block>167</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test036</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1039</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1476</index><block>167</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test036</killingTest><description>removed call to org/apache/commons/math3/util/FastMath::atan2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1052</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1483</index><block>168</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test038</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyTo</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1053</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1489</index><block>168</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test034</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::applyInverseTo</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1054</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1494</index><block>168</block><killingTest/><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1054</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1499</index><block>169</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test034</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1057</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1517</index><block>171</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test038</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1057</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1519</index><block>171</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test038</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1057</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1520</index><block>171</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test038</killingTest><description>removed call to org/apache/commons/math3/util/FastMath::atan2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1057</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1525</index><block>171</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test038</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getZ</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1057</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1526</index><block>171</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test038</killingTest><description>removed call to org/apache/commons/math3/util/FastMath::acos</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1057</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1531</index><block>171</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test038</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getY</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1057</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1533</index><block>171</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test038</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::getX</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1057</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>1535</index><block>171</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test038</killingTest><description>removed call to org/apache/commons/math3/util/FastMath::atan2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>641</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>70</index><block>58</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test095</killingTest><description>replaced return value with null for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>659</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>134</index><block>63</block><killingTest/><description>replaced return value with null for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>198</index><block>68</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test087</killingTest><description>replaced return value with null for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>695</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>263</index><block>73</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>replaced return value with null for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>328</index><block>78</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test092</killingTest><description>replaced return value with null for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>731</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>392</index><block>83</block><killingTest/><description>replaced return value with null for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>749</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>456</index><block>88</block><killingTest/><description>replaced return value with null for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>767</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>520</index><block>93</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test063</killingTest><description>replaced return value with null for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>785</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>584</index><block>98</block><killingTest/><description>replaced return value with null for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>803</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>648</index><block>103</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test071</killingTest><description>replaced return value with null for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>821</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>712</index><block>108</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test058</killingTest><description>replaced return value with null for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>839</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>771</index><block>112</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test060</killingTest><description>replaced return value with null for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>859</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>836</index><block>117</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test054</killingTest><description>replaced return value with null for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>877</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>900</index><block>122</block><killingTest/><description>replaced return value with null for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>895</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>964</index><block>127</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test051</killingTest><description>replaced return value with null for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>913</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>1029</index><block>132</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test050</killingTest><description>replaced return value with null for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>931</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>1094</index><block>137</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test048</killingTest><description>replaced return value with null for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>949</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>1158</index><block>142</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test088</killingTest><description>replaced return value with null for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>967</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>1222</index><block>147</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test045</killingTest><description>replaced return value with null for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>985</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>1286</index><block>152</block><killingTest/><description>replaced return value with null for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1003</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>1350</index><block>157</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test040</killingTest><description>replaced return value with null for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1021</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>1414</index><block>162</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test043</killingTest><description>replaced return value with null for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1039</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>1478</index><block>167</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test036</killingTest><description>replaced return value with null for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1057</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>1537</index><block>171</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test038</killingTest><description>replaced return value with null for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>628</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>53</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test074</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='28'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>629</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>10</index><block>54</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='26'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>647</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>75</index><block>59</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>665</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>139</index><block>64</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test074</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>683</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>203</index><block>69</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>701</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>268</index><block>74</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test092</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='17'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>719</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>333</index><block>79</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='14'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>737</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>397</index><block>84</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>755</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>461</index><block>89</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>773</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>525</index><block>94</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>791</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>589</index><block>99</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test071</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>809</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>653</index><block>104</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test058</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='23'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>847</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>776</index><block>113</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='22'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>865</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>841</index><block>118</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='20'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>883</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>905</index><block>123</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='19'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>901</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>969</index><block>128</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test050</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>919</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>1034</index><block>133</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test048</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='15'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>937</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>1099</index><block>138</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='13'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>955</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>1163</index><block>143</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>973</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>1227</index><block>148</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>991</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>1291</index><block>153</block><killingTest/><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1009</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>1355</index><block>158</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test043</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1027</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>1419</index><block>163</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test036</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='46'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>628</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>53</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test036</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>629</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>10</index><block>54</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test066</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>647</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>75</index><block>59</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test066</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>665</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>139</index><block>64</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test066</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>683</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>203</index><block>69</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test066</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>701</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>268</index><block>74</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test066</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>719</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>333</index><block>79</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test066</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>737</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>397</index><block>84</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test060</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>755</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>461</index><block>89</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test060</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>773</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>525</index><block>94</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test057</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>791</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>589</index><block>99</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test057</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>809</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>653</index><block>104</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test060</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>847</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>776</index><block>113</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test039</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>865</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>841</index><block>118</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test039</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>883</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>905</index><block>123</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test039</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>901</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>969</index><block>128</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test039</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>919</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>1034</index><block>133</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test039</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>937</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>1099</index><block>138</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test039</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>955</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>1163</index><block>143</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test036</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>973</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>1227</index><block>148</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test036</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>991</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>1291</index><block>153</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test036</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1009</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>1355</index><block>158</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test036</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1027</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>1419</index><block>163</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test038</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>638</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>29</index><block>55</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test095</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>638</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>34</index><block>56</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test078</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>656</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>94</index><block>60</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test077</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>656</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>99</index><block>61</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test076</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>674</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>158</index><block>65</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test087</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>674</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>163</index><block>66</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test074</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>692</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>222</index><block>70</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>692</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>227</index><block>71</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>710</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>287</index><block>75</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test092</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>710</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>292</index><block>76</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>728</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>352</index><block>80</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test070</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>728</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>357</index><block>81</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test068</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>746</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>416</index><block>85</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test067</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>746</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>421</index><block>86</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test065</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>764</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>480</index><block>90</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test063</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>764</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>485</index><block>91</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test064</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>782</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>544</index><block>95</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test062</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>782</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>549</index><block>96</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test061</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>800</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>608</index><block>100</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test071</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>800</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>613</index><block>101</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test059</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>818</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>672</index><block>105</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test058</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>818</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>677</index><block>106</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test056</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>836</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>731</index><block>109</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test060</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>836</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>736</index><block>110</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test055</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>856</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>795</index><block>114</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test054</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>856</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>800</index><block>115</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>874</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>860</index><block>119</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test053</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>874</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>865</index><block>120</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>892</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>924</index><block>124</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test051</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>892</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>929</index><block>125</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>910</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>988</index><block>129</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test050</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>910</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>993</index><block>130</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test049</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>928</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>1053</index><block>134</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test048</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>928</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>1058</index><block>135</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test047</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>946</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>1118</index><block>139</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test088</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>946</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>1123</index><block>140</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>964</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>1182</index><block>144</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test045</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>964</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>1187</index><block>145</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test044</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>982</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>1246</index><block>149</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test097</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>982</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>1251</index><block>150</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test041</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1000</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>1310</index><block>154</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test040</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1000</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>1315</index><block>155</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test039</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1018</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>1374</index><block>159</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test043</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1018</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>1379</index><block>160</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test037</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1036</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>1438</index><block>164</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test036</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1036</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>1443</index><block>165</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test035</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1054</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>1497</index><block>168</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test038</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1054</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>1502</index><block>169</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test034</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>638</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>29</index><block>55</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>638</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>34</index><block>56</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test095</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>656</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>94</index><block>60</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>656</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>99</index><block>61</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test077</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>674</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>158</index><block>65</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test075</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>674</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>163</index><block>66</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test087</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>692</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>222</index><block>70</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test072</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>692</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>227</index><block>71</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>710</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>287</index><block>75</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test098</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>710</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>292</index><block>76</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test092</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>728</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>352</index><block>80</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test069</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>728</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>357</index><block>81</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test070</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>746</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>416</index><block>85</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test066</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>746</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>421</index><block>86</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test067</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>764</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>480</index><block>90</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>764</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>485</index><block>91</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test063</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>782</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>544</index><block>95</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>782</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>549</index><block>96</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test062</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>800</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>608</index><block>100</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>800</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>613</index><block>101</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test071</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>818</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>672</index><block>105</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test057</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>818</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>677</index><block>106</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test058</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>836</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>731</index><block>109</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>836</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>736</index><block>110</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test060</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>856</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>795</index><block>114</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>856</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>800</index><block>115</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test054</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>874</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>860</index><block>119</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test052</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>874</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>865</index><block>120</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test053</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>892</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>924</index><block>124</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>892</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>929</index><block>125</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test051</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>910</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>988</index><block>129</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>910</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>993</index><block>130</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test050</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>928</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>1053</index><block>134</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>928</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>1058</index><block>135</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test048</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>946</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>1118</index><block>139</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test046</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>946</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>1123</index><block>140</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test088</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>964</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>1182</index><block>144</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>964</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>1187</index><block>145</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test045</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>982</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>1246</index><block>149</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test042</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>982</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>1251</index><block>150</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test097</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1000</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>1310</index><block>154</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1000</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>1315</index><block>155</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test040</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1018</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>1374</index><block>159</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1018</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>1379</index><block>160</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test043</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1036</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>1438</index><block>164</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1036</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>1443</index><block>165</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test036</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1054</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>1497</index><block>168</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1054</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>1502</index><block>169</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test038</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>641</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>70</index><block>58</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test095</killingTest><description>mutated return of Object value for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>659</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>134</index><block>63</block><killingTest/><description>mutated return of Object value for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>198</index><block>68</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test087</killingTest><description>mutated return of Object value for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>695</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>263</index><block>73</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>mutated return of Object value for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>713</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>328</index><block>78</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test092</killingTest><description>mutated return of Object value for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>731</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>392</index><block>83</block><killingTest/><description>mutated return of Object value for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>749</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>456</index><block>88</block><killingTest/><description>mutated return of Object value for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>767</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>520</index><block>93</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test063</killingTest><description>mutated return of Object value for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>785</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>584</index><block>98</block><killingTest/><description>mutated return of Object value for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>803</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>648</index><block>103</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test071</killingTest><description>mutated return of Object value for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>821</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>712</index><block>108</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test058</killingTest><description>mutated return of Object value for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>839</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>771</index><block>112</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test060</killingTest><description>mutated return of Object value for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>859</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>836</index><block>117</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test054</killingTest><description>mutated return of Object value for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>877</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>900</index><block>122</block><killingTest/><description>mutated return of Object value for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>895</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>964</index><block>127</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test051</killingTest><description>mutated return of Object value for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>913</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>1029</index><block>132</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test050</killingTest><description>mutated return of Object value for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>931</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>1094</index><block>137</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test048</killingTest><description>mutated return of Object value for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>949</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>1158</index><block>142</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test088</killingTest><description>mutated return of Object value for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>967</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>1222</index><block>147</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test045</killingTest><description>mutated return of Object value for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>985</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>1286</index><block>152</block><killingTest/><description>mutated return of Object value for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1003</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>1350</index><block>157</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test040</killingTest><description>mutated return of Object value for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1021</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>1414</index><block>162</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test043</killingTest><description>mutated return of Object value for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1039</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>1478</index><block>167</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test036</killingTest><description>mutated return of Object value for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAngles</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D</methodDescription><lineNumber>1057</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>1537</index><block>171</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test038</killingTest><description>mutated return of Object value for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAngles to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAxis</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>526</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>36</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test080</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAxis</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAxis</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>526</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>6</index><block>36</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test080</killingTest><description>replaced return value with null for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAxis</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAxis</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>526</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>36</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test080</killingTest><description>mutated return of Object value for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAxis to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAxis</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>547</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>60</index><block>44</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test096</killingTest><description>replaced call to org/apache/commons/math3/util/FastMath::sqrt with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAxis</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>550</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>86</index><block>45</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test030</killingTest><description>replaced call to org/apache/commons/math3/util/FastMath::sqrt with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAxis</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>546</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>55</index><block>43</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAxis</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>548</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>79</index><block>44</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test096</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAxis</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>551</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>105</index><block>45</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test080</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Vector3D::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAxis</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>542</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>24</index><block>37</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test081</killingTest><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAxis</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>545</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>43</index><block>42</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test030</killingTest><description>Substituted 1.0 with 2.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAxis</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>545</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>46</index><block>43</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test096</killingTest><description>Substituted -1.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAxis</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>546</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>53</index><block>43</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test030</killingTest><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAxis</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>550</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>84</index><block>45</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test030</killingTest><description>removed negation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAxis</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>541</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>37</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test081</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAxis</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>541</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>37</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test081</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAxis</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>541</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>37</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test096</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAxis</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>541</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>37</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test081</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAxis</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>541</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>37</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test030</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAxis</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>547</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>61</index><block>44</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test096</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAxis</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>548</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>70</index><block>44</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test096</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAxis</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>548</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>74</index><block>44</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test096</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAxis</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>548</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>78</index><block>44</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test096</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAxis</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>550</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>87</index><block>45</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test030</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAxis</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>551</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>96</index><block>45</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test030</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAxis</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>551</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>100</index><block>45</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test030</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAxis</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>551</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>104</index><block>45</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test030</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAxis</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>542</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>37</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test080</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAxis</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>543</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>38</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test081</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAxis</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>545</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>41</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test096</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAxis</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>546</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>43</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test096</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAxis</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>547</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>60</index><block>44</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test096</killingTest><description>removed call to org/apache/commons/math3/util/FastMath::sqrt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAxis</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>550</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>86</index><block>45</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test030</killingTest><description>removed call to org/apache/commons/math3/util/FastMath::sqrt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAxis</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>543</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>37</index><block>40</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test081</killingTest><description>replaced return value with null for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAxis</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAxis</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>548</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>80</index><block>44</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test096</killingTest><description>replaced return value with null for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAxis</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAxis</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>551</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>106</index><block>45</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test080</killingTest><description>replaced return value with null for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAxis</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAxis</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>542</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>26</index><block>37</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test081</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAxis</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>543</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>31</index><block>38</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test024</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAxis</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>545</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>42</index><block>41</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test030</killingTest><description>removed conditional - replaced equality check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAxis</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>542</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>26</index><block>37</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test080</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAxis</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>543</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>31</index><block>38</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test081</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAxis</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>545</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>42</index><block>41</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test096</killingTest><description>removed conditional - replaced equality check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAxis</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>546</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>55</index><block>43</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test096</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAxis</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>546</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>55</index><block>43</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test030</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAxis</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>543</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>37</index><block>40</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test081</killingTest><description>mutated return of Object value for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAxis to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAxis</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>548</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>80</index><block>44</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test096</killingTest><description>mutated return of Object value for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAxis to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getAxis</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;</methodDescription><lineNumber>551</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>106</index><block>45</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test080</killingTest><description>mutated return of Object value for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getAxis to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1086</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>83</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 3 with 4</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1087</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>89</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test033</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1087</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>90</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 3 with 4</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1088</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>96</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test033</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1088</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>97</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 3 with 4</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1089</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>103</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test033</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1089</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>104</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 3 with 4</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1091</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>110</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1091</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>112</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1091</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>113</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 2.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1091</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>118</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 1.0 with 2.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1092</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>124</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1092</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>126</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1092</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>127</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 2.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1093</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>136</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test033</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1093</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>138</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1093</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>139</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 2.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1095</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>148</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1095</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>150</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1095</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>151</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 2.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1096</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>160</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1096</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>162</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1096</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>163</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 2.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1096</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>168</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 1.0 with 2.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1097</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>174</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test033</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1097</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>176</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1097</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>177</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 2.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1099</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>186</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1099</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>188</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test033</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1099</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>189</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 2.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>198</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>200</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test033</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>201</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 2.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>210</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test033</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>212</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test033</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>213</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 2.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>218</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 1.0 with 2.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1074</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1075</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1076</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1077</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1078</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1079</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>47</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1080</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>55</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1081</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>63</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1082</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>71</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1083</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>79</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1091</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>116</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1091</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>117</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1091</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>119</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1092</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>130</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1092</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>131</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1093</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>142</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1093</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>143</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1095</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>154</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1095</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>155</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1096</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>166</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1096</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>167</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1096</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>169</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1097</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>180</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1097</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>181</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1099</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>192</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1099</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>193</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>204</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>205</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>216</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>217</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>219</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>224</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test033</killingTest><description>replaced return value with null for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getMatrix</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getMatrix</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>1103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>224</index><block>172</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test033</killingTest><description>mutated return of Object value for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getMatrix to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getQ0</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>491</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>32</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test080</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getQ0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getQ0</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>491</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>32</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getQ0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getQ1</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>498</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>33</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test080</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getQ1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getQ1</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>498</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>33</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test080</killingTest><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getQ1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getQ2</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>34</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test080</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getQ2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getQ2</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>34</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getQ2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getQ3</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>512</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>35</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>replaced double return with 0.0d for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getQ3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>getQ3</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>512</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>35</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test073</killingTest><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/geometry/euclidean/threed/Rotation::getQ3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>437</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>40</index><block>25</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test086</killingTest><description>replaced call to org/apache/commons/math3/util/FastMath::sqrt with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>446</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>142</index><block>27</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test083</killingTest><description>replaced call to org/apache/commons/math3/util/FastMath::sqrt with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>455</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>244</index><block>29</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>replaced call to org/apache/commons/math3/util/FastMath::sqrt with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>340</index><block>30</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::sqrt with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>435</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>31</index><block>24</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>133</index><block>26</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>235</index><block>28</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>24</block><killingTest/><description>Substituted 4 with 5</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>9</index><block>24</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test083</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>11</index><block>24</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>14</index><block>24</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test086</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>16</index><block>24</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test083</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>20</index><block>24</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test095</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>22</index><block>24</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test095</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>435</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>29</index><block>24</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test086</killingTest><description>Substituted -0.19 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>437</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>35</index><block>25</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test086</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>437</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>36</index><block>25</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test086</killingTest><description>Substituted 0.5 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>437</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>38</index><block>25</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test086</killingTest><description>Substituted 1.0 with 2.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>438</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>45</index><block>25</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test086</killingTest><description>Substituted 0.25 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>438</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>47</index><block>25</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test086</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>439</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>54</index><block>25</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>439</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>57</index><block>25</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test086</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>439</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>59</index><block>25</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test086</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>439</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>62</index><block>25</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test086</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>439</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>64</index><block>25</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test086</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>440</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>72</index><block>25</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test086</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>440</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>75</index><block>25</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test086</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>440</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>77</index><block>25</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test086</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>440</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>80</index><block>25</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test086</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>440</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>82</index><block>25</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test086</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>90</index><block>25</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test086</killingTest><description>Substituted 3 with 4</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>93</index><block>25</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test086</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>95</index><block>25</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test086</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>98</index><block>25</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test086</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>100</index><block>25</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test086</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>443</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>111</index><block>26</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test083</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>443</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>113</index><block>26</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test083</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>443</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>116</index><block>26</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>443</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>118</index><block>26</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>443</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>122</index><block>26</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test095</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>443</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>124</index><block>26</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test095</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>131</index><block>26</block><killingTest/><description>Substituted -0.19 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>446</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>137</index><block>27</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test083</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>446</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>138</index><block>27</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test083</killingTest><description>Substituted 0.5 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>446</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>140</index><block>27</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test083</killingTest><description>Substituted 1.0 with 2.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>447</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>147</index><block>27</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test083</killingTest><description>Substituted 0.25 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>447</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>149</index><block>27</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test083</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>156</index><block>27</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>159</index><block>27</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>161</index><block>27</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test083</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>164</index><block>27</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test083</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>166</index><block>27</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>174</index><block>27</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test083</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>177</index><block>27</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test083</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>179</index><block>27</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test083</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>182</index><block>27</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test083</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>184</index><block>27</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test083</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>450</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>192</index><block>27</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test083</killingTest><description>Substituted 3 with 4</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>450</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>195</index><block>27</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>450</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>197</index><block>27</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test083</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>450</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>200</index><block>27</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test083</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>450</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>202</index><block>27</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>213</index><block>28</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>215</index><block>28</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>218</index><block>28</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>220</index><block>28</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>224</index><block>28</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test095</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>226</index><block>28</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test095</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>233</index><block>28</block><killingTest/><description>Substituted -0.19 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>455</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>239</index><block>29</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>455</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>240</index><block>29</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 0.5 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>455</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>242</index><block>29</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 1.0 with 2.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>249</index><block>29</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 0.25 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>251</index><block>29</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>258</index><block>29</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>261</index><block>29</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>263</index><block>29</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>266</index><block>29</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>268</index><block>29</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>276</index><block>29</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>279</index><block>29</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>281</index><block>29</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>284</index><block>29</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>286</index><block>29</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>459</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>294</index><block>29</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 3 with 4</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>459</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>297</index><block>29</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>459</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>299</index><block>29</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>459</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>302</index><block>29</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>459</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>304</index><block>29</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>315</index><block>30</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test095</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>317</index><block>30</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test095</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>320</index><block>30</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>322</index><block>30</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>326</index><block>30</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>328</index><block>30</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>335</index><block>30</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test095</killingTest><description>Substituted 3 with 4</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>336</index><block>30</block><killingTest/><description>Substituted 0.5 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>338</index><block>30</block><killingTest/><description>Substituted 1.0 with 2.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>345</index><block>30</block><killingTest/><description>Substituted 0.25 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>347</index><block>30</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test095</killingTest><description>Substituted 3 with 4</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>465</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>354</index><block>30</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>465</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>357</index><block>30</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>465</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>359</index><block>30</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>465</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>362</index><block>30</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>465</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>364</index><block>30</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>372</index><block>30</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>375</index><block>30</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>377</index><block>30</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test095</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>380</index><block>30</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test095</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>382</index><block>30</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>390</index><block>30</block><killingTest/><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>393</index><block>30</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test095</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>395</index><block>30</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>398</index><block>30</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>400</index><block>30</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test095</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>24</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test086</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>24</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>437</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>25</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test086</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>437</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>41</index><block>25</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test086</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>438</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>49</index><block>25</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test086</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>439</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>66</index><block>25</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test086</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>439</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>67</index><block>25</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test086</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>440</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>84</index><block>25</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test086</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>440</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>85</index><block>25</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test086</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>102</index><block>25</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test086</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>103</index><block>25</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>443</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>120</index><block>26</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>443</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>126</index><block>26</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>446</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>141</index><block>27</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test083</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>446</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>143</index><block>27</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test083</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>447</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>151</index><block>27</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test083</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>168</index><block>27</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>169</index><block>27</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>186</index><block>27</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test083</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>187</index><block>27</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test083</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>450</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>204</index><block>27</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>450</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>205</index><block>27</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>222</index><block>28</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>228</index><block>28</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>455</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>243</index><block>29</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>455</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>245</index><block>29</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>253</index><block>29</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>270</index><block>29</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>271</index><block>29</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>288</index><block>29</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>289</index><block>29</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>459</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>306</index><block>29</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>459</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>307</index><block>29</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>324</index><block>30</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>330</index><block>30</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>339</index><block>30</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>341</index><block>30</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>349</index><block>30</block><killingTest/><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>465</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>366</index><block>30</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>465</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>367</index><block>30</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>384</index><block>30</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>385</index><block>30</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>402</index><block>30</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>403</index><block>30</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>435</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>24</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>133</index><block>26</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>235</index><block>28</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>437</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>40</index><block>25</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test086</killingTest><description>removed call to org/apache/commons/math3/util/FastMath::sqrt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>446</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>142</index><block>27</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test083</killingTest><description>removed call to org/apache/commons/math3/util/FastMath::sqrt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>455</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>244</index><block>29</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>removed call to org/apache/commons/math3/util/FastMath::sqrt</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>340</index><block>30</block><killingTest/><description>removed call to org/apache/commons/math3/util/FastMath::sqrt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>472</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>408</index><block>30</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test095</killingTest><description>replaced return value with null for org/apache/commons/math3/geometry/euclidean/threed/Rotation::mat2quat</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>435</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>31</index><block>24</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test086</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>133</index><block>26</block><killingTest/><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>235</index><block>28</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>435</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>31</index><block>24</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>133</index><block>26</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>235</index><block>28</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>mat2quat</mutatedMethod><methodDescription>([[D)[D</methodDescription><lineNumber>472</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>408</index><block>30</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test095</killingTest><description>mutated return of Object value for org/apache/commons/math3/geometry/euclidean/threed/Rotation::mat2quat to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>640</index><block>188</block><killingTest/><description>replaced call to org/apache/commons/math3/util/FastMath::abs with argument</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>110</index><block>187</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>643</index><block>188</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>723</index><block>191</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test033</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/NotARotationMatrixException::&#60;init&#62;</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>107</index><block>187</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>187</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>10</index><block>187</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1311</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>16</index><block>187</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test033</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>22</index><block>187</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1313</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>28</index><block>187</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test086</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1314</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>34</index><block>187</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test033</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>40</index><block>187</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>46</index><block>187</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1317</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>52</index><block>187</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test033</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>58</index><block>187</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>64</index><block>187</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>70</index><block>187</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test033</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>75</index><block>187</block><killingTest/><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>79</index><block>187</block><killingTest/><description>Substituted 3 with 4</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>80</index><block>187</block><killingTest/><description>Substituted 3 with 4</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1325</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>86</index><block>187</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>92</index><block>187</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1327</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>98</index><block>187</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test033</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>103</index><block>187</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>109</index><block>187</block><killingTest/><description>Substituted 11 with 12</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>114</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>119</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>125</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>134</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>139</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>145</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>154</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test033</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>159</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test033</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>165</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test033</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>174</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test086</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>179</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>185</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>194</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test083</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>199</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>205</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>214</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test033</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>219</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test033</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>225</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test033</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1340</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>234</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1340</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>239</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1340</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>245</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>254</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>259</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>265</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>274</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test033</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>279</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test033</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>285</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test033</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>294</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>296</index><block>188</block><killingTest/><description>Substituted 0.5 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>309</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>318</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>320</index><block>188</block><killingTest/><description>Substituted 0.5 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>333</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>342</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test033</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>344</index><block>188</block><killingTest/><description>Substituted 0.5 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>357</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test033</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>366</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>368</index><block>188</block><killingTest/><description>Substituted 0.5 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>381</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>390</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>392</index><block>188</block><killingTest/><description>Substituted 0.5 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>405</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>414</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test033</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>416</index><block>188</block><killingTest/><description>Substituted 0.5 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>429</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test033</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>438</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test086</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>440</index><block>188</block><killingTest/><description>Substituted 0.5 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>453</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test086</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>462</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>464</index><block>188</block><killingTest/><description>Substituted 0.5 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>477</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>486</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test033</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>488</index><block>188</block><killingTest/><description>Substituted 0.5 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>501</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test033</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>510</index><block>188</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>513</index><block>188</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>520</index><block>188</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>523</index><block>188</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>530</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test033</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>533</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test033</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>540</index><block>188</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>543</index><block>188</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>550</index><block>188</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>553</index><block>188</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>560</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test033</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>563</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test033</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>570</index><block>188</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>573</index><block>188</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>580</index><block>188</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>583</index><block>188</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1364</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>590</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test033</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1364</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>593</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test033</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1377</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>651</index><block>190</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1378</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>657</index><block>190</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>663</index><block>190</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test033</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>669</index><block>190</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1381</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>675</index><block>190</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>681</index><block>190</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test033</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1383</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>687</index><block>190</block><killingTest/><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1384</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>693</index><block>190</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>699</index><block>190</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test033</killingTest><description>Substituted 2 with 3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>714</index><block>191</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test033</killingTest><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>717</index><block>191</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test033</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>719</index><block>191</block><killingTest/><description>Substituted 1 with 0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>117</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>122</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>123</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>128</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>129</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>137</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>142</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>143</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>148</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>149</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>157</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>162</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>163</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>168</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>169</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>177</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>182</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>183</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>188</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>189</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>197</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>202</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>203</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>208</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>209</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>217</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>222</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>223</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>228</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>229</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1340</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>237</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1340</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>242</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1340</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>243</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1340</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>248</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1340</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>249</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>257</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>262</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>263</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>268</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>269</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>277</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>282</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>283</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>288</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>289</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>299</index><block>188</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>302</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>303</index><block>188</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>306</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>307</index><block>188</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>311</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>312</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>313</index><block>188</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>323</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>326</index><block>188</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>327</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>330</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>331</index><block>188</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>335</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>336</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>337</index><block>188</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>347</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>350</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>351</index><block>188</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>354</index><block>188</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>355</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>359</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test086</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>360</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>361</index><block>188</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>371</index><block>188</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>374</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>375</index><block>188</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>378</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>379</index><block>188</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>383</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>384</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>385</index><block>188</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>395</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>398</index><block>188</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>399</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>402</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>403</index><block>188</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>407</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>408</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>409</index><block>188</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>419</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>422</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>423</index><block>188</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>426</index><block>188</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>427</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>431</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>432</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>433</index><block>188</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>443</index><block>188</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>446</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>447</index><block>188</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>450</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>451</index><block>188</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>455</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test086</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>456</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>457</index><block>188</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>467</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>470</index><block>188</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>471</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>474</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>475</index><block>188</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>479</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>480</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>481</index><block>188</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>491</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>494</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>495</index><block>188</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>498</index><block>188</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>499</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>503</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>504</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>505</index><block>188</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>515</index><block>188</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>525</index><block>188</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>535</index><block>188</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>545</index><block>188</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>555</index><block>188</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>565</index><block>188</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>575</index><block>188</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>585</index><block>188</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1364</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>595</index><block>188</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>601</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>604</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>605</index><block>188</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>608</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>609</index><block>188</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>612</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>613</index><block>188</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>616</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>617</index><block>188</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>620</index><block>188</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>621</index><block>188</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>624</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>625</index><block>188</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>628</index><block>188</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>629</index><block>188</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>632</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>633</index><block>188</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>639</index><block>188</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>720</index><block>191</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>110</index><block>187</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>643</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test033</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>640</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test033</killingTest><description>removed call to org/apache/commons/math3/util/FastMath::abs</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>721</index><block>191</block><killingTest/><description>removed call to java/lang/Integer::valueOf</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1373</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>647</index><block>189</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>replaced return value with null for org/apache/commons/math3/geometry/euclidean/threed/Rotation::orthogonalizeMatrix</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>110</index><block>187</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>643</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>removed conditional - replaced comparison check with false</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>110</index><block>187</block><killingTest/><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>643</index><block>188</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test033</killingTest><description>removed conditional - replaced comparison check with true</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1373</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>647</index><block>189</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test082</killingTest><description>mutated return of Object value for org/apache/commons/math3/geometry/euclidean/threed/Rotation::orthogonalizeMatrix to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>orthogonalizeMatrix</mutatedMethod><methodDescription>([[DD)[[D</methodDescription><lineNumber>1331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>107</index><block>187</block><killingTest/><description>Removed increment 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>15</index><block>31</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test096</killingTest><description>removed call to org/apache/commons/math3/geometry/euclidean/threed/Rotation::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>14</index><block>31</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test096</killingTest><description>Substituted 0 with 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>7</index><block>31</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test096</killingTest><description>removed negation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>16</index><block>31</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test096</killingTest><description>replaced return value with null for org/apache/commons/math3/geometry/euclidean/threed/Rotation::revert</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rotation.java</sourceFile><mutatedClass>org.apache.commons.math3.geometry.euclidean.threed.Rotation</mutatedClass><mutatedMethod>revert</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;</methodDescription><lineNumber>484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>31</block><killingTest>org.apache.commons.math3.geometry.euclidean.threed.Rotation_ESTest.test096</killingTest><description>mutated return of Object value for org/apache/commons/math3/geometry/euclidean/threed/Rotation::revert to ( if (x != null) null else throw new RuntimeException )</description></mutation>
</mutations>

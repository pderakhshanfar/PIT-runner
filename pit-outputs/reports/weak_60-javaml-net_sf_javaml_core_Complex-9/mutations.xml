<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>1</block><killingTest>net.sf.javaml.core.Complex_ESTest.test11</killingTest><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>1</block><killingTest>net.sf.javaml.core.Complex_ESTest.test11</killingTest><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>0</block><killingTest>net.sf.javaml.core.Complex_ESTest.test14</killingTest><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>13</index><block>0</block><killingTest>net.sf.javaml.core.Complex_ESTest.test14</killingTest><description>Substituted 0.0 with 1.0</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTest>net.sf.javaml.core.Complex_ESTest.test14</killingTest><description>Removed assignment to member variable im</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>0</block><killingTest>net.sf.javaml.core.Complex_ESTest.test14</killingTest><description>Removed assignment to member variable re</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>19</index><block>0</block><killingTest>net.sf.javaml.core.Complex_ESTest.test13</killingTest><description>Removed assignment to member variable re</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>24</index><block>0</block><killingTest>net.sf.javaml.core.Complex_ESTest.test13</killingTest><description>Removed assignment to member variable im</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>14</index><block>3</block><killingTest>net.sf.javaml.core.Complex_ESTest.test13</killingTest><description>replaced call to java/lang/Math::sqrt with argument</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>3</block><killingTest>net.sf.javaml.core.Complex_ESTest.test13</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>3</block><killingTest>net.sf.javaml.core.Complex_ESTest.test13</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>3</block><killingTest>net.sf.javaml.core.Complex_ESTest.test13</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>3</block><killingTest>net.sf.javaml.core.Complex_ESTest.test13</killingTest><description>removed call to java/lang/Math::sqrt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>15</index><block>3</block><killingTest>net.sf.javaml.core.Complex_ESTest.test13</killingTest><description>replaced double return with 0.0d for net/sf/javaml/core/Complex::abs</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>3</block><killingTest>net.sf.javaml.core.Complex_ESTest.test13</killingTest><description>replaced return of double value with -(x + 1) for net/sf/javaml/core/Complex::abs</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>conjugate</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>6</index><block>8</block><killingTest>net.sf.javaml.core.Complex_ESTest.test02</killingTest><description>removed negation</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>conjugate</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>7</index><block>8</block><killingTest>net.sf.javaml.core.Complex_ESTest.test02</killingTest><description>Removed assignment to member variable im</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>minus</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Complex;)V</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><block>5</block><killingTest>net.sf.javaml.core.Complex_ESTest.test08</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>minus</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Complex;)V</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>5</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>minus</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Complex;)V</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>5</block><killingTest>net.sf.javaml.core.Complex_ESTest.test08</killingTest><description>Removed assignment to member variable re</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>minus</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Complex;)V</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>18</index><block>5</block><killingTest/><description>Removed assignment to member variable im</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Complex;D)Lnet/sf/javaml/core/Complex;</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>13</index><block>10</block><killingTest>net.sf.javaml.core.Complex_ESTest.test13</killingTest><description>removed call to net/sf/javaml/core/Complex::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Complex;D)Lnet/sf/javaml/core/Complex;</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><block>10</block><killingTest>net.sf.javaml.core.Complex_ESTest.test13</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Complex;D)Lnet/sf/javaml/core/Complex;</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>10</block><killingTest>net.sf.javaml.core.Complex_ESTest.test13</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Complex;D)Lnet/sf/javaml/core/Complex;</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>14</index><block>10</block><killingTest>net.sf.javaml.core.Complex_ESTest.test13</killingTest><description>replaced return value with null for net/sf/javaml/core/Complex::multiply</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Complex;D)Lnet/sf/javaml/core/Complex;</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>10</block><killingTest>net.sf.javaml.core.Complex_ESTest.test13</killingTest><description>mutated return of Object value for net/sf/javaml/core/Complex::multiply to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Complex;Lnet/sf/javaml/core/Complex;)Lnet/sf/javaml/core/Complex;</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>35</index><block>11</block><killingTest>net.sf.javaml.core.Complex_ESTest.test12</killingTest><description>removed call to net/sf/javaml/core/Complex::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Complex;Lnet/sf/javaml/core/Complex;)Lnet/sf/javaml/core/Complex;</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>11</block><killingTest>net.sf.javaml.core.Complex_ESTest.test12</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Complex;Lnet/sf/javaml/core/Complex;)Lnet/sf/javaml/core/Complex;</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>11</block><killingTest>net.sf.javaml.core.Complex_ESTest.test12</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Complex;Lnet/sf/javaml/core/Complex;)Lnet/sf/javaml/core/Complex;</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>11</block><killingTest>net.sf.javaml.core.Complex_ESTest.test12</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Complex;Lnet/sf/javaml/core/Complex;)Lnet/sf/javaml/core/Complex;</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>11</block><killingTest>net.sf.javaml.core.Complex_ESTest.test12</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Complex;Lnet/sf/javaml/core/Complex;)Lnet/sf/javaml/core/Complex;</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><block>11</block><killingTest>net.sf.javaml.core.Complex_ESTest.test12</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Complex;Lnet/sf/javaml/core/Complex;)Lnet/sf/javaml/core/Complex;</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>11</block><killingTest>net.sf.javaml.core.Complex_ESTest.test12</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Complex;Lnet/sf/javaml/core/Complex;)Lnet/sf/javaml/core/Complex;</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>36</index><block>11</block><killingTest>net.sf.javaml.core.Complex_ESTest.test12</killingTest><description>replaced return value with null for net/sf/javaml/core/Complex::multiply</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Complex;Lnet/sf/javaml/core/Complex;)Lnet/sf/javaml/core/Complex;</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>36</index><block>11</block><killingTest>net.sf.javaml.core.Complex_ESTest.test12</killingTest><description>mutated return of Object value for net/sf/javaml/core/Complex::multiply to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>plus</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Complex;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><block>4</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>plus</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Complex;)V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>4</block><killingTest>net.sf.javaml.core.Complex_ESTest.test06</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>plus</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Complex;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>4</block><killingTest/><description>Removed assignment to member variable re</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>plus</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Complex;)V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>18</index><block>4</block><killingTest>net.sf.javaml.core.Complex_ESTest.test06</killingTest><description>Removed assignment to member variable im</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>plus</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Complex;Lnet/sf/javaml/core/Complex;)Lnet/sf/javaml/core/Complex;</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>23</index><block>9</block><killingTest>net.sf.javaml.core.Complex_ESTest.test13</killingTest><description>removed call to net/sf/javaml/core/Complex::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>plus</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Complex;Lnet/sf/javaml/core/Complex;)Lnet/sf/javaml/core/Complex;</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>9</block><killingTest>net.sf.javaml.core.Complex_ESTest.test13</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>plus</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Complex;Lnet/sf/javaml/core/Complex;)Lnet/sf/javaml/core/Complex;</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>9</block><killingTest>net.sf.javaml.core.Complex_ESTest.test13</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>plus</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Complex;Lnet/sf/javaml/core/Complex;)Lnet/sf/javaml/core/Complex;</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>24</index><block>9</block><killingTest>net.sf.javaml.core.Complex_ESTest.test13</killingTest><description>replaced return value with null for net/sf/javaml/core/Complex::plus</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>plus</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Complex;Lnet/sf/javaml/core/Complex;)Lnet/sf/javaml/core/Complex;</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>24</index><block>9</block><killingTest>net.sf.javaml.core.Complex_ESTest.test13</killingTest><description>mutated return of Object value for net/sf/javaml/core/Complex::plus to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>times</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>7</block><killingTest>net.sf.javaml.core.Complex_ESTest.test04</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>times</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>7</block><killingTest>net.sf.javaml.core.Complex_ESTest.test03</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>times</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>8</index><block>7</block><killingTest/><description>Removed assignment to member variable re</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>times</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>16</index><block>7</block><killingTest>net.sf.javaml.core.Complex_ESTest.test03</killingTest><description>Removed assignment to member variable im</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>times</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Complex;)V</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>6</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>times</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Complex;)V</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>6</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>times</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Complex;)V</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>6</block><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>times</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Complex;)V</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>6</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>times</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Complex;)V</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><block>6</block><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>times</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Complex;)V</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>6</block><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>times</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Complex;)V</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>33</index><block>6</block><killingTest/><description>Removed assignment to member variable re</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>times</mutatedMethod><methodDescription>(Lnet/sf/javaml/core/Complex;)V</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>38</index><block>6</block><killingTest/><description>Removed assignment to member variable im</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>5</index><block>2</block><killingTest>net.sf.javaml.core.Complex_ESTest.test10</killingTest><description>removed call to java/lang/StringBuilder::&#60;init&#62;</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>17</index><block>2</block><killingTest>net.sf.javaml.core.Complex_ESTest.test10</killingTest><description>replaced return value with &#34;&#34; for net/sf/javaml/core/Complex::toString</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><block>2</block><killingTest>net.sf.javaml.core.Complex_ESTest.test10</killingTest><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>2</block><killingTest>net.sf.javaml.core.Complex_ESTest.test10</killingTest><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>2</block><killingTest>net.sf.javaml.core.Complex_ESTest.test10</killingTest><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>15</index><block>2</block><killingTest>net.sf.javaml.core.Complex_ESTest.test10</killingTest><description>removed call to java/lang/StringBuilder::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>16</index><block>2</block><killingTest>net.sf.javaml.core.Complex_ESTest.test10</killingTest><description>removed call to java/lang/StringBuilder::toString</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>2</block><killingTest>net.sf.javaml.core.Complex_ESTest.test10</killingTest><description>mutated return of Object value for net/sf/javaml/core/Complex::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>8</index><block>2</block><killingTest>net.sf.javaml.core.Complex_ESTest.test10</killingTest><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>10</index><block>2</block><killingTest>net.sf.javaml.core.Complex_ESTest.test10</killingTest><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>13</index><block>2</block><killingTest>net.sf.javaml.core.Complex_ESTest.test10</killingTest><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>net.sf.javaml.core.Complex</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>15</index><block>2</block><killingTest>net.sf.javaml.core.Complex_ESTest.test10</killingTest><description>replaced call to java/lang/StringBuilder::append with receiver</description></mutation>
</mutations>
